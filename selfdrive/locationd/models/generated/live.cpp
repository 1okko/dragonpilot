#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3996265270042170641) {
   out_3996265270042170641[0] = 0;
   out_3996265270042170641[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3996265270042170641[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3996265270042170641[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3996265270042170641[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3996265270042170641[5] = -sin(in_vec[1]);
   out_3996265270042170641[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3996265270042170641[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3996265270042170641[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3996265270042170641[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3996265270042170641[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3996265270042170641[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3996265270042170641[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3996265270042170641[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3996265270042170641[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3996265270042170641[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3996265270042170641[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3996265270042170641[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3461674683723829337) {
   out_3461674683723829337[0] = delta_x[0] + nom_x[0];
   out_3461674683723829337[1] = delta_x[1] + nom_x[1];
   out_3461674683723829337[2] = delta_x[2] + nom_x[2];
   out_3461674683723829337[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3461674683723829337[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3461674683723829337[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3461674683723829337[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3461674683723829337[7] = delta_x[6] + nom_x[7];
   out_3461674683723829337[8] = delta_x[7] + nom_x[8];
   out_3461674683723829337[9] = delta_x[8] + nom_x[9];
   out_3461674683723829337[10] = delta_x[9] + nom_x[10];
   out_3461674683723829337[11] = delta_x[10] + nom_x[11];
   out_3461674683723829337[12] = delta_x[11] + nom_x[12];
   out_3461674683723829337[13] = delta_x[12] + nom_x[13];
   out_3461674683723829337[14] = delta_x[13] + nom_x[14];
   out_3461674683723829337[15] = delta_x[14] + nom_x[15];
   out_3461674683723829337[16] = delta_x[15] + nom_x[16];
   out_3461674683723829337[17] = delta_x[16] + nom_x[17];
   out_3461674683723829337[18] = delta_x[17] + nom_x[18];
   out_3461674683723829337[19] = delta_x[18] + nom_x[19];
   out_3461674683723829337[20] = delta_x[19] + nom_x[20];
   out_3461674683723829337[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7385553611252329077) {
   out_7385553611252329077[0] = -nom_x[0] + true_x[0];
   out_7385553611252329077[1] = -nom_x[1] + true_x[1];
   out_7385553611252329077[2] = -nom_x[2] + true_x[2];
   out_7385553611252329077[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7385553611252329077[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7385553611252329077[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7385553611252329077[6] = -nom_x[7] + true_x[7];
   out_7385553611252329077[7] = -nom_x[8] + true_x[8];
   out_7385553611252329077[8] = -nom_x[9] + true_x[9];
   out_7385553611252329077[9] = -nom_x[10] + true_x[10];
   out_7385553611252329077[10] = -nom_x[11] + true_x[11];
   out_7385553611252329077[11] = -nom_x[12] + true_x[12];
   out_7385553611252329077[12] = -nom_x[13] + true_x[13];
   out_7385553611252329077[13] = -nom_x[14] + true_x[14];
   out_7385553611252329077[14] = -nom_x[15] + true_x[15];
   out_7385553611252329077[15] = -nom_x[16] + true_x[16];
   out_7385553611252329077[16] = -nom_x[17] + true_x[17];
   out_7385553611252329077[17] = -nom_x[18] + true_x[18];
   out_7385553611252329077[18] = -nom_x[19] + true_x[19];
   out_7385553611252329077[19] = -nom_x[20] + true_x[20];
   out_7385553611252329077[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8192941733470122092) {
   out_8192941733470122092[0] = 1.0;
   out_8192941733470122092[1] = 0;
   out_8192941733470122092[2] = 0;
   out_8192941733470122092[3] = 0;
   out_8192941733470122092[4] = 0;
   out_8192941733470122092[5] = 0;
   out_8192941733470122092[6] = 0;
   out_8192941733470122092[7] = 0;
   out_8192941733470122092[8] = 0;
   out_8192941733470122092[9] = 0;
   out_8192941733470122092[10] = 0;
   out_8192941733470122092[11] = 0;
   out_8192941733470122092[12] = 0;
   out_8192941733470122092[13] = 0;
   out_8192941733470122092[14] = 0;
   out_8192941733470122092[15] = 0;
   out_8192941733470122092[16] = 0;
   out_8192941733470122092[17] = 0;
   out_8192941733470122092[18] = 0;
   out_8192941733470122092[19] = 0;
   out_8192941733470122092[20] = 0;
   out_8192941733470122092[21] = 0;
   out_8192941733470122092[22] = 1.0;
   out_8192941733470122092[23] = 0;
   out_8192941733470122092[24] = 0;
   out_8192941733470122092[25] = 0;
   out_8192941733470122092[26] = 0;
   out_8192941733470122092[27] = 0;
   out_8192941733470122092[28] = 0;
   out_8192941733470122092[29] = 0;
   out_8192941733470122092[30] = 0;
   out_8192941733470122092[31] = 0;
   out_8192941733470122092[32] = 0;
   out_8192941733470122092[33] = 0;
   out_8192941733470122092[34] = 0;
   out_8192941733470122092[35] = 0;
   out_8192941733470122092[36] = 0;
   out_8192941733470122092[37] = 0;
   out_8192941733470122092[38] = 0;
   out_8192941733470122092[39] = 0;
   out_8192941733470122092[40] = 0;
   out_8192941733470122092[41] = 0;
   out_8192941733470122092[42] = 0;
   out_8192941733470122092[43] = 0;
   out_8192941733470122092[44] = 1.0;
   out_8192941733470122092[45] = 0;
   out_8192941733470122092[46] = 0;
   out_8192941733470122092[47] = 0;
   out_8192941733470122092[48] = 0;
   out_8192941733470122092[49] = 0;
   out_8192941733470122092[50] = 0;
   out_8192941733470122092[51] = 0;
   out_8192941733470122092[52] = 0;
   out_8192941733470122092[53] = 0;
   out_8192941733470122092[54] = 0;
   out_8192941733470122092[55] = 0;
   out_8192941733470122092[56] = 0;
   out_8192941733470122092[57] = 0;
   out_8192941733470122092[58] = 0;
   out_8192941733470122092[59] = 0;
   out_8192941733470122092[60] = 0;
   out_8192941733470122092[61] = 0;
   out_8192941733470122092[62] = 0;
   out_8192941733470122092[63] = 0;
   out_8192941733470122092[64] = 0;
   out_8192941733470122092[65] = 0;
   out_8192941733470122092[66] = -0.5*state[4];
   out_8192941733470122092[67] = -0.5*state[5];
   out_8192941733470122092[68] = -0.5*state[6];
   out_8192941733470122092[69] = 0;
   out_8192941733470122092[70] = 0;
   out_8192941733470122092[71] = 0;
   out_8192941733470122092[72] = 0;
   out_8192941733470122092[73] = 0;
   out_8192941733470122092[74] = 0;
   out_8192941733470122092[75] = 0;
   out_8192941733470122092[76] = 0;
   out_8192941733470122092[77] = 0;
   out_8192941733470122092[78] = 0;
   out_8192941733470122092[79] = 0;
   out_8192941733470122092[80] = 0;
   out_8192941733470122092[81] = 0;
   out_8192941733470122092[82] = 0;
   out_8192941733470122092[83] = 0;
   out_8192941733470122092[84] = 0;
   out_8192941733470122092[85] = 0;
   out_8192941733470122092[86] = 0;
   out_8192941733470122092[87] = 0.5*state[3];
   out_8192941733470122092[88] = 0.5*state[6];
   out_8192941733470122092[89] = -0.5*state[5];
   out_8192941733470122092[90] = 0;
   out_8192941733470122092[91] = 0;
   out_8192941733470122092[92] = 0;
   out_8192941733470122092[93] = 0;
   out_8192941733470122092[94] = 0;
   out_8192941733470122092[95] = 0;
   out_8192941733470122092[96] = 0;
   out_8192941733470122092[97] = 0;
   out_8192941733470122092[98] = 0;
   out_8192941733470122092[99] = 0;
   out_8192941733470122092[100] = 0;
   out_8192941733470122092[101] = 0;
   out_8192941733470122092[102] = 0;
   out_8192941733470122092[103] = 0;
   out_8192941733470122092[104] = 0;
   out_8192941733470122092[105] = 0;
   out_8192941733470122092[106] = 0;
   out_8192941733470122092[107] = 0;
   out_8192941733470122092[108] = -0.5*state[6];
   out_8192941733470122092[109] = 0.5*state[3];
   out_8192941733470122092[110] = 0.5*state[4];
   out_8192941733470122092[111] = 0;
   out_8192941733470122092[112] = 0;
   out_8192941733470122092[113] = 0;
   out_8192941733470122092[114] = 0;
   out_8192941733470122092[115] = 0;
   out_8192941733470122092[116] = 0;
   out_8192941733470122092[117] = 0;
   out_8192941733470122092[118] = 0;
   out_8192941733470122092[119] = 0;
   out_8192941733470122092[120] = 0;
   out_8192941733470122092[121] = 0;
   out_8192941733470122092[122] = 0;
   out_8192941733470122092[123] = 0;
   out_8192941733470122092[124] = 0;
   out_8192941733470122092[125] = 0;
   out_8192941733470122092[126] = 0;
   out_8192941733470122092[127] = 0;
   out_8192941733470122092[128] = 0;
   out_8192941733470122092[129] = 0.5*state[5];
   out_8192941733470122092[130] = -0.5*state[4];
   out_8192941733470122092[131] = 0.5*state[3];
   out_8192941733470122092[132] = 0;
   out_8192941733470122092[133] = 0;
   out_8192941733470122092[134] = 0;
   out_8192941733470122092[135] = 0;
   out_8192941733470122092[136] = 0;
   out_8192941733470122092[137] = 0;
   out_8192941733470122092[138] = 0;
   out_8192941733470122092[139] = 0;
   out_8192941733470122092[140] = 0;
   out_8192941733470122092[141] = 0;
   out_8192941733470122092[142] = 0;
   out_8192941733470122092[143] = 0;
   out_8192941733470122092[144] = 0;
   out_8192941733470122092[145] = 0;
   out_8192941733470122092[146] = 0;
   out_8192941733470122092[147] = 0;
   out_8192941733470122092[148] = 0;
   out_8192941733470122092[149] = 0;
   out_8192941733470122092[150] = 0;
   out_8192941733470122092[151] = 0;
   out_8192941733470122092[152] = 0;
   out_8192941733470122092[153] = 1.0;
   out_8192941733470122092[154] = 0;
   out_8192941733470122092[155] = 0;
   out_8192941733470122092[156] = 0;
   out_8192941733470122092[157] = 0;
   out_8192941733470122092[158] = 0;
   out_8192941733470122092[159] = 0;
   out_8192941733470122092[160] = 0;
   out_8192941733470122092[161] = 0;
   out_8192941733470122092[162] = 0;
   out_8192941733470122092[163] = 0;
   out_8192941733470122092[164] = 0;
   out_8192941733470122092[165] = 0;
   out_8192941733470122092[166] = 0;
   out_8192941733470122092[167] = 0;
   out_8192941733470122092[168] = 0;
   out_8192941733470122092[169] = 0;
   out_8192941733470122092[170] = 0;
   out_8192941733470122092[171] = 0;
   out_8192941733470122092[172] = 0;
   out_8192941733470122092[173] = 0;
   out_8192941733470122092[174] = 0;
   out_8192941733470122092[175] = 1.0;
   out_8192941733470122092[176] = 0;
   out_8192941733470122092[177] = 0;
   out_8192941733470122092[178] = 0;
   out_8192941733470122092[179] = 0;
   out_8192941733470122092[180] = 0;
   out_8192941733470122092[181] = 0;
   out_8192941733470122092[182] = 0;
   out_8192941733470122092[183] = 0;
   out_8192941733470122092[184] = 0;
   out_8192941733470122092[185] = 0;
   out_8192941733470122092[186] = 0;
   out_8192941733470122092[187] = 0;
   out_8192941733470122092[188] = 0;
   out_8192941733470122092[189] = 0;
   out_8192941733470122092[190] = 0;
   out_8192941733470122092[191] = 0;
   out_8192941733470122092[192] = 0;
   out_8192941733470122092[193] = 0;
   out_8192941733470122092[194] = 0;
   out_8192941733470122092[195] = 0;
   out_8192941733470122092[196] = 0;
   out_8192941733470122092[197] = 1.0;
   out_8192941733470122092[198] = 0;
   out_8192941733470122092[199] = 0;
   out_8192941733470122092[200] = 0;
   out_8192941733470122092[201] = 0;
   out_8192941733470122092[202] = 0;
   out_8192941733470122092[203] = 0;
   out_8192941733470122092[204] = 0;
   out_8192941733470122092[205] = 0;
   out_8192941733470122092[206] = 0;
   out_8192941733470122092[207] = 0;
   out_8192941733470122092[208] = 0;
   out_8192941733470122092[209] = 0;
   out_8192941733470122092[210] = 0;
   out_8192941733470122092[211] = 0;
   out_8192941733470122092[212] = 0;
   out_8192941733470122092[213] = 0;
   out_8192941733470122092[214] = 0;
   out_8192941733470122092[215] = 0;
   out_8192941733470122092[216] = 0;
   out_8192941733470122092[217] = 0;
   out_8192941733470122092[218] = 0;
   out_8192941733470122092[219] = 1.0;
   out_8192941733470122092[220] = 0;
   out_8192941733470122092[221] = 0;
   out_8192941733470122092[222] = 0;
   out_8192941733470122092[223] = 0;
   out_8192941733470122092[224] = 0;
   out_8192941733470122092[225] = 0;
   out_8192941733470122092[226] = 0;
   out_8192941733470122092[227] = 0;
   out_8192941733470122092[228] = 0;
   out_8192941733470122092[229] = 0;
   out_8192941733470122092[230] = 0;
   out_8192941733470122092[231] = 0;
   out_8192941733470122092[232] = 0;
   out_8192941733470122092[233] = 0;
   out_8192941733470122092[234] = 0;
   out_8192941733470122092[235] = 0;
   out_8192941733470122092[236] = 0;
   out_8192941733470122092[237] = 0;
   out_8192941733470122092[238] = 0;
   out_8192941733470122092[239] = 0;
   out_8192941733470122092[240] = 0;
   out_8192941733470122092[241] = 1.0;
   out_8192941733470122092[242] = 0;
   out_8192941733470122092[243] = 0;
   out_8192941733470122092[244] = 0;
   out_8192941733470122092[245] = 0;
   out_8192941733470122092[246] = 0;
   out_8192941733470122092[247] = 0;
   out_8192941733470122092[248] = 0;
   out_8192941733470122092[249] = 0;
   out_8192941733470122092[250] = 0;
   out_8192941733470122092[251] = 0;
   out_8192941733470122092[252] = 0;
   out_8192941733470122092[253] = 0;
   out_8192941733470122092[254] = 0;
   out_8192941733470122092[255] = 0;
   out_8192941733470122092[256] = 0;
   out_8192941733470122092[257] = 0;
   out_8192941733470122092[258] = 0;
   out_8192941733470122092[259] = 0;
   out_8192941733470122092[260] = 0;
   out_8192941733470122092[261] = 0;
   out_8192941733470122092[262] = 0;
   out_8192941733470122092[263] = 1.0;
   out_8192941733470122092[264] = 0;
   out_8192941733470122092[265] = 0;
   out_8192941733470122092[266] = 0;
   out_8192941733470122092[267] = 0;
   out_8192941733470122092[268] = 0;
   out_8192941733470122092[269] = 0;
   out_8192941733470122092[270] = 0;
   out_8192941733470122092[271] = 0;
   out_8192941733470122092[272] = 0;
   out_8192941733470122092[273] = 0;
   out_8192941733470122092[274] = 0;
   out_8192941733470122092[275] = 0;
   out_8192941733470122092[276] = 0;
   out_8192941733470122092[277] = 0;
   out_8192941733470122092[278] = 0;
   out_8192941733470122092[279] = 0;
   out_8192941733470122092[280] = 0;
   out_8192941733470122092[281] = 0;
   out_8192941733470122092[282] = 0;
   out_8192941733470122092[283] = 0;
   out_8192941733470122092[284] = 0;
   out_8192941733470122092[285] = 1.0;
   out_8192941733470122092[286] = 0;
   out_8192941733470122092[287] = 0;
   out_8192941733470122092[288] = 0;
   out_8192941733470122092[289] = 0;
   out_8192941733470122092[290] = 0;
   out_8192941733470122092[291] = 0;
   out_8192941733470122092[292] = 0;
   out_8192941733470122092[293] = 0;
   out_8192941733470122092[294] = 0;
   out_8192941733470122092[295] = 0;
   out_8192941733470122092[296] = 0;
   out_8192941733470122092[297] = 0;
   out_8192941733470122092[298] = 0;
   out_8192941733470122092[299] = 0;
   out_8192941733470122092[300] = 0;
   out_8192941733470122092[301] = 0;
   out_8192941733470122092[302] = 0;
   out_8192941733470122092[303] = 0;
   out_8192941733470122092[304] = 0;
   out_8192941733470122092[305] = 0;
   out_8192941733470122092[306] = 0;
   out_8192941733470122092[307] = 1.0;
   out_8192941733470122092[308] = 0;
   out_8192941733470122092[309] = 0;
   out_8192941733470122092[310] = 0;
   out_8192941733470122092[311] = 0;
   out_8192941733470122092[312] = 0;
   out_8192941733470122092[313] = 0;
   out_8192941733470122092[314] = 0;
   out_8192941733470122092[315] = 0;
   out_8192941733470122092[316] = 0;
   out_8192941733470122092[317] = 0;
   out_8192941733470122092[318] = 0;
   out_8192941733470122092[319] = 0;
   out_8192941733470122092[320] = 0;
   out_8192941733470122092[321] = 0;
   out_8192941733470122092[322] = 0;
   out_8192941733470122092[323] = 0;
   out_8192941733470122092[324] = 0;
   out_8192941733470122092[325] = 0;
   out_8192941733470122092[326] = 0;
   out_8192941733470122092[327] = 0;
   out_8192941733470122092[328] = 0;
   out_8192941733470122092[329] = 1.0;
   out_8192941733470122092[330] = 0;
   out_8192941733470122092[331] = 0;
   out_8192941733470122092[332] = 0;
   out_8192941733470122092[333] = 0;
   out_8192941733470122092[334] = 0;
   out_8192941733470122092[335] = 0;
   out_8192941733470122092[336] = 0;
   out_8192941733470122092[337] = 0;
   out_8192941733470122092[338] = 0;
   out_8192941733470122092[339] = 0;
   out_8192941733470122092[340] = 0;
   out_8192941733470122092[341] = 0;
   out_8192941733470122092[342] = 0;
   out_8192941733470122092[343] = 0;
   out_8192941733470122092[344] = 0;
   out_8192941733470122092[345] = 0;
   out_8192941733470122092[346] = 0;
   out_8192941733470122092[347] = 0;
   out_8192941733470122092[348] = 0;
   out_8192941733470122092[349] = 0;
   out_8192941733470122092[350] = 0;
   out_8192941733470122092[351] = 1.0;
   out_8192941733470122092[352] = 0;
   out_8192941733470122092[353] = 0;
   out_8192941733470122092[354] = 0;
   out_8192941733470122092[355] = 0;
   out_8192941733470122092[356] = 0;
   out_8192941733470122092[357] = 0;
   out_8192941733470122092[358] = 0;
   out_8192941733470122092[359] = 0;
   out_8192941733470122092[360] = 0;
   out_8192941733470122092[361] = 0;
   out_8192941733470122092[362] = 0;
   out_8192941733470122092[363] = 0;
   out_8192941733470122092[364] = 0;
   out_8192941733470122092[365] = 0;
   out_8192941733470122092[366] = 0;
   out_8192941733470122092[367] = 0;
   out_8192941733470122092[368] = 0;
   out_8192941733470122092[369] = 0;
   out_8192941733470122092[370] = 0;
   out_8192941733470122092[371] = 0;
   out_8192941733470122092[372] = 0;
   out_8192941733470122092[373] = 1.0;
   out_8192941733470122092[374] = 0;
   out_8192941733470122092[375] = 0;
   out_8192941733470122092[376] = 0;
   out_8192941733470122092[377] = 0;
   out_8192941733470122092[378] = 0;
   out_8192941733470122092[379] = 0;
   out_8192941733470122092[380] = 0;
   out_8192941733470122092[381] = 0;
   out_8192941733470122092[382] = 0;
   out_8192941733470122092[383] = 0;
   out_8192941733470122092[384] = 0;
   out_8192941733470122092[385] = 0;
   out_8192941733470122092[386] = 0;
   out_8192941733470122092[387] = 0;
   out_8192941733470122092[388] = 0;
   out_8192941733470122092[389] = 0;
   out_8192941733470122092[390] = 0;
   out_8192941733470122092[391] = 0;
   out_8192941733470122092[392] = 0;
   out_8192941733470122092[393] = 0;
   out_8192941733470122092[394] = 0;
   out_8192941733470122092[395] = 1.0;
   out_8192941733470122092[396] = 0;
   out_8192941733470122092[397] = 0;
   out_8192941733470122092[398] = 0;
   out_8192941733470122092[399] = 0;
   out_8192941733470122092[400] = 0;
   out_8192941733470122092[401] = 0;
   out_8192941733470122092[402] = 0;
   out_8192941733470122092[403] = 0;
   out_8192941733470122092[404] = 0;
   out_8192941733470122092[405] = 0;
   out_8192941733470122092[406] = 0;
   out_8192941733470122092[407] = 0;
   out_8192941733470122092[408] = 0;
   out_8192941733470122092[409] = 0;
   out_8192941733470122092[410] = 0;
   out_8192941733470122092[411] = 0;
   out_8192941733470122092[412] = 0;
   out_8192941733470122092[413] = 0;
   out_8192941733470122092[414] = 0;
   out_8192941733470122092[415] = 0;
   out_8192941733470122092[416] = 0;
   out_8192941733470122092[417] = 1.0;
   out_8192941733470122092[418] = 0;
   out_8192941733470122092[419] = 0;
   out_8192941733470122092[420] = 0;
   out_8192941733470122092[421] = 0;
   out_8192941733470122092[422] = 0;
   out_8192941733470122092[423] = 0;
   out_8192941733470122092[424] = 0;
   out_8192941733470122092[425] = 0;
   out_8192941733470122092[426] = 0;
   out_8192941733470122092[427] = 0;
   out_8192941733470122092[428] = 0;
   out_8192941733470122092[429] = 0;
   out_8192941733470122092[430] = 0;
   out_8192941733470122092[431] = 0;
   out_8192941733470122092[432] = 0;
   out_8192941733470122092[433] = 0;
   out_8192941733470122092[434] = 0;
   out_8192941733470122092[435] = 0;
   out_8192941733470122092[436] = 0;
   out_8192941733470122092[437] = 0;
   out_8192941733470122092[438] = 0;
   out_8192941733470122092[439] = 1.0;
   out_8192941733470122092[440] = 0;
   out_8192941733470122092[441] = 0;
   out_8192941733470122092[442] = 0;
   out_8192941733470122092[443] = 0;
   out_8192941733470122092[444] = 0;
   out_8192941733470122092[445] = 0;
   out_8192941733470122092[446] = 0;
   out_8192941733470122092[447] = 0;
   out_8192941733470122092[448] = 0;
   out_8192941733470122092[449] = 0;
   out_8192941733470122092[450] = 0;
   out_8192941733470122092[451] = 0;
   out_8192941733470122092[452] = 0;
   out_8192941733470122092[453] = 0;
   out_8192941733470122092[454] = 0;
   out_8192941733470122092[455] = 0;
   out_8192941733470122092[456] = 0;
   out_8192941733470122092[457] = 0;
   out_8192941733470122092[458] = 0;
   out_8192941733470122092[459] = 0;
   out_8192941733470122092[460] = 0;
   out_8192941733470122092[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3557410023905793232) {
   out_3557410023905793232[0] = dt*state[7] + state[0];
   out_3557410023905793232[1] = dt*state[8] + state[1];
   out_3557410023905793232[2] = dt*state[9] + state[2];
   out_3557410023905793232[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3557410023905793232[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3557410023905793232[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3557410023905793232[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3557410023905793232[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3557410023905793232[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3557410023905793232[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3557410023905793232[10] = state[10];
   out_3557410023905793232[11] = state[11];
   out_3557410023905793232[12] = state[12];
   out_3557410023905793232[13] = state[13];
   out_3557410023905793232[14] = state[14];
   out_3557410023905793232[15] = state[15];
   out_3557410023905793232[16] = state[16];
   out_3557410023905793232[17] = state[17];
   out_3557410023905793232[18] = state[18];
   out_3557410023905793232[19] = state[19];
   out_3557410023905793232[20] = state[20];
   out_3557410023905793232[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8557837785947457076) {
   out_8557837785947457076[0] = 1;
   out_8557837785947457076[1] = 0;
   out_8557837785947457076[2] = 0;
   out_8557837785947457076[3] = 0;
   out_8557837785947457076[4] = 0;
   out_8557837785947457076[5] = 0;
   out_8557837785947457076[6] = dt;
   out_8557837785947457076[7] = 0;
   out_8557837785947457076[8] = 0;
   out_8557837785947457076[9] = 0;
   out_8557837785947457076[10] = 0;
   out_8557837785947457076[11] = 0;
   out_8557837785947457076[12] = 0;
   out_8557837785947457076[13] = 0;
   out_8557837785947457076[14] = 0;
   out_8557837785947457076[15] = 0;
   out_8557837785947457076[16] = 0;
   out_8557837785947457076[17] = 0;
   out_8557837785947457076[18] = 0;
   out_8557837785947457076[19] = 0;
   out_8557837785947457076[20] = 0;
   out_8557837785947457076[21] = 0;
   out_8557837785947457076[22] = 1;
   out_8557837785947457076[23] = 0;
   out_8557837785947457076[24] = 0;
   out_8557837785947457076[25] = 0;
   out_8557837785947457076[26] = 0;
   out_8557837785947457076[27] = 0;
   out_8557837785947457076[28] = dt;
   out_8557837785947457076[29] = 0;
   out_8557837785947457076[30] = 0;
   out_8557837785947457076[31] = 0;
   out_8557837785947457076[32] = 0;
   out_8557837785947457076[33] = 0;
   out_8557837785947457076[34] = 0;
   out_8557837785947457076[35] = 0;
   out_8557837785947457076[36] = 0;
   out_8557837785947457076[37] = 0;
   out_8557837785947457076[38] = 0;
   out_8557837785947457076[39] = 0;
   out_8557837785947457076[40] = 0;
   out_8557837785947457076[41] = 0;
   out_8557837785947457076[42] = 0;
   out_8557837785947457076[43] = 0;
   out_8557837785947457076[44] = 1;
   out_8557837785947457076[45] = 0;
   out_8557837785947457076[46] = 0;
   out_8557837785947457076[47] = 0;
   out_8557837785947457076[48] = 0;
   out_8557837785947457076[49] = 0;
   out_8557837785947457076[50] = dt;
   out_8557837785947457076[51] = 0;
   out_8557837785947457076[52] = 0;
   out_8557837785947457076[53] = 0;
   out_8557837785947457076[54] = 0;
   out_8557837785947457076[55] = 0;
   out_8557837785947457076[56] = 0;
   out_8557837785947457076[57] = 0;
   out_8557837785947457076[58] = 0;
   out_8557837785947457076[59] = 0;
   out_8557837785947457076[60] = 0;
   out_8557837785947457076[61] = 0;
   out_8557837785947457076[62] = 0;
   out_8557837785947457076[63] = 0;
   out_8557837785947457076[64] = 0;
   out_8557837785947457076[65] = 0;
   out_8557837785947457076[66] = 1;
   out_8557837785947457076[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8557837785947457076[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8557837785947457076[69] = 0;
   out_8557837785947457076[70] = 0;
   out_8557837785947457076[71] = 0;
   out_8557837785947457076[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8557837785947457076[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8557837785947457076[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8557837785947457076[75] = 0;
   out_8557837785947457076[76] = 0;
   out_8557837785947457076[77] = 0;
   out_8557837785947457076[78] = 0;
   out_8557837785947457076[79] = 0;
   out_8557837785947457076[80] = 0;
   out_8557837785947457076[81] = 0;
   out_8557837785947457076[82] = 0;
   out_8557837785947457076[83] = 0;
   out_8557837785947457076[84] = 0;
   out_8557837785947457076[85] = 0;
   out_8557837785947457076[86] = 0;
   out_8557837785947457076[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8557837785947457076[88] = 1;
   out_8557837785947457076[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8557837785947457076[90] = 0;
   out_8557837785947457076[91] = 0;
   out_8557837785947457076[92] = 0;
   out_8557837785947457076[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8557837785947457076[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8557837785947457076[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8557837785947457076[96] = 0;
   out_8557837785947457076[97] = 0;
   out_8557837785947457076[98] = 0;
   out_8557837785947457076[99] = 0;
   out_8557837785947457076[100] = 0;
   out_8557837785947457076[101] = 0;
   out_8557837785947457076[102] = 0;
   out_8557837785947457076[103] = 0;
   out_8557837785947457076[104] = 0;
   out_8557837785947457076[105] = 0;
   out_8557837785947457076[106] = 0;
   out_8557837785947457076[107] = 0;
   out_8557837785947457076[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8557837785947457076[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8557837785947457076[110] = 1;
   out_8557837785947457076[111] = 0;
   out_8557837785947457076[112] = 0;
   out_8557837785947457076[113] = 0;
   out_8557837785947457076[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8557837785947457076[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8557837785947457076[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8557837785947457076[117] = 0;
   out_8557837785947457076[118] = 0;
   out_8557837785947457076[119] = 0;
   out_8557837785947457076[120] = 0;
   out_8557837785947457076[121] = 0;
   out_8557837785947457076[122] = 0;
   out_8557837785947457076[123] = 0;
   out_8557837785947457076[124] = 0;
   out_8557837785947457076[125] = 0;
   out_8557837785947457076[126] = 0;
   out_8557837785947457076[127] = 0;
   out_8557837785947457076[128] = 0;
   out_8557837785947457076[129] = 0;
   out_8557837785947457076[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8557837785947457076[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8557837785947457076[132] = 1;
   out_8557837785947457076[133] = 0;
   out_8557837785947457076[134] = 0;
   out_8557837785947457076[135] = 0;
   out_8557837785947457076[136] = 0;
   out_8557837785947457076[137] = 0;
   out_8557837785947457076[138] = 0;
   out_8557837785947457076[139] = 0;
   out_8557837785947457076[140] = 0;
   out_8557837785947457076[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8557837785947457076[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8557837785947457076[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8557837785947457076[144] = 0;
   out_8557837785947457076[145] = 0;
   out_8557837785947457076[146] = 0;
   out_8557837785947457076[147] = 0;
   out_8557837785947457076[148] = 0;
   out_8557837785947457076[149] = 0;
   out_8557837785947457076[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8557837785947457076[151] = 0;
   out_8557837785947457076[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8557837785947457076[153] = 0;
   out_8557837785947457076[154] = 1;
   out_8557837785947457076[155] = 0;
   out_8557837785947457076[156] = 0;
   out_8557837785947457076[157] = 0;
   out_8557837785947457076[158] = 0;
   out_8557837785947457076[159] = 0;
   out_8557837785947457076[160] = 0;
   out_8557837785947457076[161] = 0;
   out_8557837785947457076[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8557837785947457076[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8557837785947457076[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8557837785947457076[165] = 0;
   out_8557837785947457076[166] = 0;
   out_8557837785947457076[167] = 0;
   out_8557837785947457076[168] = 0;
   out_8557837785947457076[169] = 0;
   out_8557837785947457076[170] = 0;
   out_8557837785947457076[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8557837785947457076[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8557837785947457076[173] = 0;
   out_8557837785947457076[174] = 0;
   out_8557837785947457076[175] = 0;
   out_8557837785947457076[176] = 1;
   out_8557837785947457076[177] = 0;
   out_8557837785947457076[178] = 0;
   out_8557837785947457076[179] = 0;
   out_8557837785947457076[180] = 0;
   out_8557837785947457076[181] = 0;
   out_8557837785947457076[182] = 0;
   out_8557837785947457076[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8557837785947457076[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8557837785947457076[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8557837785947457076[186] = 0;
   out_8557837785947457076[187] = 0;
   out_8557837785947457076[188] = 0;
   out_8557837785947457076[189] = 0;
   out_8557837785947457076[190] = 0;
   out_8557837785947457076[191] = 0;
   out_8557837785947457076[192] = 0;
   out_8557837785947457076[193] = 0;
   out_8557837785947457076[194] = 0;
   out_8557837785947457076[195] = 0;
   out_8557837785947457076[196] = 0;
   out_8557837785947457076[197] = 0;
   out_8557837785947457076[198] = 1;
   out_8557837785947457076[199] = 0;
   out_8557837785947457076[200] = 0;
   out_8557837785947457076[201] = 0;
   out_8557837785947457076[202] = 0;
   out_8557837785947457076[203] = 0;
   out_8557837785947457076[204] = 0;
   out_8557837785947457076[205] = 0;
   out_8557837785947457076[206] = 0;
   out_8557837785947457076[207] = 0;
   out_8557837785947457076[208] = 0;
   out_8557837785947457076[209] = 0;
   out_8557837785947457076[210] = 0;
   out_8557837785947457076[211] = 0;
   out_8557837785947457076[212] = 0;
   out_8557837785947457076[213] = 0;
   out_8557837785947457076[214] = 0;
   out_8557837785947457076[215] = 0;
   out_8557837785947457076[216] = 0;
   out_8557837785947457076[217] = 0;
   out_8557837785947457076[218] = 0;
   out_8557837785947457076[219] = 0;
   out_8557837785947457076[220] = 1;
   out_8557837785947457076[221] = 0;
   out_8557837785947457076[222] = 0;
   out_8557837785947457076[223] = 0;
   out_8557837785947457076[224] = 0;
   out_8557837785947457076[225] = 0;
   out_8557837785947457076[226] = 0;
   out_8557837785947457076[227] = 0;
   out_8557837785947457076[228] = 0;
   out_8557837785947457076[229] = 0;
   out_8557837785947457076[230] = 0;
   out_8557837785947457076[231] = 0;
   out_8557837785947457076[232] = 0;
   out_8557837785947457076[233] = 0;
   out_8557837785947457076[234] = 0;
   out_8557837785947457076[235] = 0;
   out_8557837785947457076[236] = 0;
   out_8557837785947457076[237] = 0;
   out_8557837785947457076[238] = 0;
   out_8557837785947457076[239] = 0;
   out_8557837785947457076[240] = 0;
   out_8557837785947457076[241] = 0;
   out_8557837785947457076[242] = 1;
   out_8557837785947457076[243] = 0;
   out_8557837785947457076[244] = 0;
   out_8557837785947457076[245] = 0;
   out_8557837785947457076[246] = 0;
   out_8557837785947457076[247] = 0;
   out_8557837785947457076[248] = 0;
   out_8557837785947457076[249] = 0;
   out_8557837785947457076[250] = 0;
   out_8557837785947457076[251] = 0;
   out_8557837785947457076[252] = 0;
   out_8557837785947457076[253] = 0;
   out_8557837785947457076[254] = 0;
   out_8557837785947457076[255] = 0;
   out_8557837785947457076[256] = 0;
   out_8557837785947457076[257] = 0;
   out_8557837785947457076[258] = 0;
   out_8557837785947457076[259] = 0;
   out_8557837785947457076[260] = 0;
   out_8557837785947457076[261] = 0;
   out_8557837785947457076[262] = 0;
   out_8557837785947457076[263] = 0;
   out_8557837785947457076[264] = 1;
   out_8557837785947457076[265] = 0;
   out_8557837785947457076[266] = 0;
   out_8557837785947457076[267] = 0;
   out_8557837785947457076[268] = 0;
   out_8557837785947457076[269] = 0;
   out_8557837785947457076[270] = 0;
   out_8557837785947457076[271] = 0;
   out_8557837785947457076[272] = 0;
   out_8557837785947457076[273] = 0;
   out_8557837785947457076[274] = 0;
   out_8557837785947457076[275] = 0;
   out_8557837785947457076[276] = 0;
   out_8557837785947457076[277] = 0;
   out_8557837785947457076[278] = 0;
   out_8557837785947457076[279] = 0;
   out_8557837785947457076[280] = 0;
   out_8557837785947457076[281] = 0;
   out_8557837785947457076[282] = 0;
   out_8557837785947457076[283] = 0;
   out_8557837785947457076[284] = 0;
   out_8557837785947457076[285] = 0;
   out_8557837785947457076[286] = 1;
   out_8557837785947457076[287] = 0;
   out_8557837785947457076[288] = 0;
   out_8557837785947457076[289] = 0;
   out_8557837785947457076[290] = 0;
   out_8557837785947457076[291] = 0;
   out_8557837785947457076[292] = 0;
   out_8557837785947457076[293] = 0;
   out_8557837785947457076[294] = 0;
   out_8557837785947457076[295] = 0;
   out_8557837785947457076[296] = 0;
   out_8557837785947457076[297] = 0;
   out_8557837785947457076[298] = 0;
   out_8557837785947457076[299] = 0;
   out_8557837785947457076[300] = 0;
   out_8557837785947457076[301] = 0;
   out_8557837785947457076[302] = 0;
   out_8557837785947457076[303] = 0;
   out_8557837785947457076[304] = 0;
   out_8557837785947457076[305] = 0;
   out_8557837785947457076[306] = 0;
   out_8557837785947457076[307] = 0;
   out_8557837785947457076[308] = 1;
   out_8557837785947457076[309] = 0;
   out_8557837785947457076[310] = 0;
   out_8557837785947457076[311] = 0;
   out_8557837785947457076[312] = 0;
   out_8557837785947457076[313] = 0;
   out_8557837785947457076[314] = 0;
   out_8557837785947457076[315] = 0;
   out_8557837785947457076[316] = 0;
   out_8557837785947457076[317] = 0;
   out_8557837785947457076[318] = 0;
   out_8557837785947457076[319] = 0;
   out_8557837785947457076[320] = 0;
   out_8557837785947457076[321] = 0;
   out_8557837785947457076[322] = 0;
   out_8557837785947457076[323] = 0;
   out_8557837785947457076[324] = 0;
   out_8557837785947457076[325] = 0;
   out_8557837785947457076[326] = 0;
   out_8557837785947457076[327] = 0;
   out_8557837785947457076[328] = 0;
   out_8557837785947457076[329] = 0;
   out_8557837785947457076[330] = 1;
   out_8557837785947457076[331] = 0;
   out_8557837785947457076[332] = 0;
   out_8557837785947457076[333] = 0;
   out_8557837785947457076[334] = 0;
   out_8557837785947457076[335] = 0;
   out_8557837785947457076[336] = 0;
   out_8557837785947457076[337] = 0;
   out_8557837785947457076[338] = 0;
   out_8557837785947457076[339] = 0;
   out_8557837785947457076[340] = 0;
   out_8557837785947457076[341] = 0;
   out_8557837785947457076[342] = 0;
   out_8557837785947457076[343] = 0;
   out_8557837785947457076[344] = 0;
   out_8557837785947457076[345] = 0;
   out_8557837785947457076[346] = 0;
   out_8557837785947457076[347] = 0;
   out_8557837785947457076[348] = 0;
   out_8557837785947457076[349] = 0;
   out_8557837785947457076[350] = 0;
   out_8557837785947457076[351] = 0;
   out_8557837785947457076[352] = 1;
   out_8557837785947457076[353] = 0;
   out_8557837785947457076[354] = 0;
   out_8557837785947457076[355] = 0;
   out_8557837785947457076[356] = 0;
   out_8557837785947457076[357] = 0;
   out_8557837785947457076[358] = 0;
   out_8557837785947457076[359] = 0;
   out_8557837785947457076[360] = 0;
   out_8557837785947457076[361] = 0;
   out_8557837785947457076[362] = 0;
   out_8557837785947457076[363] = 0;
   out_8557837785947457076[364] = 0;
   out_8557837785947457076[365] = 0;
   out_8557837785947457076[366] = 0;
   out_8557837785947457076[367] = 0;
   out_8557837785947457076[368] = 0;
   out_8557837785947457076[369] = 0;
   out_8557837785947457076[370] = 0;
   out_8557837785947457076[371] = 0;
   out_8557837785947457076[372] = 0;
   out_8557837785947457076[373] = 0;
   out_8557837785947457076[374] = 1;
   out_8557837785947457076[375] = 0;
   out_8557837785947457076[376] = 0;
   out_8557837785947457076[377] = 0;
   out_8557837785947457076[378] = 0;
   out_8557837785947457076[379] = 0;
   out_8557837785947457076[380] = 0;
   out_8557837785947457076[381] = 0;
   out_8557837785947457076[382] = 0;
   out_8557837785947457076[383] = 0;
   out_8557837785947457076[384] = 0;
   out_8557837785947457076[385] = 0;
   out_8557837785947457076[386] = 0;
   out_8557837785947457076[387] = 0;
   out_8557837785947457076[388] = 0;
   out_8557837785947457076[389] = 0;
   out_8557837785947457076[390] = 0;
   out_8557837785947457076[391] = 0;
   out_8557837785947457076[392] = 0;
   out_8557837785947457076[393] = 0;
   out_8557837785947457076[394] = 0;
   out_8557837785947457076[395] = 0;
   out_8557837785947457076[396] = 1;
   out_8557837785947457076[397] = 0;
   out_8557837785947457076[398] = 0;
   out_8557837785947457076[399] = 0;
   out_8557837785947457076[400] = 0;
   out_8557837785947457076[401] = 0;
   out_8557837785947457076[402] = 0;
   out_8557837785947457076[403] = 0;
   out_8557837785947457076[404] = 0;
   out_8557837785947457076[405] = 0;
   out_8557837785947457076[406] = 0;
   out_8557837785947457076[407] = 0;
   out_8557837785947457076[408] = 0;
   out_8557837785947457076[409] = 0;
   out_8557837785947457076[410] = 0;
   out_8557837785947457076[411] = 0;
   out_8557837785947457076[412] = 0;
   out_8557837785947457076[413] = 0;
   out_8557837785947457076[414] = 0;
   out_8557837785947457076[415] = 0;
   out_8557837785947457076[416] = 0;
   out_8557837785947457076[417] = 0;
   out_8557837785947457076[418] = 1;
   out_8557837785947457076[419] = 0;
   out_8557837785947457076[420] = 0;
   out_8557837785947457076[421] = 0;
   out_8557837785947457076[422] = 0;
   out_8557837785947457076[423] = 0;
   out_8557837785947457076[424] = 0;
   out_8557837785947457076[425] = 0;
   out_8557837785947457076[426] = 0;
   out_8557837785947457076[427] = 0;
   out_8557837785947457076[428] = 0;
   out_8557837785947457076[429] = 0;
   out_8557837785947457076[430] = 0;
   out_8557837785947457076[431] = 0;
   out_8557837785947457076[432] = 0;
   out_8557837785947457076[433] = 0;
   out_8557837785947457076[434] = 0;
   out_8557837785947457076[435] = 0;
   out_8557837785947457076[436] = 0;
   out_8557837785947457076[437] = 0;
   out_8557837785947457076[438] = 0;
   out_8557837785947457076[439] = 0;
   out_8557837785947457076[440] = 1;
}
void h_4(double *state, double *unused, double *out_1179371322125232753) {
   out_1179371322125232753[0] = state[10] + state[13];
   out_1179371322125232753[1] = state[11] + state[14];
   out_1179371322125232753[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7315580968579262055) {
   out_7315580968579262055[0] = 0;
   out_7315580968579262055[1] = 0;
   out_7315580968579262055[2] = 0;
   out_7315580968579262055[3] = 0;
   out_7315580968579262055[4] = 0;
   out_7315580968579262055[5] = 0;
   out_7315580968579262055[6] = 0;
   out_7315580968579262055[7] = 0;
   out_7315580968579262055[8] = 0;
   out_7315580968579262055[9] = 0;
   out_7315580968579262055[10] = 1;
   out_7315580968579262055[11] = 0;
   out_7315580968579262055[12] = 0;
   out_7315580968579262055[13] = 1;
   out_7315580968579262055[14] = 0;
   out_7315580968579262055[15] = 0;
   out_7315580968579262055[16] = 0;
   out_7315580968579262055[17] = 0;
   out_7315580968579262055[18] = 0;
   out_7315580968579262055[19] = 0;
   out_7315580968579262055[20] = 0;
   out_7315580968579262055[21] = 0;
   out_7315580968579262055[22] = 0;
   out_7315580968579262055[23] = 0;
   out_7315580968579262055[24] = 0;
   out_7315580968579262055[25] = 0;
   out_7315580968579262055[26] = 0;
   out_7315580968579262055[27] = 0;
   out_7315580968579262055[28] = 0;
   out_7315580968579262055[29] = 0;
   out_7315580968579262055[30] = 0;
   out_7315580968579262055[31] = 0;
   out_7315580968579262055[32] = 0;
   out_7315580968579262055[33] = 1;
   out_7315580968579262055[34] = 0;
   out_7315580968579262055[35] = 0;
   out_7315580968579262055[36] = 1;
   out_7315580968579262055[37] = 0;
   out_7315580968579262055[38] = 0;
   out_7315580968579262055[39] = 0;
   out_7315580968579262055[40] = 0;
   out_7315580968579262055[41] = 0;
   out_7315580968579262055[42] = 0;
   out_7315580968579262055[43] = 0;
   out_7315580968579262055[44] = 0;
   out_7315580968579262055[45] = 0;
   out_7315580968579262055[46] = 0;
   out_7315580968579262055[47] = 0;
   out_7315580968579262055[48] = 0;
   out_7315580968579262055[49] = 0;
   out_7315580968579262055[50] = 0;
   out_7315580968579262055[51] = 0;
   out_7315580968579262055[52] = 0;
   out_7315580968579262055[53] = 0;
   out_7315580968579262055[54] = 0;
   out_7315580968579262055[55] = 0;
   out_7315580968579262055[56] = 1;
   out_7315580968579262055[57] = 0;
   out_7315580968579262055[58] = 0;
   out_7315580968579262055[59] = 1;
   out_7315580968579262055[60] = 0;
   out_7315580968579262055[61] = 0;
   out_7315580968579262055[62] = 0;
   out_7315580968579262055[63] = 0;
   out_7315580968579262055[64] = 0;
   out_7315580968579262055[65] = 0;
}
void h_9(double *state, double *unused, double *out_7267185231670305086) {
   out_7267185231670305086[0] = state[10];
   out_7267185231670305086[1] = state[11];
   out_7267185231670305086[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7556770615208852700) {
   out_7556770615208852700[0] = 0;
   out_7556770615208852700[1] = 0;
   out_7556770615208852700[2] = 0;
   out_7556770615208852700[3] = 0;
   out_7556770615208852700[4] = 0;
   out_7556770615208852700[5] = 0;
   out_7556770615208852700[6] = 0;
   out_7556770615208852700[7] = 0;
   out_7556770615208852700[8] = 0;
   out_7556770615208852700[9] = 0;
   out_7556770615208852700[10] = 1;
   out_7556770615208852700[11] = 0;
   out_7556770615208852700[12] = 0;
   out_7556770615208852700[13] = 0;
   out_7556770615208852700[14] = 0;
   out_7556770615208852700[15] = 0;
   out_7556770615208852700[16] = 0;
   out_7556770615208852700[17] = 0;
   out_7556770615208852700[18] = 0;
   out_7556770615208852700[19] = 0;
   out_7556770615208852700[20] = 0;
   out_7556770615208852700[21] = 0;
   out_7556770615208852700[22] = 0;
   out_7556770615208852700[23] = 0;
   out_7556770615208852700[24] = 0;
   out_7556770615208852700[25] = 0;
   out_7556770615208852700[26] = 0;
   out_7556770615208852700[27] = 0;
   out_7556770615208852700[28] = 0;
   out_7556770615208852700[29] = 0;
   out_7556770615208852700[30] = 0;
   out_7556770615208852700[31] = 0;
   out_7556770615208852700[32] = 0;
   out_7556770615208852700[33] = 1;
   out_7556770615208852700[34] = 0;
   out_7556770615208852700[35] = 0;
   out_7556770615208852700[36] = 0;
   out_7556770615208852700[37] = 0;
   out_7556770615208852700[38] = 0;
   out_7556770615208852700[39] = 0;
   out_7556770615208852700[40] = 0;
   out_7556770615208852700[41] = 0;
   out_7556770615208852700[42] = 0;
   out_7556770615208852700[43] = 0;
   out_7556770615208852700[44] = 0;
   out_7556770615208852700[45] = 0;
   out_7556770615208852700[46] = 0;
   out_7556770615208852700[47] = 0;
   out_7556770615208852700[48] = 0;
   out_7556770615208852700[49] = 0;
   out_7556770615208852700[50] = 0;
   out_7556770615208852700[51] = 0;
   out_7556770615208852700[52] = 0;
   out_7556770615208852700[53] = 0;
   out_7556770615208852700[54] = 0;
   out_7556770615208852700[55] = 0;
   out_7556770615208852700[56] = 1;
   out_7556770615208852700[57] = 0;
   out_7556770615208852700[58] = 0;
   out_7556770615208852700[59] = 0;
   out_7556770615208852700[60] = 0;
   out_7556770615208852700[61] = 0;
   out_7556770615208852700[62] = 0;
   out_7556770615208852700[63] = 0;
   out_7556770615208852700[64] = 0;
   out_7556770615208852700[65] = 0;
}
void h_10(double *state, double *unused, double *out_5095924145481726408) {
   out_5095924145481726408[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5095924145481726408[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5095924145481726408[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5645866099687886483) {
   out_5645866099687886483[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5645866099687886483[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5645866099687886483[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5645866099687886483[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5645866099687886483[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5645866099687886483[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5645866099687886483[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5645866099687886483[7] = 0;
   out_5645866099687886483[8] = 0;
   out_5645866099687886483[9] = 0;
   out_5645866099687886483[10] = 0;
   out_5645866099687886483[11] = 0;
   out_5645866099687886483[12] = 0;
   out_5645866099687886483[13] = 0;
   out_5645866099687886483[14] = 0;
   out_5645866099687886483[15] = 0;
   out_5645866099687886483[16] = 1;
   out_5645866099687886483[17] = 0;
   out_5645866099687886483[18] = 0;
   out_5645866099687886483[19] = 1;
   out_5645866099687886483[20] = 0;
   out_5645866099687886483[21] = 0;
   out_5645866099687886483[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5645866099687886483[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5645866099687886483[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5645866099687886483[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5645866099687886483[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5645866099687886483[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5645866099687886483[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5645866099687886483[29] = 0;
   out_5645866099687886483[30] = 0;
   out_5645866099687886483[31] = 0;
   out_5645866099687886483[32] = 0;
   out_5645866099687886483[33] = 0;
   out_5645866099687886483[34] = 0;
   out_5645866099687886483[35] = 0;
   out_5645866099687886483[36] = 0;
   out_5645866099687886483[37] = 0;
   out_5645866099687886483[38] = 0;
   out_5645866099687886483[39] = 1;
   out_5645866099687886483[40] = 0;
   out_5645866099687886483[41] = 0;
   out_5645866099687886483[42] = 1;
   out_5645866099687886483[43] = 0;
   out_5645866099687886483[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5645866099687886483[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5645866099687886483[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5645866099687886483[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5645866099687886483[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5645866099687886483[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5645866099687886483[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5645866099687886483[51] = 0;
   out_5645866099687886483[52] = 0;
   out_5645866099687886483[53] = 0;
   out_5645866099687886483[54] = 0;
   out_5645866099687886483[55] = 0;
   out_5645866099687886483[56] = 0;
   out_5645866099687886483[57] = 0;
   out_5645866099687886483[58] = 0;
   out_5645866099687886483[59] = 0;
   out_5645866099687886483[60] = 0;
   out_5645866099687886483[61] = 0;
   out_5645866099687886483[62] = 1;
   out_5645866099687886483[63] = 0;
   out_5645866099687886483[64] = 0;
   out_5645866099687886483[65] = 1;
}
void h_12(double *state, double *unused, double *out_2512392799571043135) {
   out_2512392799571043135[0] = state[0];
   out_2512392799571043135[1] = state[1];
   out_2512392799571043135[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6111706697098327766) {
   out_6111706697098327766[0] = 1;
   out_6111706697098327766[1] = 0;
   out_6111706697098327766[2] = 0;
   out_6111706697098327766[3] = 0;
   out_6111706697098327766[4] = 0;
   out_6111706697098327766[5] = 0;
   out_6111706697098327766[6] = 0;
   out_6111706697098327766[7] = 0;
   out_6111706697098327766[8] = 0;
   out_6111706697098327766[9] = 0;
   out_6111706697098327766[10] = 0;
   out_6111706697098327766[11] = 0;
   out_6111706697098327766[12] = 0;
   out_6111706697098327766[13] = 0;
   out_6111706697098327766[14] = 0;
   out_6111706697098327766[15] = 0;
   out_6111706697098327766[16] = 0;
   out_6111706697098327766[17] = 0;
   out_6111706697098327766[18] = 0;
   out_6111706697098327766[19] = 0;
   out_6111706697098327766[20] = 0;
   out_6111706697098327766[21] = 0;
   out_6111706697098327766[22] = 0;
   out_6111706697098327766[23] = 1;
   out_6111706697098327766[24] = 0;
   out_6111706697098327766[25] = 0;
   out_6111706697098327766[26] = 0;
   out_6111706697098327766[27] = 0;
   out_6111706697098327766[28] = 0;
   out_6111706697098327766[29] = 0;
   out_6111706697098327766[30] = 0;
   out_6111706697098327766[31] = 0;
   out_6111706697098327766[32] = 0;
   out_6111706697098327766[33] = 0;
   out_6111706697098327766[34] = 0;
   out_6111706697098327766[35] = 0;
   out_6111706697098327766[36] = 0;
   out_6111706697098327766[37] = 0;
   out_6111706697098327766[38] = 0;
   out_6111706697098327766[39] = 0;
   out_6111706697098327766[40] = 0;
   out_6111706697098327766[41] = 0;
   out_6111706697098327766[42] = 0;
   out_6111706697098327766[43] = 0;
   out_6111706697098327766[44] = 0;
   out_6111706697098327766[45] = 0;
   out_6111706697098327766[46] = 1;
   out_6111706697098327766[47] = 0;
   out_6111706697098327766[48] = 0;
   out_6111706697098327766[49] = 0;
   out_6111706697098327766[50] = 0;
   out_6111706697098327766[51] = 0;
   out_6111706697098327766[52] = 0;
   out_6111706697098327766[53] = 0;
   out_6111706697098327766[54] = 0;
   out_6111706697098327766[55] = 0;
   out_6111706697098327766[56] = 0;
   out_6111706697098327766[57] = 0;
   out_6111706697098327766[58] = 0;
   out_6111706697098327766[59] = 0;
   out_6111706697098327766[60] = 0;
   out_6111706697098327766[61] = 0;
   out_6111706697098327766[62] = 0;
   out_6111706697098327766[63] = 0;
   out_6111706697098327766[64] = 0;
   out_6111706697098327766[65] = 0;
}
void h_35(double *state, double *unused, double *out_7549588061413473025) {
   out_7549588061413473025[0] = state[7];
   out_7549588061413473025[1] = state[8];
   out_7549588061413473025[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3366143664773314057) {
   out_3366143664773314057[0] = 0;
   out_3366143664773314057[1] = 0;
   out_3366143664773314057[2] = 0;
   out_3366143664773314057[3] = 0;
   out_3366143664773314057[4] = 0;
   out_3366143664773314057[5] = 0;
   out_3366143664773314057[6] = 0;
   out_3366143664773314057[7] = 1;
   out_3366143664773314057[8] = 0;
   out_3366143664773314057[9] = 0;
   out_3366143664773314057[10] = 0;
   out_3366143664773314057[11] = 0;
   out_3366143664773314057[12] = 0;
   out_3366143664773314057[13] = 0;
   out_3366143664773314057[14] = 0;
   out_3366143664773314057[15] = 0;
   out_3366143664773314057[16] = 0;
   out_3366143664773314057[17] = 0;
   out_3366143664773314057[18] = 0;
   out_3366143664773314057[19] = 0;
   out_3366143664773314057[20] = 0;
   out_3366143664773314057[21] = 0;
   out_3366143664773314057[22] = 0;
   out_3366143664773314057[23] = 0;
   out_3366143664773314057[24] = 0;
   out_3366143664773314057[25] = 0;
   out_3366143664773314057[26] = 0;
   out_3366143664773314057[27] = 0;
   out_3366143664773314057[28] = 0;
   out_3366143664773314057[29] = 0;
   out_3366143664773314057[30] = 1;
   out_3366143664773314057[31] = 0;
   out_3366143664773314057[32] = 0;
   out_3366143664773314057[33] = 0;
   out_3366143664773314057[34] = 0;
   out_3366143664773314057[35] = 0;
   out_3366143664773314057[36] = 0;
   out_3366143664773314057[37] = 0;
   out_3366143664773314057[38] = 0;
   out_3366143664773314057[39] = 0;
   out_3366143664773314057[40] = 0;
   out_3366143664773314057[41] = 0;
   out_3366143664773314057[42] = 0;
   out_3366143664773314057[43] = 0;
   out_3366143664773314057[44] = 0;
   out_3366143664773314057[45] = 0;
   out_3366143664773314057[46] = 0;
   out_3366143664773314057[47] = 0;
   out_3366143664773314057[48] = 0;
   out_3366143664773314057[49] = 0;
   out_3366143664773314057[50] = 0;
   out_3366143664773314057[51] = 0;
   out_3366143664773314057[52] = 0;
   out_3366143664773314057[53] = 1;
   out_3366143664773314057[54] = 0;
   out_3366143664773314057[55] = 0;
   out_3366143664773314057[56] = 0;
   out_3366143664773314057[57] = 0;
   out_3366143664773314057[58] = 0;
   out_3366143664773314057[59] = 0;
   out_3366143664773314057[60] = 0;
   out_3366143664773314057[61] = 0;
   out_3366143664773314057[62] = 0;
   out_3366143664773314057[63] = 0;
   out_3366143664773314057[64] = 0;
   out_3366143664773314057[65] = 0;
}
void h_32(double *state, double *unused, double *out_1075397825167574537) {
   out_1075397825167574537[0] = state[3];
   out_1075397825167574537[1] = state[4];
   out_1075397825167574537[2] = state[5];
   out_1075397825167574537[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5548874522593978030) {
   out_5548874522593978030[0] = 0;
   out_5548874522593978030[1] = 0;
   out_5548874522593978030[2] = 0;
   out_5548874522593978030[3] = 1;
   out_5548874522593978030[4] = 0;
   out_5548874522593978030[5] = 0;
   out_5548874522593978030[6] = 0;
   out_5548874522593978030[7] = 0;
   out_5548874522593978030[8] = 0;
   out_5548874522593978030[9] = 0;
   out_5548874522593978030[10] = 0;
   out_5548874522593978030[11] = 0;
   out_5548874522593978030[12] = 0;
   out_5548874522593978030[13] = 0;
   out_5548874522593978030[14] = 0;
   out_5548874522593978030[15] = 0;
   out_5548874522593978030[16] = 0;
   out_5548874522593978030[17] = 0;
   out_5548874522593978030[18] = 0;
   out_5548874522593978030[19] = 0;
   out_5548874522593978030[20] = 0;
   out_5548874522593978030[21] = 0;
   out_5548874522593978030[22] = 0;
   out_5548874522593978030[23] = 0;
   out_5548874522593978030[24] = 0;
   out_5548874522593978030[25] = 0;
   out_5548874522593978030[26] = 1;
   out_5548874522593978030[27] = 0;
   out_5548874522593978030[28] = 0;
   out_5548874522593978030[29] = 0;
   out_5548874522593978030[30] = 0;
   out_5548874522593978030[31] = 0;
   out_5548874522593978030[32] = 0;
   out_5548874522593978030[33] = 0;
   out_5548874522593978030[34] = 0;
   out_5548874522593978030[35] = 0;
   out_5548874522593978030[36] = 0;
   out_5548874522593978030[37] = 0;
   out_5548874522593978030[38] = 0;
   out_5548874522593978030[39] = 0;
   out_5548874522593978030[40] = 0;
   out_5548874522593978030[41] = 0;
   out_5548874522593978030[42] = 0;
   out_5548874522593978030[43] = 0;
   out_5548874522593978030[44] = 0;
   out_5548874522593978030[45] = 0;
   out_5548874522593978030[46] = 0;
   out_5548874522593978030[47] = 0;
   out_5548874522593978030[48] = 0;
   out_5548874522593978030[49] = 1;
   out_5548874522593978030[50] = 0;
   out_5548874522593978030[51] = 0;
   out_5548874522593978030[52] = 0;
   out_5548874522593978030[53] = 0;
   out_5548874522593978030[54] = 0;
   out_5548874522593978030[55] = 0;
   out_5548874522593978030[56] = 0;
   out_5548874522593978030[57] = 0;
   out_5548874522593978030[58] = 0;
   out_5548874522593978030[59] = 0;
   out_5548874522593978030[60] = 0;
   out_5548874522593978030[61] = 0;
   out_5548874522593978030[62] = 0;
   out_5548874522593978030[63] = 0;
   out_5548874522593978030[64] = 0;
   out_5548874522593978030[65] = 0;
   out_5548874522593978030[66] = 0;
   out_5548874522593978030[67] = 0;
   out_5548874522593978030[68] = 0;
   out_5548874522593978030[69] = 0;
   out_5548874522593978030[70] = 0;
   out_5548874522593978030[71] = 0;
   out_5548874522593978030[72] = 1;
   out_5548874522593978030[73] = 0;
   out_5548874522593978030[74] = 0;
   out_5548874522593978030[75] = 0;
   out_5548874522593978030[76] = 0;
   out_5548874522593978030[77] = 0;
   out_5548874522593978030[78] = 0;
   out_5548874522593978030[79] = 0;
   out_5548874522593978030[80] = 0;
   out_5548874522593978030[81] = 0;
   out_5548874522593978030[82] = 0;
   out_5548874522593978030[83] = 0;
   out_5548874522593978030[84] = 0;
   out_5548874522593978030[85] = 0;
   out_5548874522593978030[86] = 0;
   out_5548874522593978030[87] = 0;
}
void h_13(double *state, double *unused, double *out_5119914902696682383) {
   out_5119914902696682383[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5119914902696682383[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5119914902696682383[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8634591391102879904) {
   out_8634591391102879904[0] = 0;
   out_8634591391102879904[1] = 0;
   out_8634591391102879904[2] = 0;
   out_8634591391102879904[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8634591391102879904[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8634591391102879904[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8634591391102879904[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8634591391102879904[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8634591391102879904[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8634591391102879904[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8634591391102879904[10] = 0;
   out_8634591391102879904[11] = 0;
   out_8634591391102879904[12] = 0;
   out_8634591391102879904[13] = 0;
   out_8634591391102879904[14] = 0;
   out_8634591391102879904[15] = 0;
   out_8634591391102879904[16] = 0;
   out_8634591391102879904[17] = 0;
   out_8634591391102879904[18] = 0;
   out_8634591391102879904[19] = 0;
   out_8634591391102879904[20] = 0;
   out_8634591391102879904[21] = 0;
   out_8634591391102879904[22] = 0;
   out_8634591391102879904[23] = 0;
   out_8634591391102879904[24] = 0;
   out_8634591391102879904[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8634591391102879904[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8634591391102879904[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8634591391102879904[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8634591391102879904[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8634591391102879904[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8634591391102879904[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8634591391102879904[32] = 0;
   out_8634591391102879904[33] = 0;
   out_8634591391102879904[34] = 0;
   out_8634591391102879904[35] = 0;
   out_8634591391102879904[36] = 0;
   out_8634591391102879904[37] = 0;
   out_8634591391102879904[38] = 0;
   out_8634591391102879904[39] = 0;
   out_8634591391102879904[40] = 0;
   out_8634591391102879904[41] = 0;
   out_8634591391102879904[42] = 0;
   out_8634591391102879904[43] = 0;
   out_8634591391102879904[44] = 0;
   out_8634591391102879904[45] = 0;
   out_8634591391102879904[46] = 0;
   out_8634591391102879904[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8634591391102879904[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8634591391102879904[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8634591391102879904[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8634591391102879904[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8634591391102879904[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8634591391102879904[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8634591391102879904[54] = 0;
   out_8634591391102879904[55] = 0;
   out_8634591391102879904[56] = 0;
   out_8634591391102879904[57] = 0;
   out_8634591391102879904[58] = 0;
   out_8634591391102879904[59] = 0;
   out_8634591391102879904[60] = 0;
   out_8634591391102879904[61] = 0;
   out_8634591391102879904[62] = 0;
   out_8634591391102879904[63] = 0;
   out_8634591391102879904[64] = 0;
   out_8634591391102879904[65] = 0;
}
void h_14(double *state, double *unused, double *out_7267185231670305086) {
   out_7267185231670305086[0] = state[10];
   out_7267185231670305086[1] = state[11];
   out_7267185231670305086[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7556770615208852700) {
   out_7556770615208852700[0] = 0;
   out_7556770615208852700[1] = 0;
   out_7556770615208852700[2] = 0;
   out_7556770615208852700[3] = 0;
   out_7556770615208852700[4] = 0;
   out_7556770615208852700[5] = 0;
   out_7556770615208852700[6] = 0;
   out_7556770615208852700[7] = 0;
   out_7556770615208852700[8] = 0;
   out_7556770615208852700[9] = 0;
   out_7556770615208852700[10] = 1;
   out_7556770615208852700[11] = 0;
   out_7556770615208852700[12] = 0;
   out_7556770615208852700[13] = 0;
   out_7556770615208852700[14] = 0;
   out_7556770615208852700[15] = 0;
   out_7556770615208852700[16] = 0;
   out_7556770615208852700[17] = 0;
   out_7556770615208852700[18] = 0;
   out_7556770615208852700[19] = 0;
   out_7556770615208852700[20] = 0;
   out_7556770615208852700[21] = 0;
   out_7556770615208852700[22] = 0;
   out_7556770615208852700[23] = 0;
   out_7556770615208852700[24] = 0;
   out_7556770615208852700[25] = 0;
   out_7556770615208852700[26] = 0;
   out_7556770615208852700[27] = 0;
   out_7556770615208852700[28] = 0;
   out_7556770615208852700[29] = 0;
   out_7556770615208852700[30] = 0;
   out_7556770615208852700[31] = 0;
   out_7556770615208852700[32] = 0;
   out_7556770615208852700[33] = 1;
   out_7556770615208852700[34] = 0;
   out_7556770615208852700[35] = 0;
   out_7556770615208852700[36] = 0;
   out_7556770615208852700[37] = 0;
   out_7556770615208852700[38] = 0;
   out_7556770615208852700[39] = 0;
   out_7556770615208852700[40] = 0;
   out_7556770615208852700[41] = 0;
   out_7556770615208852700[42] = 0;
   out_7556770615208852700[43] = 0;
   out_7556770615208852700[44] = 0;
   out_7556770615208852700[45] = 0;
   out_7556770615208852700[46] = 0;
   out_7556770615208852700[47] = 0;
   out_7556770615208852700[48] = 0;
   out_7556770615208852700[49] = 0;
   out_7556770615208852700[50] = 0;
   out_7556770615208852700[51] = 0;
   out_7556770615208852700[52] = 0;
   out_7556770615208852700[53] = 0;
   out_7556770615208852700[54] = 0;
   out_7556770615208852700[55] = 0;
   out_7556770615208852700[56] = 1;
   out_7556770615208852700[57] = 0;
   out_7556770615208852700[58] = 0;
   out_7556770615208852700[59] = 0;
   out_7556770615208852700[60] = 0;
   out_7556770615208852700[61] = 0;
   out_7556770615208852700[62] = 0;
   out_7556770615208852700[63] = 0;
   out_7556770615208852700[64] = 0;
   out_7556770615208852700[65] = 0;
}
void h_33(double *state, double *unused, double *out_834113502876921908) {
   out_834113502876921908[0] = state[16];
   out_834113502876921908[1] = state[17];
   out_834113502876921908[2] = state[18];
}
void H_33(double *state, double *unused, double *out_215586660134456453) {
   out_215586660134456453[0] = 0;
   out_215586660134456453[1] = 0;
   out_215586660134456453[2] = 0;
   out_215586660134456453[3] = 0;
   out_215586660134456453[4] = 0;
   out_215586660134456453[5] = 0;
   out_215586660134456453[6] = 0;
   out_215586660134456453[7] = 0;
   out_215586660134456453[8] = 0;
   out_215586660134456453[9] = 0;
   out_215586660134456453[10] = 0;
   out_215586660134456453[11] = 0;
   out_215586660134456453[12] = 0;
   out_215586660134456453[13] = 0;
   out_215586660134456453[14] = 0;
   out_215586660134456453[15] = 0;
   out_215586660134456453[16] = 1;
   out_215586660134456453[17] = 0;
   out_215586660134456453[18] = 0;
   out_215586660134456453[19] = 0;
   out_215586660134456453[20] = 0;
   out_215586660134456453[21] = 0;
   out_215586660134456453[22] = 0;
   out_215586660134456453[23] = 0;
   out_215586660134456453[24] = 0;
   out_215586660134456453[25] = 0;
   out_215586660134456453[26] = 0;
   out_215586660134456453[27] = 0;
   out_215586660134456453[28] = 0;
   out_215586660134456453[29] = 0;
   out_215586660134456453[30] = 0;
   out_215586660134456453[31] = 0;
   out_215586660134456453[32] = 0;
   out_215586660134456453[33] = 0;
   out_215586660134456453[34] = 0;
   out_215586660134456453[35] = 0;
   out_215586660134456453[36] = 0;
   out_215586660134456453[37] = 0;
   out_215586660134456453[38] = 0;
   out_215586660134456453[39] = 1;
   out_215586660134456453[40] = 0;
   out_215586660134456453[41] = 0;
   out_215586660134456453[42] = 0;
   out_215586660134456453[43] = 0;
   out_215586660134456453[44] = 0;
   out_215586660134456453[45] = 0;
   out_215586660134456453[46] = 0;
   out_215586660134456453[47] = 0;
   out_215586660134456453[48] = 0;
   out_215586660134456453[49] = 0;
   out_215586660134456453[50] = 0;
   out_215586660134456453[51] = 0;
   out_215586660134456453[52] = 0;
   out_215586660134456453[53] = 0;
   out_215586660134456453[54] = 0;
   out_215586660134456453[55] = 0;
   out_215586660134456453[56] = 0;
   out_215586660134456453[57] = 0;
   out_215586660134456453[58] = 0;
   out_215586660134456453[59] = 0;
   out_215586660134456453[60] = 0;
   out_215586660134456453[61] = 0;
   out_215586660134456453[62] = 1;
   out_215586660134456453[63] = 0;
   out_215586660134456453[64] = 0;
   out_215586660134456453[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3996265270042170641) {
  H(in_vec, out_3996265270042170641);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3461674683723829337) {
  err_fun(nom_x, delta_x, out_3461674683723829337);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7385553611252329077) {
  inv_err_fun(nom_x, true_x, out_7385553611252329077);
}
void live_H_mod_fun(double *state, double *out_8192941733470122092) {
  H_mod_fun(state, out_8192941733470122092);
}
void live_f_fun(double *state, double dt, double *out_3557410023905793232) {
  f_fun(state,  dt, out_3557410023905793232);
}
void live_F_fun(double *state, double dt, double *out_8557837785947457076) {
  F_fun(state,  dt, out_8557837785947457076);
}
void live_h_4(double *state, double *unused, double *out_1179371322125232753) {
  h_4(state, unused, out_1179371322125232753);
}
void live_H_4(double *state, double *unused, double *out_7315580968579262055) {
  H_4(state, unused, out_7315580968579262055);
}
void live_h_9(double *state, double *unused, double *out_7267185231670305086) {
  h_9(state, unused, out_7267185231670305086);
}
void live_H_9(double *state, double *unused, double *out_7556770615208852700) {
  H_9(state, unused, out_7556770615208852700);
}
void live_h_10(double *state, double *unused, double *out_5095924145481726408) {
  h_10(state, unused, out_5095924145481726408);
}
void live_H_10(double *state, double *unused, double *out_5645866099687886483) {
  H_10(state, unused, out_5645866099687886483);
}
void live_h_12(double *state, double *unused, double *out_2512392799571043135) {
  h_12(state, unused, out_2512392799571043135);
}
void live_H_12(double *state, double *unused, double *out_6111706697098327766) {
  H_12(state, unused, out_6111706697098327766);
}
void live_h_35(double *state, double *unused, double *out_7549588061413473025) {
  h_35(state, unused, out_7549588061413473025);
}
void live_H_35(double *state, double *unused, double *out_3366143664773314057) {
  H_35(state, unused, out_3366143664773314057);
}
void live_h_32(double *state, double *unused, double *out_1075397825167574537) {
  h_32(state, unused, out_1075397825167574537);
}
void live_H_32(double *state, double *unused, double *out_5548874522593978030) {
  H_32(state, unused, out_5548874522593978030);
}
void live_h_13(double *state, double *unused, double *out_5119914902696682383) {
  h_13(state, unused, out_5119914902696682383);
}
void live_H_13(double *state, double *unused, double *out_8634591391102879904) {
  H_13(state, unused, out_8634591391102879904);
}
void live_h_14(double *state, double *unused, double *out_7267185231670305086) {
  h_14(state, unused, out_7267185231670305086);
}
void live_H_14(double *state, double *unused, double *out_7556770615208852700) {
  H_14(state, unused, out_7556770615208852700);
}
void live_h_33(double *state, double *unused, double *out_834113502876921908) {
  h_33(state, unused, out_834113502876921908);
}
void live_H_33(double *state, double *unused, double *out_215586660134456453) {
  H_33(state, unused, out_215586660134456453);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)

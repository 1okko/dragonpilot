#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6240008686817713408) {
   out_6240008686817713408[0] = 0;
   out_6240008686817713408[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6240008686817713408[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6240008686817713408[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6240008686817713408[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6240008686817713408[5] = -sin(in_vec[1]);
   out_6240008686817713408[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6240008686817713408[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6240008686817713408[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6240008686817713408[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6240008686817713408[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6240008686817713408[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6240008686817713408[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6240008686817713408[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6240008686817713408[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6240008686817713408[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6240008686817713408[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6240008686817713408[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3690665086918622964) {
   out_3690665086918622964[0] = delta_x[0] + nom_x[0];
   out_3690665086918622964[1] = delta_x[1] + nom_x[1];
   out_3690665086918622964[2] = delta_x[2] + nom_x[2];
   out_3690665086918622964[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3690665086918622964[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3690665086918622964[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3690665086918622964[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3690665086918622964[7] = delta_x[6] + nom_x[7];
   out_3690665086918622964[8] = delta_x[7] + nom_x[8];
   out_3690665086918622964[9] = delta_x[8] + nom_x[9];
   out_3690665086918622964[10] = delta_x[9] + nom_x[10];
   out_3690665086918622964[11] = delta_x[10] + nom_x[11];
   out_3690665086918622964[12] = delta_x[11] + nom_x[12];
   out_3690665086918622964[13] = delta_x[12] + nom_x[13];
   out_3690665086918622964[14] = delta_x[13] + nom_x[14];
   out_3690665086918622964[15] = delta_x[14] + nom_x[15];
   out_3690665086918622964[16] = delta_x[15] + nom_x[16];
   out_3690665086918622964[17] = delta_x[16] + nom_x[17];
   out_3690665086918622964[18] = delta_x[17] + nom_x[18];
   out_3690665086918622964[19] = delta_x[18] + nom_x[19];
   out_3690665086918622964[20] = delta_x[19] + nom_x[20];
   out_3690665086918622964[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8615868703535681088) {
   out_8615868703535681088[0] = -nom_x[0] + true_x[0];
   out_8615868703535681088[1] = -nom_x[1] + true_x[1];
   out_8615868703535681088[2] = -nom_x[2] + true_x[2];
   out_8615868703535681088[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8615868703535681088[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8615868703535681088[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8615868703535681088[6] = -nom_x[7] + true_x[7];
   out_8615868703535681088[7] = -nom_x[8] + true_x[8];
   out_8615868703535681088[8] = -nom_x[9] + true_x[9];
   out_8615868703535681088[9] = -nom_x[10] + true_x[10];
   out_8615868703535681088[10] = -nom_x[11] + true_x[11];
   out_8615868703535681088[11] = -nom_x[12] + true_x[12];
   out_8615868703535681088[12] = -nom_x[13] + true_x[13];
   out_8615868703535681088[13] = -nom_x[14] + true_x[14];
   out_8615868703535681088[14] = -nom_x[15] + true_x[15];
   out_8615868703535681088[15] = -nom_x[16] + true_x[16];
   out_8615868703535681088[16] = -nom_x[17] + true_x[17];
   out_8615868703535681088[17] = -nom_x[18] + true_x[18];
   out_8615868703535681088[18] = -nom_x[19] + true_x[19];
   out_8615868703535681088[19] = -nom_x[20] + true_x[20];
   out_8615868703535681088[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1988291488770769521) {
   out_1988291488770769521[0] = 1.0;
   out_1988291488770769521[1] = 0;
   out_1988291488770769521[2] = 0;
   out_1988291488770769521[3] = 0;
   out_1988291488770769521[4] = 0;
   out_1988291488770769521[5] = 0;
   out_1988291488770769521[6] = 0;
   out_1988291488770769521[7] = 0;
   out_1988291488770769521[8] = 0;
   out_1988291488770769521[9] = 0;
   out_1988291488770769521[10] = 0;
   out_1988291488770769521[11] = 0;
   out_1988291488770769521[12] = 0;
   out_1988291488770769521[13] = 0;
   out_1988291488770769521[14] = 0;
   out_1988291488770769521[15] = 0;
   out_1988291488770769521[16] = 0;
   out_1988291488770769521[17] = 0;
   out_1988291488770769521[18] = 0;
   out_1988291488770769521[19] = 0;
   out_1988291488770769521[20] = 0;
   out_1988291488770769521[21] = 0;
   out_1988291488770769521[22] = 1.0;
   out_1988291488770769521[23] = 0;
   out_1988291488770769521[24] = 0;
   out_1988291488770769521[25] = 0;
   out_1988291488770769521[26] = 0;
   out_1988291488770769521[27] = 0;
   out_1988291488770769521[28] = 0;
   out_1988291488770769521[29] = 0;
   out_1988291488770769521[30] = 0;
   out_1988291488770769521[31] = 0;
   out_1988291488770769521[32] = 0;
   out_1988291488770769521[33] = 0;
   out_1988291488770769521[34] = 0;
   out_1988291488770769521[35] = 0;
   out_1988291488770769521[36] = 0;
   out_1988291488770769521[37] = 0;
   out_1988291488770769521[38] = 0;
   out_1988291488770769521[39] = 0;
   out_1988291488770769521[40] = 0;
   out_1988291488770769521[41] = 0;
   out_1988291488770769521[42] = 0;
   out_1988291488770769521[43] = 0;
   out_1988291488770769521[44] = 1.0;
   out_1988291488770769521[45] = 0;
   out_1988291488770769521[46] = 0;
   out_1988291488770769521[47] = 0;
   out_1988291488770769521[48] = 0;
   out_1988291488770769521[49] = 0;
   out_1988291488770769521[50] = 0;
   out_1988291488770769521[51] = 0;
   out_1988291488770769521[52] = 0;
   out_1988291488770769521[53] = 0;
   out_1988291488770769521[54] = 0;
   out_1988291488770769521[55] = 0;
   out_1988291488770769521[56] = 0;
   out_1988291488770769521[57] = 0;
   out_1988291488770769521[58] = 0;
   out_1988291488770769521[59] = 0;
   out_1988291488770769521[60] = 0;
   out_1988291488770769521[61] = 0;
   out_1988291488770769521[62] = 0;
   out_1988291488770769521[63] = 0;
   out_1988291488770769521[64] = 0;
   out_1988291488770769521[65] = 0;
   out_1988291488770769521[66] = -0.5*state[4];
   out_1988291488770769521[67] = -0.5*state[5];
   out_1988291488770769521[68] = -0.5*state[6];
   out_1988291488770769521[69] = 0;
   out_1988291488770769521[70] = 0;
   out_1988291488770769521[71] = 0;
   out_1988291488770769521[72] = 0;
   out_1988291488770769521[73] = 0;
   out_1988291488770769521[74] = 0;
   out_1988291488770769521[75] = 0;
   out_1988291488770769521[76] = 0;
   out_1988291488770769521[77] = 0;
   out_1988291488770769521[78] = 0;
   out_1988291488770769521[79] = 0;
   out_1988291488770769521[80] = 0;
   out_1988291488770769521[81] = 0;
   out_1988291488770769521[82] = 0;
   out_1988291488770769521[83] = 0;
   out_1988291488770769521[84] = 0;
   out_1988291488770769521[85] = 0;
   out_1988291488770769521[86] = 0;
   out_1988291488770769521[87] = 0.5*state[3];
   out_1988291488770769521[88] = 0.5*state[6];
   out_1988291488770769521[89] = -0.5*state[5];
   out_1988291488770769521[90] = 0;
   out_1988291488770769521[91] = 0;
   out_1988291488770769521[92] = 0;
   out_1988291488770769521[93] = 0;
   out_1988291488770769521[94] = 0;
   out_1988291488770769521[95] = 0;
   out_1988291488770769521[96] = 0;
   out_1988291488770769521[97] = 0;
   out_1988291488770769521[98] = 0;
   out_1988291488770769521[99] = 0;
   out_1988291488770769521[100] = 0;
   out_1988291488770769521[101] = 0;
   out_1988291488770769521[102] = 0;
   out_1988291488770769521[103] = 0;
   out_1988291488770769521[104] = 0;
   out_1988291488770769521[105] = 0;
   out_1988291488770769521[106] = 0;
   out_1988291488770769521[107] = 0;
   out_1988291488770769521[108] = -0.5*state[6];
   out_1988291488770769521[109] = 0.5*state[3];
   out_1988291488770769521[110] = 0.5*state[4];
   out_1988291488770769521[111] = 0;
   out_1988291488770769521[112] = 0;
   out_1988291488770769521[113] = 0;
   out_1988291488770769521[114] = 0;
   out_1988291488770769521[115] = 0;
   out_1988291488770769521[116] = 0;
   out_1988291488770769521[117] = 0;
   out_1988291488770769521[118] = 0;
   out_1988291488770769521[119] = 0;
   out_1988291488770769521[120] = 0;
   out_1988291488770769521[121] = 0;
   out_1988291488770769521[122] = 0;
   out_1988291488770769521[123] = 0;
   out_1988291488770769521[124] = 0;
   out_1988291488770769521[125] = 0;
   out_1988291488770769521[126] = 0;
   out_1988291488770769521[127] = 0;
   out_1988291488770769521[128] = 0;
   out_1988291488770769521[129] = 0.5*state[5];
   out_1988291488770769521[130] = -0.5*state[4];
   out_1988291488770769521[131] = 0.5*state[3];
   out_1988291488770769521[132] = 0;
   out_1988291488770769521[133] = 0;
   out_1988291488770769521[134] = 0;
   out_1988291488770769521[135] = 0;
   out_1988291488770769521[136] = 0;
   out_1988291488770769521[137] = 0;
   out_1988291488770769521[138] = 0;
   out_1988291488770769521[139] = 0;
   out_1988291488770769521[140] = 0;
   out_1988291488770769521[141] = 0;
   out_1988291488770769521[142] = 0;
   out_1988291488770769521[143] = 0;
   out_1988291488770769521[144] = 0;
   out_1988291488770769521[145] = 0;
   out_1988291488770769521[146] = 0;
   out_1988291488770769521[147] = 0;
   out_1988291488770769521[148] = 0;
   out_1988291488770769521[149] = 0;
   out_1988291488770769521[150] = 0;
   out_1988291488770769521[151] = 0;
   out_1988291488770769521[152] = 0;
   out_1988291488770769521[153] = 1.0;
   out_1988291488770769521[154] = 0;
   out_1988291488770769521[155] = 0;
   out_1988291488770769521[156] = 0;
   out_1988291488770769521[157] = 0;
   out_1988291488770769521[158] = 0;
   out_1988291488770769521[159] = 0;
   out_1988291488770769521[160] = 0;
   out_1988291488770769521[161] = 0;
   out_1988291488770769521[162] = 0;
   out_1988291488770769521[163] = 0;
   out_1988291488770769521[164] = 0;
   out_1988291488770769521[165] = 0;
   out_1988291488770769521[166] = 0;
   out_1988291488770769521[167] = 0;
   out_1988291488770769521[168] = 0;
   out_1988291488770769521[169] = 0;
   out_1988291488770769521[170] = 0;
   out_1988291488770769521[171] = 0;
   out_1988291488770769521[172] = 0;
   out_1988291488770769521[173] = 0;
   out_1988291488770769521[174] = 0;
   out_1988291488770769521[175] = 1.0;
   out_1988291488770769521[176] = 0;
   out_1988291488770769521[177] = 0;
   out_1988291488770769521[178] = 0;
   out_1988291488770769521[179] = 0;
   out_1988291488770769521[180] = 0;
   out_1988291488770769521[181] = 0;
   out_1988291488770769521[182] = 0;
   out_1988291488770769521[183] = 0;
   out_1988291488770769521[184] = 0;
   out_1988291488770769521[185] = 0;
   out_1988291488770769521[186] = 0;
   out_1988291488770769521[187] = 0;
   out_1988291488770769521[188] = 0;
   out_1988291488770769521[189] = 0;
   out_1988291488770769521[190] = 0;
   out_1988291488770769521[191] = 0;
   out_1988291488770769521[192] = 0;
   out_1988291488770769521[193] = 0;
   out_1988291488770769521[194] = 0;
   out_1988291488770769521[195] = 0;
   out_1988291488770769521[196] = 0;
   out_1988291488770769521[197] = 1.0;
   out_1988291488770769521[198] = 0;
   out_1988291488770769521[199] = 0;
   out_1988291488770769521[200] = 0;
   out_1988291488770769521[201] = 0;
   out_1988291488770769521[202] = 0;
   out_1988291488770769521[203] = 0;
   out_1988291488770769521[204] = 0;
   out_1988291488770769521[205] = 0;
   out_1988291488770769521[206] = 0;
   out_1988291488770769521[207] = 0;
   out_1988291488770769521[208] = 0;
   out_1988291488770769521[209] = 0;
   out_1988291488770769521[210] = 0;
   out_1988291488770769521[211] = 0;
   out_1988291488770769521[212] = 0;
   out_1988291488770769521[213] = 0;
   out_1988291488770769521[214] = 0;
   out_1988291488770769521[215] = 0;
   out_1988291488770769521[216] = 0;
   out_1988291488770769521[217] = 0;
   out_1988291488770769521[218] = 0;
   out_1988291488770769521[219] = 1.0;
   out_1988291488770769521[220] = 0;
   out_1988291488770769521[221] = 0;
   out_1988291488770769521[222] = 0;
   out_1988291488770769521[223] = 0;
   out_1988291488770769521[224] = 0;
   out_1988291488770769521[225] = 0;
   out_1988291488770769521[226] = 0;
   out_1988291488770769521[227] = 0;
   out_1988291488770769521[228] = 0;
   out_1988291488770769521[229] = 0;
   out_1988291488770769521[230] = 0;
   out_1988291488770769521[231] = 0;
   out_1988291488770769521[232] = 0;
   out_1988291488770769521[233] = 0;
   out_1988291488770769521[234] = 0;
   out_1988291488770769521[235] = 0;
   out_1988291488770769521[236] = 0;
   out_1988291488770769521[237] = 0;
   out_1988291488770769521[238] = 0;
   out_1988291488770769521[239] = 0;
   out_1988291488770769521[240] = 0;
   out_1988291488770769521[241] = 1.0;
   out_1988291488770769521[242] = 0;
   out_1988291488770769521[243] = 0;
   out_1988291488770769521[244] = 0;
   out_1988291488770769521[245] = 0;
   out_1988291488770769521[246] = 0;
   out_1988291488770769521[247] = 0;
   out_1988291488770769521[248] = 0;
   out_1988291488770769521[249] = 0;
   out_1988291488770769521[250] = 0;
   out_1988291488770769521[251] = 0;
   out_1988291488770769521[252] = 0;
   out_1988291488770769521[253] = 0;
   out_1988291488770769521[254] = 0;
   out_1988291488770769521[255] = 0;
   out_1988291488770769521[256] = 0;
   out_1988291488770769521[257] = 0;
   out_1988291488770769521[258] = 0;
   out_1988291488770769521[259] = 0;
   out_1988291488770769521[260] = 0;
   out_1988291488770769521[261] = 0;
   out_1988291488770769521[262] = 0;
   out_1988291488770769521[263] = 1.0;
   out_1988291488770769521[264] = 0;
   out_1988291488770769521[265] = 0;
   out_1988291488770769521[266] = 0;
   out_1988291488770769521[267] = 0;
   out_1988291488770769521[268] = 0;
   out_1988291488770769521[269] = 0;
   out_1988291488770769521[270] = 0;
   out_1988291488770769521[271] = 0;
   out_1988291488770769521[272] = 0;
   out_1988291488770769521[273] = 0;
   out_1988291488770769521[274] = 0;
   out_1988291488770769521[275] = 0;
   out_1988291488770769521[276] = 0;
   out_1988291488770769521[277] = 0;
   out_1988291488770769521[278] = 0;
   out_1988291488770769521[279] = 0;
   out_1988291488770769521[280] = 0;
   out_1988291488770769521[281] = 0;
   out_1988291488770769521[282] = 0;
   out_1988291488770769521[283] = 0;
   out_1988291488770769521[284] = 0;
   out_1988291488770769521[285] = 1.0;
   out_1988291488770769521[286] = 0;
   out_1988291488770769521[287] = 0;
   out_1988291488770769521[288] = 0;
   out_1988291488770769521[289] = 0;
   out_1988291488770769521[290] = 0;
   out_1988291488770769521[291] = 0;
   out_1988291488770769521[292] = 0;
   out_1988291488770769521[293] = 0;
   out_1988291488770769521[294] = 0;
   out_1988291488770769521[295] = 0;
   out_1988291488770769521[296] = 0;
   out_1988291488770769521[297] = 0;
   out_1988291488770769521[298] = 0;
   out_1988291488770769521[299] = 0;
   out_1988291488770769521[300] = 0;
   out_1988291488770769521[301] = 0;
   out_1988291488770769521[302] = 0;
   out_1988291488770769521[303] = 0;
   out_1988291488770769521[304] = 0;
   out_1988291488770769521[305] = 0;
   out_1988291488770769521[306] = 0;
   out_1988291488770769521[307] = 1.0;
   out_1988291488770769521[308] = 0;
   out_1988291488770769521[309] = 0;
   out_1988291488770769521[310] = 0;
   out_1988291488770769521[311] = 0;
   out_1988291488770769521[312] = 0;
   out_1988291488770769521[313] = 0;
   out_1988291488770769521[314] = 0;
   out_1988291488770769521[315] = 0;
   out_1988291488770769521[316] = 0;
   out_1988291488770769521[317] = 0;
   out_1988291488770769521[318] = 0;
   out_1988291488770769521[319] = 0;
   out_1988291488770769521[320] = 0;
   out_1988291488770769521[321] = 0;
   out_1988291488770769521[322] = 0;
   out_1988291488770769521[323] = 0;
   out_1988291488770769521[324] = 0;
   out_1988291488770769521[325] = 0;
   out_1988291488770769521[326] = 0;
   out_1988291488770769521[327] = 0;
   out_1988291488770769521[328] = 0;
   out_1988291488770769521[329] = 1.0;
   out_1988291488770769521[330] = 0;
   out_1988291488770769521[331] = 0;
   out_1988291488770769521[332] = 0;
   out_1988291488770769521[333] = 0;
   out_1988291488770769521[334] = 0;
   out_1988291488770769521[335] = 0;
   out_1988291488770769521[336] = 0;
   out_1988291488770769521[337] = 0;
   out_1988291488770769521[338] = 0;
   out_1988291488770769521[339] = 0;
   out_1988291488770769521[340] = 0;
   out_1988291488770769521[341] = 0;
   out_1988291488770769521[342] = 0;
   out_1988291488770769521[343] = 0;
   out_1988291488770769521[344] = 0;
   out_1988291488770769521[345] = 0;
   out_1988291488770769521[346] = 0;
   out_1988291488770769521[347] = 0;
   out_1988291488770769521[348] = 0;
   out_1988291488770769521[349] = 0;
   out_1988291488770769521[350] = 0;
   out_1988291488770769521[351] = 1.0;
   out_1988291488770769521[352] = 0;
   out_1988291488770769521[353] = 0;
   out_1988291488770769521[354] = 0;
   out_1988291488770769521[355] = 0;
   out_1988291488770769521[356] = 0;
   out_1988291488770769521[357] = 0;
   out_1988291488770769521[358] = 0;
   out_1988291488770769521[359] = 0;
   out_1988291488770769521[360] = 0;
   out_1988291488770769521[361] = 0;
   out_1988291488770769521[362] = 0;
   out_1988291488770769521[363] = 0;
   out_1988291488770769521[364] = 0;
   out_1988291488770769521[365] = 0;
   out_1988291488770769521[366] = 0;
   out_1988291488770769521[367] = 0;
   out_1988291488770769521[368] = 0;
   out_1988291488770769521[369] = 0;
   out_1988291488770769521[370] = 0;
   out_1988291488770769521[371] = 0;
   out_1988291488770769521[372] = 0;
   out_1988291488770769521[373] = 1.0;
   out_1988291488770769521[374] = 0;
   out_1988291488770769521[375] = 0;
   out_1988291488770769521[376] = 0;
   out_1988291488770769521[377] = 0;
   out_1988291488770769521[378] = 0;
   out_1988291488770769521[379] = 0;
   out_1988291488770769521[380] = 0;
   out_1988291488770769521[381] = 0;
   out_1988291488770769521[382] = 0;
   out_1988291488770769521[383] = 0;
   out_1988291488770769521[384] = 0;
   out_1988291488770769521[385] = 0;
   out_1988291488770769521[386] = 0;
   out_1988291488770769521[387] = 0;
   out_1988291488770769521[388] = 0;
   out_1988291488770769521[389] = 0;
   out_1988291488770769521[390] = 0;
   out_1988291488770769521[391] = 0;
   out_1988291488770769521[392] = 0;
   out_1988291488770769521[393] = 0;
   out_1988291488770769521[394] = 0;
   out_1988291488770769521[395] = 1.0;
   out_1988291488770769521[396] = 0;
   out_1988291488770769521[397] = 0;
   out_1988291488770769521[398] = 0;
   out_1988291488770769521[399] = 0;
   out_1988291488770769521[400] = 0;
   out_1988291488770769521[401] = 0;
   out_1988291488770769521[402] = 0;
   out_1988291488770769521[403] = 0;
   out_1988291488770769521[404] = 0;
   out_1988291488770769521[405] = 0;
   out_1988291488770769521[406] = 0;
   out_1988291488770769521[407] = 0;
   out_1988291488770769521[408] = 0;
   out_1988291488770769521[409] = 0;
   out_1988291488770769521[410] = 0;
   out_1988291488770769521[411] = 0;
   out_1988291488770769521[412] = 0;
   out_1988291488770769521[413] = 0;
   out_1988291488770769521[414] = 0;
   out_1988291488770769521[415] = 0;
   out_1988291488770769521[416] = 0;
   out_1988291488770769521[417] = 1.0;
   out_1988291488770769521[418] = 0;
   out_1988291488770769521[419] = 0;
   out_1988291488770769521[420] = 0;
   out_1988291488770769521[421] = 0;
   out_1988291488770769521[422] = 0;
   out_1988291488770769521[423] = 0;
   out_1988291488770769521[424] = 0;
   out_1988291488770769521[425] = 0;
   out_1988291488770769521[426] = 0;
   out_1988291488770769521[427] = 0;
   out_1988291488770769521[428] = 0;
   out_1988291488770769521[429] = 0;
   out_1988291488770769521[430] = 0;
   out_1988291488770769521[431] = 0;
   out_1988291488770769521[432] = 0;
   out_1988291488770769521[433] = 0;
   out_1988291488770769521[434] = 0;
   out_1988291488770769521[435] = 0;
   out_1988291488770769521[436] = 0;
   out_1988291488770769521[437] = 0;
   out_1988291488770769521[438] = 0;
   out_1988291488770769521[439] = 1.0;
   out_1988291488770769521[440] = 0;
   out_1988291488770769521[441] = 0;
   out_1988291488770769521[442] = 0;
   out_1988291488770769521[443] = 0;
   out_1988291488770769521[444] = 0;
   out_1988291488770769521[445] = 0;
   out_1988291488770769521[446] = 0;
   out_1988291488770769521[447] = 0;
   out_1988291488770769521[448] = 0;
   out_1988291488770769521[449] = 0;
   out_1988291488770769521[450] = 0;
   out_1988291488770769521[451] = 0;
   out_1988291488770769521[452] = 0;
   out_1988291488770769521[453] = 0;
   out_1988291488770769521[454] = 0;
   out_1988291488770769521[455] = 0;
   out_1988291488770769521[456] = 0;
   out_1988291488770769521[457] = 0;
   out_1988291488770769521[458] = 0;
   out_1988291488770769521[459] = 0;
   out_1988291488770769521[460] = 0;
   out_1988291488770769521[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3263988285527381505) {
   out_3263988285527381505[0] = dt*state[7] + state[0];
   out_3263988285527381505[1] = dt*state[8] + state[1];
   out_3263988285527381505[2] = dt*state[9] + state[2];
   out_3263988285527381505[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3263988285527381505[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3263988285527381505[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3263988285527381505[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3263988285527381505[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3263988285527381505[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3263988285527381505[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3263988285527381505[10] = state[10];
   out_3263988285527381505[11] = state[11];
   out_3263988285527381505[12] = state[12];
   out_3263988285527381505[13] = state[13];
   out_3263988285527381505[14] = state[14];
   out_3263988285527381505[15] = state[15];
   out_3263988285527381505[16] = state[16];
   out_3263988285527381505[17] = state[17];
   out_3263988285527381505[18] = state[18];
   out_3263988285527381505[19] = state[19];
   out_3263988285527381505[20] = state[20];
   out_3263988285527381505[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4332092747232242913) {
   out_4332092747232242913[0] = 1;
   out_4332092747232242913[1] = 0;
   out_4332092747232242913[2] = 0;
   out_4332092747232242913[3] = 0;
   out_4332092747232242913[4] = 0;
   out_4332092747232242913[5] = 0;
   out_4332092747232242913[6] = dt;
   out_4332092747232242913[7] = 0;
   out_4332092747232242913[8] = 0;
   out_4332092747232242913[9] = 0;
   out_4332092747232242913[10] = 0;
   out_4332092747232242913[11] = 0;
   out_4332092747232242913[12] = 0;
   out_4332092747232242913[13] = 0;
   out_4332092747232242913[14] = 0;
   out_4332092747232242913[15] = 0;
   out_4332092747232242913[16] = 0;
   out_4332092747232242913[17] = 0;
   out_4332092747232242913[18] = 0;
   out_4332092747232242913[19] = 0;
   out_4332092747232242913[20] = 0;
   out_4332092747232242913[21] = 0;
   out_4332092747232242913[22] = 1;
   out_4332092747232242913[23] = 0;
   out_4332092747232242913[24] = 0;
   out_4332092747232242913[25] = 0;
   out_4332092747232242913[26] = 0;
   out_4332092747232242913[27] = 0;
   out_4332092747232242913[28] = dt;
   out_4332092747232242913[29] = 0;
   out_4332092747232242913[30] = 0;
   out_4332092747232242913[31] = 0;
   out_4332092747232242913[32] = 0;
   out_4332092747232242913[33] = 0;
   out_4332092747232242913[34] = 0;
   out_4332092747232242913[35] = 0;
   out_4332092747232242913[36] = 0;
   out_4332092747232242913[37] = 0;
   out_4332092747232242913[38] = 0;
   out_4332092747232242913[39] = 0;
   out_4332092747232242913[40] = 0;
   out_4332092747232242913[41] = 0;
   out_4332092747232242913[42] = 0;
   out_4332092747232242913[43] = 0;
   out_4332092747232242913[44] = 1;
   out_4332092747232242913[45] = 0;
   out_4332092747232242913[46] = 0;
   out_4332092747232242913[47] = 0;
   out_4332092747232242913[48] = 0;
   out_4332092747232242913[49] = 0;
   out_4332092747232242913[50] = dt;
   out_4332092747232242913[51] = 0;
   out_4332092747232242913[52] = 0;
   out_4332092747232242913[53] = 0;
   out_4332092747232242913[54] = 0;
   out_4332092747232242913[55] = 0;
   out_4332092747232242913[56] = 0;
   out_4332092747232242913[57] = 0;
   out_4332092747232242913[58] = 0;
   out_4332092747232242913[59] = 0;
   out_4332092747232242913[60] = 0;
   out_4332092747232242913[61] = 0;
   out_4332092747232242913[62] = 0;
   out_4332092747232242913[63] = 0;
   out_4332092747232242913[64] = 0;
   out_4332092747232242913[65] = 0;
   out_4332092747232242913[66] = 1;
   out_4332092747232242913[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4332092747232242913[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4332092747232242913[69] = 0;
   out_4332092747232242913[70] = 0;
   out_4332092747232242913[71] = 0;
   out_4332092747232242913[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4332092747232242913[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4332092747232242913[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4332092747232242913[75] = 0;
   out_4332092747232242913[76] = 0;
   out_4332092747232242913[77] = 0;
   out_4332092747232242913[78] = 0;
   out_4332092747232242913[79] = 0;
   out_4332092747232242913[80] = 0;
   out_4332092747232242913[81] = 0;
   out_4332092747232242913[82] = 0;
   out_4332092747232242913[83] = 0;
   out_4332092747232242913[84] = 0;
   out_4332092747232242913[85] = 0;
   out_4332092747232242913[86] = 0;
   out_4332092747232242913[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4332092747232242913[88] = 1;
   out_4332092747232242913[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4332092747232242913[90] = 0;
   out_4332092747232242913[91] = 0;
   out_4332092747232242913[92] = 0;
   out_4332092747232242913[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4332092747232242913[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4332092747232242913[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4332092747232242913[96] = 0;
   out_4332092747232242913[97] = 0;
   out_4332092747232242913[98] = 0;
   out_4332092747232242913[99] = 0;
   out_4332092747232242913[100] = 0;
   out_4332092747232242913[101] = 0;
   out_4332092747232242913[102] = 0;
   out_4332092747232242913[103] = 0;
   out_4332092747232242913[104] = 0;
   out_4332092747232242913[105] = 0;
   out_4332092747232242913[106] = 0;
   out_4332092747232242913[107] = 0;
   out_4332092747232242913[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4332092747232242913[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4332092747232242913[110] = 1;
   out_4332092747232242913[111] = 0;
   out_4332092747232242913[112] = 0;
   out_4332092747232242913[113] = 0;
   out_4332092747232242913[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4332092747232242913[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4332092747232242913[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4332092747232242913[117] = 0;
   out_4332092747232242913[118] = 0;
   out_4332092747232242913[119] = 0;
   out_4332092747232242913[120] = 0;
   out_4332092747232242913[121] = 0;
   out_4332092747232242913[122] = 0;
   out_4332092747232242913[123] = 0;
   out_4332092747232242913[124] = 0;
   out_4332092747232242913[125] = 0;
   out_4332092747232242913[126] = 0;
   out_4332092747232242913[127] = 0;
   out_4332092747232242913[128] = 0;
   out_4332092747232242913[129] = 0;
   out_4332092747232242913[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4332092747232242913[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4332092747232242913[132] = 1;
   out_4332092747232242913[133] = 0;
   out_4332092747232242913[134] = 0;
   out_4332092747232242913[135] = 0;
   out_4332092747232242913[136] = 0;
   out_4332092747232242913[137] = 0;
   out_4332092747232242913[138] = 0;
   out_4332092747232242913[139] = 0;
   out_4332092747232242913[140] = 0;
   out_4332092747232242913[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4332092747232242913[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4332092747232242913[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4332092747232242913[144] = 0;
   out_4332092747232242913[145] = 0;
   out_4332092747232242913[146] = 0;
   out_4332092747232242913[147] = 0;
   out_4332092747232242913[148] = 0;
   out_4332092747232242913[149] = 0;
   out_4332092747232242913[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4332092747232242913[151] = 0;
   out_4332092747232242913[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4332092747232242913[153] = 0;
   out_4332092747232242913[154] = 1;
   out_4332092747232242913[155] = 0;
   out_4332092747232242913[156] = 0;
   out_4332092747232242913[157] = 0;
   out_4332092747232242913[158] = 0;
   out_4332092747232242913[159] = 0;
   out_4332092747232242913[160] = 0;
   out_4332092747232242913[161] = 0;
   out_4332092747232242913[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4332092747232242913[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4332092747232242913[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4332092747232242913[165] = 0;
   out_4332092747232242913[166] = 0;
   out_4332092747232242913[167] = 0;
   out_4332092747232242913[168] = 0;
   out_4332092747232242913[169] = 0;
   out_4332092747232242913[170] = 0;
   out_4332092747232242913[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4332092747232242913[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4332092747232242913[173] = 0;
   out_4332092747232242913[174] = 0;
   out_4332092747232242913[175] = 0;
   out_4332092747232242913[176] = 1;
   out_4332092747232242913[177] = 0;
   out_4332092747232242913[178] = 0;
   out_4332092747232242913[179] = 0;
   out_4332092747232242913[180] = 0;
   out_4332092747232242913[181] = 0;
   out_4332092747232242913[182] = 0;
   out_4332092747232242913[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4332092747232242913[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4332092747232242913[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4332092747232242913[186] = 0;
   out_4332092747232242913[187] = 0;
   out_4332092747232242913[188] = 0;
   out_4332092747232242913[189] = 0;
   out_4332092747232242913[190] = 0;
   out_4332092747232242913[191] = 0;
   out_4332092747232242913[192] = 0;
   out_4332092747232242913[193] = 0;
   out_4332092747232242913[194] = 0;
   out_4332092747232242913[195] = 0;
   out_4332092747232242913[196] = 0;
   out_4332092747232242913[197] = 0;
   out_4332092747232242913[198] = 1;
   out_4332092747232242913[199] = 0;
   out_4332092747232242913[200] = 0;
   out_4332092747232242913[201] = 0;
   out_4332092747232242913[202] = 0;
   out_4332092747232242913[203] = 0;
   out_4332092747232242913[204] = 0;
   out_4332092747232242913[205] = 0;
   out_4332092747232242913[206] = 0;
   out_4332092747232242913[207] = 0;
   out_4332092747232242913[208] = 0;
   out_4332092747232242913[209] = 0;
   out_4332092747232242913[210] = 0;
   out_4332092747232242913[211] = 0;
   out_4332092747232242913[212] = 0;
   out_4332092747232242913[213] = 0;
   out_4332092747232242913[214] = 0;
   out_4332092747232242913[215] = 0;
   out_4332092747232242913[216] = 0;
   out_4332092747232242913[217] = 0;
   out_4332092747232242913[218] = 0;
   out_4332092747232242913[219] = 0;
   out_4332092747232242913[220] = 1;
   out_4332092747232242913[221] = 0;
   out_4332092747232242913[222] = 0;
   out_4332092747232242913[223] = 0;
   out_4332092747232242913[224] = 0;
   out_4332092747232242913[225] = 0;
   out_4332092747232242913[226] = 0;
   out_4332092747232242913[227] = 0;
   out_4332092747232242913[228] = 0;
   out_4332092747232242913[229] = 0;
   out_4332092747232242913[230] = 0;
   out_4332092747232242913[231] = 0;
   out_4332092747232242913[232] = 0;
   out_4332092747232242913[233] = 0;
   out_4332092747232242913[234] = 0;
   out_4332092747232242913[235] = 0;
   out_4332092747232242913[236] = 0;
   out_4332092747232242913[237] = 0;
   out_4332092747232242913[238] = 0;
   out_4332092747232242913[239] = 0;
   out_4332092747232242913[240] = 0;
   out_4332092747232242913[241] = 0;
   out_4332092747232242913[242] = 1;
   out_4332092747232242913[243] = 0;
   out_4332092747232242913[244] = 0;
   out_4332092747232242913[245] = 0;
   out_4332092747232242913[246] = 0;
   out_4332092747232242913[247] = 0;
   out_4332092747232242913[248] = 0;
   out_4332092747232242913[249] = 0;
   out_4332092747232242913[250] = 0;
   out_4332092747232242913[251] = 0;
   out_4332092747232242913[252] = 0;
   out_4332092747232242913[253] = 0;
   out_4332092747232242913[254] = 0;
   out_4332092747232242913[255] = 0;
   out_4332092747232242913[256] = 0;
   out_4332092747232242913[257] = 0;
   out_4332092747232242913[258] = 0;
   out_4332092747232242913[259] = 0;
   out_4332092747232242913[260] = 0;
   out_4332092747232242913[261] = 0;
   out_4332092747232242913[262] = 0;
   out_4332092747232242913[263] = 0;
   out_4332092747232242913[264] = 1;
   out_4332092747232242913[265] = 0;
   out_4332092747232242913[266] = 0;
   out_4332092747232242913[267] = 0;
   out_4332092747232242913[268] = 0;
   out_4332092747232242913[269] = 0;
   out_4332092747232242913[270] = 0;
   out_4332092747232242913[271] = 0;
   out_4332092747232242913[272] = 0;
   out_4332092747232242913[273] = 0;
   out_4332092747232242913[274] = 0;
   out_4332092747232242913[275] = 0;
   out_4332092747232242913[276] = 0;
   out_4332092747232242913[277] = 0;
   out_4332092747232242913[278] = 0;
   out_4332092747232242913[279] = 0;
   out_4332092747232242913[280] = 0;
   out_4332092747232242913[281] = 0;
   out_4332092747232242913[282] = 0;
   out_4332092747232242913[283] = 0;
   out_4332092747232242913[284] = 0;
   out_4332092747232242913[285] = 0;
   out_4332092747232242913[286] = 1;
   out_4332092747232242913[287] = 0;
   out_4332092747232242913[288] = 0;
   out_4332092747232242913[289] = 0;
   out_4332092747232242913[290] = 0;
   out_4332092747232242913[291] = 0;
   out_4332092747232242913[292] = 0;
   out_4332092747232242913[293] = 0;
   out_4332092747232242913[294] = 0;
   out_4332092747232242913[295] = 0;
   out_4332092747232242913[296] = 0;
   out_4332092747232242913[297] = 0;
   out_4332092747232242913[298] = 0;
   out_4332092747232242913[299] = 0;
   out_4332092747232242913[300] = 0;
   out_4332092747232242913[301] = 0;
   out_4332092747232242913[302] = 0;
   out_4332092747232242913[303] = 0;
   out_4332092747232242913[304] = 0;
   out_4332092747232242913[305] = 0;
   out_4332092747232242913[306] = 0;
   out_4332092747232242913[307] = 0;
   out_4332092747232242913[308] = 1;
   out_4332092747232242913[309] = 0;
   out_4332092747232242913[310] = 0;
   out_4332092747232242913[311] = 0;
   out_4332092747232242913[312] = 0;
   out_4332092747232242913[313] = 0;
   out_4332092747232242913[314] = 0;
   out_4332092747232242913[315] = 0;
   out_4332092747232242913[316] = 0;
   out_4332092747232242913[317] = 0;
   out_4332092747232242913[318] = 0;
   out_4332092747232242913[319] = 0;
   out_4332092747232242913[320] = 0;
   out_4332092747232242913[321] = 0;
   out_4332092747232242913[322] = 0;
   out_4332092747232242913[323] = 0;
   out_4332092747232242913[324] = 0;
   out_4332092747232242913[325] = 0;
   out_4332092747232242913[326] = 0;
   out_4332092747232242913[327] = 0;
   out_4332092747232242913[328] = 0;
   out_4332092747232242913[329] = 0;
   out_4332092747232242913[330] = 1;
   out_4332092747232242913[331] = 0;
   out_4332092747232242913[332] = 0;
   out_4332092747232242913[333] = 0;
   out_4332092747232242913[334] = 0;
   out_4332092747232242913[335] = 0;
   out_4332092747232242913[336] = 0;
   out_4332092747232242913[337] = 0;
   out_4332092747232242913[338] = 0;
   out_4332092747232242913[339] = 0;
   out_4332092747232242913[340] = 0;
   out_4332092747232242913[341] = 0;
   out_4332092747232242913[342] = 0;
   out_4332092747232242913[343] = 0;
   out_4332092747232242913[344] = 0;
   out_4332092747232242913[345] = 0;
   out_4332092747232242913[346] = 0;
   out_4332092747232242913[347] = 0;
   out_4332092747232242913[348] = 0;
   out_4332092747232242913[349] = 0;
   out_4332092747232242913[350] = 0;
   out_4332092747232242913[351] = 0;
   out_4332092747232242913[352] = 1;
   out_4332092747232242913[353] = 0;
   out_4332092747232242913[354] = 0;
   out_4332092747232242913[355] = 0;
   out_4332092747232242913[356] = 0;
   out_4332092747232242913[357] = 0;
   out_4332092747232242913[358] = 0;
   out_4332092747232242913[359] = 0;
   out_4332092747232242913[360] = 0;
   out_4332092747232242913[361] = 0;
   out_4332092747232242913[362] = 0;
   out_4332092747232242913[363] = 0;
   out_4332092747232242913[364] = 0;
   out_4332092747232242913[365] = 0;
   out_4332092747232242913[366] = 0;
   out_4332092747232242913[367] = 0;
   out_4332092747232242913[368] = 0;
   out_4332092747232242913[369] = 0;
   out_4332092747232242913[370] = 0;
   out_4332092747232242913[371] = 0;
   out_4332092747232242913[372] = 0;
   out_4332092747232242913[373] = 0;
   out_4332092747232242913[374] = 1;
   out_4332092747232242913[375] = 0;
   out_4332092747232242913[376] = 0;
   out_4332092747232242913[377] = 0;
   out_4332092747232242913[378] = 0;
   out_4332092747232242913[379] = 0;
   out_4332092747232242913[380] = 0;
   out_4332092747232242913[381] = 0;
   out_4332092747232242913[382] = 0;
   out_4332092747232242913[383] = 0;
   out_4332092747232242913[384] = 0;
   out_4332092747232242913[385] = 0;
   out_4332092747232242913[386] = 0;
   out_4332092747232242913[387] = 0;
   out_4332092747232242913[388] = 0;
   out_4332092747232242913[389] = 0;
   out_4332092747232242913[390] = 0;
   out_4332092747232242913[391] = 0;
   out_4332092747232242913[392] = 0;
   out_4332092747232242913[393] = 0;
   out_4332092747232242913[394] = 0;
   out_4332092747232242913[395] = 0;
   out_4332092747232242913[396] = 1;
   out_4332092747232242913[397] = 0;
   out_4332092747232242913[398] = 0;
   out_4332092747232242913[399] = 0;
   out_4332092747232242913[400] = 0;
   out_4332092747232242913[401] = 0;
   out_4332092747232242913[402] = 0;
   out_4332092747232242913[403] = 0;
   out_4332092747232242913[404] = 0;
   out_4332092747232242913[405] = 0;
   out_4332092747232242913[406] = 0;
   out_4332092747232242913[407] = 0;
   out_4332092747232242913[408] = 0;
   out_4332092747232242913[409] = 0;
   out_4332092747232242913[410] = 0;
   out_4332092747232242913[411] = 0;
   out_4332092747232242913[412] = 0;
   out_4332092747232242913[413] = 0;
   out_4332092747232242913[414] = 0;
   out_4332092747232242913[415] = 0;
   out_4332092747232242913[416] = 0;
   out_4332092747232242913[417] = 0;
   out_4332092747232242913[418] = 1;
   out_4332092747232242913[419] = 0;
   out_4332092747232242913[420] = 0;
   out_4332092747232242913[421] = 0;
   out_4332092747232242913[422] = 0;
   out_4332092747232242913[423] = 0;
   out_4332092747232242913[424] = 0;
   out_4332092747232242913[425] = 0;
   out_4332092747232242913[426] = 0;
   out_4332092747232242913[427] = 0;
   out_4332092747232242913[428] = 0;
   out_4332092747232242913[429] = 0;
   out_4332092747232242913[430] = 0;
   out_4332092747232242913[431] = 0;
   out_4332092747232242913[432] = 0;
   out_4332092747232242913[433] = 0;
   out_4332092747232242913[434] = 0;
   out_4332092747232242913[435] = 0;
   out_4332092747232242913[436] = 0;
   out_4332092747232242913[437] = 0;
   out_4332092747232242913[438] = 0;
   out_4332092747232242913[439] = 0;
   out_4332092747232242913[440] = 1;
}
void h_4(double *state, double *unused, double *out_6582152946104087701) {
   out_6582152946104087701[0] = state[10] + state[13];
   out_6582152946104087701[1] = state[11] + state[14];
   out_6582152946104087701[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8426954437225368770) {
   out_8426954437225368770[0] = 0;
   out_8426954437225368770[1] = 0;
   out_8426954437225368770[2] = 0;
   out_8426954437225368770[3] = 0;
   out_8426954437225368770[4] = 0;
   out_8426954437225368770[5] = 0;
   out_8426954437225368770[6] = 0;
   out_8426954437225368770[7] = 0;
   out_8426954437225368770[8] = 0;
   out_8426954437225368770[9] = 0;
   out_8426954437225368770[10] = 1;
   out_8426954437225368770[11] = 0;
   out_8426954437225368770[12] = 0;
   out_8426954437225368770[13] = 1;
   out_8426954437225368770[14] = 0;
   out_8426954437225368770[15] = 0;
   out_8426954437225368770[16] = 0;
   out_8426954437225368770[17] = 0;
   out_8426954437225368770[18] = 0;
   out_8426954437225368770[19] = 0;
   out_8426954437225368770[20] = 0;
   out_8426954437225368770[21] = 0;
   out_8426954437225368770[22] = 0;
   out_8426954437225368770[23] = 0;
   out_8426954437225368770[24] = 0;
   out_8426954437225368770[25] = 0;
   out_8426954437225368770[26] = 0;
   out_8426954437225368770[27] = 0;
   out_8426954437225368770[28] = 0;
   out_8426954437225368770[29] = 0;
   out_8426954437225368770[30] = 0;
   out_8426954437225368770[31] = 0;
   out_8426954437225368770[32] = 0;
   out_8426954437225368770[33] = 1;
   out_8426954437225368770[34] = 0;
   out_8426954437225368770[35] = 0;
   out_8426954437225368770[36] = 1;
   out_8426954437225368770[37] = 0;
   out_8426954437225368770[38] = 0;
   out_8426954437225368770[39] = 0;
   out_8426954437225368770[40] = 0;
   out_8426954437225368770[41] = 0;
   out_8426954437225368770[42] = 0;
   out_8426954437225368770[43] = 0;
   out_8426954437225368770[44] = 0;
   out_8426954437225368770[45] = 0;
   out_8426954437225368770[46] = 0;
   out_8426954437225368770[47] = 0;
   out_8426954437225368770[48] = 0;
   out_8426954437225368770[49] = 0;
   out_8426954437225368770[50] = 0;
   out_8426954437225368770[51] = 0;
   out_8426954437225368770[52] = 0;
   out_8426954437225368770[53] = 0;
   out_8426954437225368770[54] = 0;
   out_8426954437225368770[55] = 0;
   out_8426954437225368770[56] = 1;
   out_8426954437225368770[57] = 0;
   out_8426954437225368770[58] = 0;
   out_8426954437225368770[59] = 1;
   out_8426954437225368770[60] = 0;
   out_8426954437225368770[61] = 0;
   out_8426954437225368770[62] = 0;
   out_8426954437225368770[63] = 0;
   out_8426954437225368770[64] = 0;
   out_8426954437225368770[65] = 0;
}
void h_9(double *state, double *unused, double *out_7444569565063482614) {
   out_7444569565063482614[0] = state[10];
   out_7444569565063482614[1] = state[11];
   out_7444569565063482614[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7130928084204103504) {
   out_7130928084204103504[0] = 0;
   out_7130928084204103504[1] = 0;
   out_7130928084204103504[2] = 0;
   out_7130928084204103504[3] = 0;
   out_7130928084204103504[4] = 0;
   out_7130928084204103504[5] = 0;
   out_7130928084204103504[6] = 0;
   out_7130928084204103504[7] = 0;
   out_7130928084204103504[8] = 0;
   out_7130928084204103504[9] = 0;
   out_7130928084204103504[10] = 1;
   out_7130928084204103504[11] = 0;
   out_7130928084204103504[12] = 0;
   out_7130928084204103504[13] = 0;
   out_7130928084204103504[14] = 0;
   out_7130928084204103504[15] = 0;
   out_7130928084204103504[16] = 0;
   out_7130928084204103504[17] = 0;
   out_7130928084204103504[18] = 0;
   out_7130928084204103504[19] = 0;
   out_7130928084204103504[20] = 0;
   out_7130928084204103504[21] = 0;
   out_7130928084204103504[22] = 0;
   out_7130928084204103504[23] = 0;
   out_7130928084204103504[24] = 0;
   out_7130928084204103504[25] = 0;
   out_7130928084204103504[26] = 0;
   out_7130928084204103504[27] = 0;
   out_7130928084204103504[28] = 0;
   out_7130928084204103504[29] = 0;
   out_7130928084204103504[30] = 0;
   out_7130928084204103504[31] = 0;
   out_7130928084204103504[32] = 0;
   out_7130928084204103504[33] = 1;
   out_7130928084204103504[34] = 0;
   out_7130928084204103504[35] = 0;
   out_7130928084204103504[36] = 0;
   out_7130928084204103504[37] = 0;
   out_7130928084204103504[38] = 0;
   out_7130928084204103504[39] = 0;
   out_7130928084204103504[40] = 0;
   out_7130928084204103504[41] = 0;
   out_7130928084204103504[42] = 0;
   out_7130928084204103504[43] = 0;
   out_7130928084204103504[44] = 0;
   out_7130928084204103504[45] = 0;
   out_7130928084204103504[46] = 0;
   out_7130928084204103504[47] = 0;
   out_7130928084204103504[48] = 0;
   out_7130928084204103504[49] = 0;
   out_7130928084204103504[50] = 0;
   out_7130928084204103504[51] = 0;
   out_7130928084204103504[52] = 0;
   out_7130928084204103504[53] = 0;
   out_7130928084204103504[54] = 0;
   out_7130928084204103504[55] = 0;
   out_7130928084204103504[56] = 1;
   out_7130928084204103504[57] = 0;
   out_7130928084204103504[58] = 0;
   out_7130928084204103504[59] = 0;
   out_7130928084204103504[60] = 0;
   out_7130928084204103504[61] = 0;
   out_7130928084204103504[62] = 0;
   out_7130928084204103504[63] = 0;
   out_7130928084204103504[64] = 0;
   out_7130928084204103504[65] = 0;
}
void h_10(double *state, double *unused, double *out_1939752611965379146) {
   out_1939752611965379146[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1939752611965379146[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1939752611965379146[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6385265893824183484) {
   out_6385265893824183484[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6385265893824183484[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6385265893824183484[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6385265893824183484[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6385265893824183484[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6385265893824183484[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6385265893824183484[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6385265893824183484[7] = 0;
   out_6385265893824183484[8] = 0;
   out_6385265893824183484[9] = 0;
   out_6385265893824183484[10] = 0;
   out_6385265893824183484[11] = 0;
   out_6385265893824183484[12] = 0;
   out_6385265893824183484[13] = 0;
   out_6385265893824183484[14] = 0;
   out_6385265893824183484[15] = 0;
   out_6385265893824183484[16] = 1;
   out_6385265893824183484[17] = 0;
   out_6385265893824183484[18] = 0;
   out_6385265893824183484[19] = 1;
   out_6385265893824183484[20] = 0;
   out_6385265893824183484[21] = 0;
   out_6385265893824183484[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6385265893824183484[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6385265893824183484[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6385265893824183484[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6385265893824183484[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6385265893824183484[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6385265893824183484[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6385265893824183484[29] = 0;
   out_6385265893824183484[30] = 0;
   out_6385265893824183484[31] = 0;
   out_6385265893824183484[32] = 0;
   out_6385265893824183484[33] = 0;
   out_6385265893824183484[34] = 0;
   out_6385265893824183484[35] = 0;
   out_6385265893824183484[36] = 0;
   out_6385265893824183484[37] = 0;
   out_6385265893824183484[38] = 0;
   out_6385265893824183484[39] = 1;
   out_6385265893824183484[40] = 0;
   out_6385265893824183484[41] = 0;
   out_6385265893824183484[42] = 1;
   out_6385265893824183484[43] = 0;
   out_6385265893824183484[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6385265893824183484[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6385265893824183484[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6385265893824183484[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6385265893824183484[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6385265893824183484[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6385265893824183484[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6385265893824183484[51] = 0;
   out_6385265893824183484[52] = 0;
   out_6385265893824183484[53] = 0;
   out_6385265893824183484[54] = 0;
   out_6385265893824183484[55] = 0;
   out_6385265893824183484[56] = 0;
   out_6385265893824183484[57] = 0;
   out_6385265893824183484[58] = 0;
   out_6385265893824183484[59] = 0;
   out_6385265893824183484[60] = 0;
   out_6385265893824183484[61] = 0;
   out_6385265893824183484[62] = 1;
   out_6385265893824183484[63] = 0;
   out_6385265893824183484[64] = 0;
   out_6385265893824183484[65] = 1;
}
void h_12(double *state, double *unused, double *out_7296993372404775801) {
   out_7296993372404775801[0] = state[0];
   out_7296993372404775801[1] = state[1];
   out_7296993372404775801[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2352661322801732354) {
   out_2352661322801732354[0] = 1;
   out_2352661322801732354[1] = 0;
   out_2352661322801732354[2] = 0;
   out_2352661322801732354[3] = 0;
   out_2352661322801732354[4] = 0;
   out_2352661322801732354[5] = 0;
   out_2352661322801732354[6] = 0;
   out_2352661322801732354[7] = 0;
   out_2352661322801732354[8] = 0;
   out_2352661322801732354[9] = 0;
   out_2352661322801732354[10] = 0;
   out_2352661322801732354[11] = 0;
   out_2352661322801732354[12] = 0;
   out_2352661322801732354[13] = 0;
   out_2352661322801732354[14] = 0;
   out_2352661322801732354[15] = 0;
   out_2352661322801732354[16] = 0;
   out_2352661322801732354[17] = 0;
   out_2352661322801732354[18] = 0;
   out_2352661322801732354[19] = 0;
   out_2352661322801732354[20] = 0;
   out_2352661322801732354[21] = 0;
   out_2352661322801732354[22] = 0;
   out_2352661322801732354[23] = 1;
   out_2352661322801732354[24] = 0;
   out_2352661322801732354[25] = 0;
   out_2352661322801732354[26] = 0;
   out_2352661322801732354[27] = 0;
   out_2352661322801732354[28] = 0;
   out_2352661322801732354[29] = 0;
   out_2352661322801732354[30] = 0;
   out_2352661322801732354[31] = 0;
   out_2352661322801732354[32] = 0;
   out_2352661322801732354[33] = 0;
   out_2352661322801732354[34] = 0;
   out_2352661322801732354[35] = 0;
   out_2352661322801732354[36] = 0;
   out_2352661322801732354[37] = 0;
   out_2352661322801732354[38] = 0;
   out_2352661322801732354[39] = 0;
   out_2352661322801732354[40] = 0;
   out_2352661322801732354[41] = 0;
   out_2352661322801732354[42] = 0;
   out_2352661322801732354[43] = 0;
   out_2352661322801732354[44] = 0;
   out_2352661322801732354[45] = 0;
   out_2352661322801732354[46] = 1;
   out_2352661322801732354[47] = 0;
   out_2352661322801732354[48] = 0;
   out_2352661322801732354[49] = 0;
   out_2352661322801732354[50] = 0;
   out_2352661322801732354[51] = 0;
   out_2352661322801732354[52] = 0;
   out_2352661322801732354[53] = 0;
   out_2352661322801732354[54] = 0;
   out_2352661322801732354[55] = 0;
   out_2352661322801732354[56] = 0;
   out_2352661322801732354[57] = 0;
   out_2352661322801732354[58] = 0;
   out_2352661322801732354[59] = 0;
   out_2352661322801732354[60] = 0;
   out_2352661322801732354[61] = 0;
   out_2352661322801732354[62] = 0;
   out_2352661322801732354[63] = 0;
   out_2352661322801732354[64] = 0;
   out_2352661322801732354[65] = 0;
}
void h_35(double *state, double *unused, double *out_947171662528612088) {
   out_947171662528612088[0] = state[7];
   out_947171662528612088[1] = state[8];
   out_947171662528612088[2] = state[9];
}
void H_35(double *state, double *unused, double *out_392901709523281355) {
   out_392901709523281355[0] = 0;
   out_392901709523281355[1] = 0;
   out_392901709523281355[2] = 0;
   out_392901709523281355[3] = 0;
   out_392901709523281355[4] = 0;
   out_392901709523281355[5] = 0;
   out_392901709523281355[6] = 0;
   out_392901709523281355[7] = 1;
   out_392901709523281355[8] = 0;
   out_392901709523281355[9] = 0;
   out_392901709523281355[10] = 0;
   out_392901709523281355[11] = 0;
   out_392901709523281355[12] = 0;
   out_392901709523281355[13] = 0;
   out_392901709523281355[14] = 0;
   out_392901709523281355[15] = 0;
   out_392901709523281355[16] = 0;
   out_392901709523281355[17] = 0;
   out_392901709523281355[18] = 0;
   out_392901709523281355[19] = 0;
   out_392901709523281355[20] = 0;
   out_392901709523281355[21] = 0;
   out_392901709523281355[22] = 0;
   out_392901709523281355[23] = 0;
   out_392901709523281355[24] = 0;
   out_392901709523281355[25] = 0;
   out_392901709523281355[26] = 0;
   out_392901709523281355[27] = 0;
   out_392901709523281355[28] = 0;
   out_392901709523281355[29] = 0;
   out_392901709523281355[30] = 1;
   out_392901709523281355[31] = 0;
   out_392901709523281355[32] = 0;
   out_392901709523281355[33] = 0;
   out_392901709523281355[34] = 0;
   out_392901709523281355[35] = 0;
   out_392901709523281355[36] = 0;
   out_392901709523281355[37] = 0;
   out_392901709523281355[38] = 0;
   out_392901709523281355[39] = 0;
   out_392901709523281355[40] = 0;
   out_392901709523281355[41] = 0;
   out_392901709523281355[42] = 0;
   out_392901709523281355[43] = 0;
   out_392901709523281355[44] = 0;
   out_392901709523281355[45] = 0;
   out_392901709523281355[46] = 0;
   out_392901709523281355[47] = 0;
   out_392901709523281355[48] = 0;
   out_392901709523281355[49] = 0;
   out_392901709523281355[50] = 0;
   out_392901709523281355[51] = 0;
   out_392901709523281355[52] = 0;
   out_392901709523281355[53] = 1;
   out_392901709523281355[54] = 0;
   out_392901709523281355[55] = 0;
   out_392901709523281355[56] = 0;
   out_392901709523281355[57] = 0;
   out_392901709523281355[58] = 0;
   out_392901709523281355[59] = 0;
   out_392901709523281355[60] = 0;
   out_392901709523281355[61] = 0;
   out_392901709523281355[62] = 0;
   out_392901709523281355[63] = 0;
   out_392901709523281355[64] = 0;
   out_392901709523281355[65] = 0;
}
void h_32(double *state, double *unused, double *out_2929900686975731664) {
   out_2929900686975731664[0] = state[3];
   out_2929900686975731664[1] = state[4];
   out_2929900686975731664[2] = state[5];
   out_2929900686975731664[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8907135071749521650) {
   out_8907135071749521650[0] = 0;
   out_8907135071749521650[1] = 0;
   out_8907135071749521650[2] = 0;
   out_8907135071749521650[3] = 1;
   out_8907135071749521650[4] = 0;
   out_8907135071749521650[5] = 0;
   out_8907135071749521650[6] = 0;
   out_8907135071749521650[7] = 0;
   out_8907135071749521650[8] = 0;
   out_8907135071749521650[9] = 0;
   out_8907135071749521650[10] = 0;
   out_8907135071749521650[11] = 0;
   out_8907135071749521650[12] = 0;
   out_8907135071749521650[13] = 0;
   out_8907135071749521650[14] = 0;
   out_8907135071749521650[15] = 0;
   out_8907135071749521650[16] = 0;
   out_8907135071749521650[17] = 0;
   out_8907135071749521650[18] = 0;
   out_8907135071749521650[19] = 0;
   out_8907135071749521650[20] = 0;
   out_8907135071749521650[21] = 0;
   out_8907135071749521650[22] = 0;
   out_8907135071749521650[23] = 0;
   out_8907135071749521650[24] = 0;
   out_8907135071749521650[25] = 0;
   out_8907135071749521650[26] = 1;
   out_8907135071749521650[27] = 0;
   out_8907135071749521650[28] = 0;
   out_8907135071749521650[29] = 0;
   out_8907135071749521650[30] = 0;
   out_8907135071749521650[31] = 0;
   out_8907135071749521650[32] = 0;
   out_8907135071749521650[33] = 0;
   out_8907135071749521650[34] = 0;
   out_8907135071749521650[35] = 0;
   out_8907135071749521650[36] = 0;
   out_8907135071749521650[37] = 0;
   out_8907135071749521650[38] = 0;
   out_8907135071749521650[39] = 0;
   out_8907135071749521650[40] = 0;
   out_8907135071749521650[41] = 0;
   out_8907135071749521650[42] = 0;
   out_8907135071749521650[43] = 0;
   out_8907135071749521650[44] = 0;
   out_8907135071749521650[45] = 0;
   out_8907135071749521650[46] = 0;
   out_8907135071749521650[47] = 0;
   out_8907135071749521650[48] = 0;
   out_8907135071749521650[49] = 1;
   out_8907135071749521650[50] = 0;
   out_8907135071749521650[51] = 0;
   out_8907135071749521650[52] = 0;
   out_8907135071749521650[53] = 0;
   out_8907135071749521650[54] = 0;
   out_8907135071749521650[55] = 0;
   out_8907135071749521650[56] = 0;
   out_8907135071749521650[57] = 0;
   out_8907135071749521650[58] = 0;
   out_8907135071749521650[59] = 0;
   out_8907135071749521650[60] = 0;
   out_8907135071749521650[61] = 0;
   out_8907135071749521650[62] = 0;
   out_8907135071749521650[63] = 0;
   out_8907135071749521650[64] = 0;
   out_8907135071749521650[65] = 0;
   out_8907135071749521650[66] = 0;
   out_8907135071749521650[67] = 0;
   out_8907135071749521650[68] = 0;
   out_8907135071749521650[69] = 0;
   out_8907135071749521650[70] = 0;
   out_8907135071749521650[71] = 0;
   out_8907135071749521650[72] = 1;
   out_8907135071749521650[73] = 0;
   out_8907135071749521650[74] = 0;
   out_8907135071749521650[75] = 0;
   out_8907135071749521650[76] = 0;
   out_8907135071749521650[77] = 0;
   out_8907135071749521650[78] = 0;
   out_8907135071749521650[79] = 0;
   out_8907135071749521650[80] = 0;
   out_8907135071749521650[81] = 0;
   out_8907135071749521650[82] = 0;
   out_8907135071749521650[83] = 0;
   out_8907135071749521650[84] = 0;
   out_8907135071749521650[85] = 0;
   out_8907135071749521650[86] = 0;
   out_8907135071749521650[87] = 0;
}
void h_13(double *state, double *unused, double *out_4581312559012542837) {
   out_4581312559012542837[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4581312559012542837[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4581312559012542837[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_569470278268388809) {
   out_569470278268388809[0] = 0;
   out_569470278268388809[1] = 0;
   out_569470278268388809[2] = 0;
   out_569470278268388809[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_569470278268388809[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_569470278268388809[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_569470278268388809[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_569470278268388809[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_569470278268388809[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_569470278268388809[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_569470278268388809[10] = 0;
   out_569470278268388809[11] = 0;
   out_569470278268388809[12] = 0;
   out_569470278268388809[13] = 0;
   out_569470278268388809[14] = 0;
   out_569470278268388809[15] = 0;
   out_569470278268388809[16] = 0;
   out_569470278268388809[17] = 0;
   out_569470278268388809[18] = 0;
   out_569470278268388809[19] = 0;
   out_569470278268388809[20] = 0;
   out_569470278268388809[21] = 0;
   out_569470278268388809[22] = 0;
   out_569470278268388809[23] = 0;
   out_569470278268388809[24] = 0;
   out_569470278268388809[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_569470278268388809[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_569470278268388809[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_569470278268388809[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_569470278268388809[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_569470278268388809[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_569470278268388809[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_569470278268388809[32] = 0;
   out_569470278268388809[33] = 0;
   out_569470278268388809[34] = 0;
   out_569470278268388809[35] = 0;
   out_569470278268388809[36] = 0;
   out_569470278268388809[37] = 0;
   out_569470278268388809[38] = 0;
   out_569470278268388809[39] = 0;
   out_569470278268388809[40] = 0;
   out_569470278268388809[41] = 0;
   out_569470278268388809[42] = 0;
   out_569470278268388809[43] = 0;
   out_569470278268388809[44] = 0;
   out_569470278268388809[45] = 0;
   out_569470278268388809[46] = 0;
   out_569470278268388809[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_569470278268388809[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_569470278268388809[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_569470278268388809[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_569470278268388809[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_569470278268388809[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_569470278268388809[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_569470278268388809[54] = 0;
   out_569470278268388809[55] = 0;
   out_569470278268388809[56] = 0;
   out_569470278268388809[57] = 0;
   out_569470278268388809[58] = 0;
   out_569470278268388809[59] = 0;
   out_569470278268388809[60] = 0;
   out_569470278268388809[61] = 0;
   out_569470278268388809[62] = 0;
   out_569470278268388809[63] = 0;
   out_569470278268388809[64] = 0;
   out_569470278268388809[65] = 0;
}
void h_14(double *state, double *unused, double *out_7444569565063482614) {
   out_7444569565063482614[0] = state[10];
   out_7444569565063482614[1] = state[11];
   out_7444569565063482614[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7130928084204103504) {
   out_7130928084204103504[0] = 0;
   out_7130928084204103504[1] = 0;
   out_7130928084204103504[2] = 0;
   out_7130928084204103504[3] = 0;
   out_7130928084204103504[4] = 0;
   out_7130928084204103504[5] = 0;
   out_7130928084204103504[6] = 0;
   out_7130928084204103504[7] = 0;
   out_7130928084204103504[8] = 0;
   out_7130928084204103504[9] = 0;
   out_7130928084204103504[10] = 1;
   out_7130928084204103504[11] = 0;
   out_7130928084204103504[12] = 0;
   out_7130928084204103504[13] = 0;
   out_7130928084204103504[14] = 0;
   out_7130928084204103504[15] = 0;
   out_7130928084204103504[16] = 0;
   out_7130928084204103504[17] = 0;
   out_7130928084204103504[18] = 0;
   out_7130928084204103504[19] = 0;
   out_7130928084204103504[20] = 0;
   out_7130928084204103504[21] = 0;
   out_7130928084204103504[22] = 0;
   out_7130928084204103504[23] = 0;
   out_7130928084204103504[24] = 0;
   out_7130928084204103504[25] = 0;
   out_7130928084204103504[26] = 0;
   out_7130928084204103504[27] = 0;
   out_7130928084204103504[28] = 0;
   out_7130928084204103504[29] = 0;
   out_7130928084204103504[30] = 0;
   out_7130928084204103504[31] = 0;
   out_7130928084204103504[32] = 0;
   out_7130928084204103504[33] = 1;
   out_7130928084204103504[34] = 0;
   out_7130928084204103504[35] = 0;
   out_7130928084204103504[36] = 0;
   out_7130928084204103504[37] = 0;
   out_7130928084204103504[38] = 0;
   out_7130928084204103504[39] = 0;
   out_7130928084204103504[40] = 0;
   out_7130928084204103504[41] = 0;
   out_7130928084204103504[42] = 0;
   out_7130928084204103504[43] = 0;
   out_7130928084204103504[44] = 0;
   out_7130928084204103504[45] = 0;
   out_7130928084204103504[46] = 0;
   out_7130928084204103504[47] = 0;
   out_7130928084204103504[48] = 0;
   out_7130928084204103504[49] = 0;
   out_7130928084204103504[50] = 0;
   out_7130928084204103504[51] = 0;
   out_7130928084204103504[52] = 0;
   out_7130928084204103504[53] = 0;
   out_7130928084204103504[54] = 0;
   out_7130928084204103504[55] = 0;
   out_7130928084204103504[56] = 1;
   out_7130928084204103504[57] = 0;
   out_7130928084204103504[58] = 0;
   out_7130928084204103504[59] = 0;
   out_7130928084204103504[60] = 0;
   out_7130928084204103504[61] = 0;
   out_7130928084204103504[62] = 0;
   out_7130928084204103504[63] = 0;
   out_7130928084204103504[64] = 0;
   out_7130928084204103504[65] = 0;
}
void h_33(double *state, double *unused, double *out_7317084925230058116) {
   out_7317084925230058116[0] = state[16];
   out_7317084925230058116[1] = state[17];
   out_7317084925230058116[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3543458714162138959) {
   out_3543458714162138959[0] = 0;
   out_3543458714162138959[1] = 0;
   out_3543458714162138959[2] = 0;
   out_3543458714162138959[3] = 0;
   out_3543458714162138959[4] = 0;
   out_3543458714162138959[5] = 0;
   out_3543458714162138959[6] = 0;
   out_3543458714162138959[7] = 0;
   out_3543458714162138959[8] = 0;
   out_3543458714162138959[9] = 0;
   out_3543458714162138959[10] = 0;
   out_3543458714162138959[11] = 0;
   out_3543458714162138959[12] = 0;
   out_3543458714162138959[13] = 0;
   out_3543458714162138959[14] = 0;
   out_3543458714162138959[15] = 0;
   out_3543458714162138959[16] = 1;
   out_3543458714162138959[17] = 0;
   out_3543458714162138959[18] = 0;
   out_3543458714162138959[19] = 0;
   out_3543458714162138959[20] = 0;
   out_3543458714162138959[21] = 0;
   out_3543458714162138959[22] = 0;
   out_3543458714162138959[23] = 0;
   out_3543458714162138959[24] = 0;
   out_3543458714162138959[25] = 0;
   out_3543458714162138959[26] = 0;
   out_3543458714162138959[27] = 0;
   out_3543458714162138959[28] = 0;
   out_3543458714162138959[29] = 0;
   out_3543458714162138959[30] = 0;
   out_3543458714162138959[31] = 0;
   out_3543458714162138959[32] = 0;
   out_3543458714162138959[33] = 0;
   out_3543458714162138959[34] = 0;
   out_3543458714162138959[35] = 0;
   out_3543458714162138959[36] = 0;
   out_3543458714162138959[37] = 0;
   out_3543458714162138959[38] = 0;
   out_3543458714162138959[39] = 1;
   out_3543458714162138959[40] = 0;
   out_3543458714162138959[41] = 0;
   out_3543458714162138959[42] = 0;
   out_3543458714162138959[43] = 0;
   out_3543458714162138959[44] = 0;
   out_3543458714162138959[45] = 0;
   out_3543458714162138959[46] = 0;
   out_3543458714162138959[47] = 0;
   out_3543458714162138959[48] = 0;
   out_3543458714162138959[49] = 0;
   out_3543458714162138959[50] = 0;
   out_3543458714162138959[51] = 0;
   out_3543458714162138959[52] = 0;
   out_3543458714162138959[53] = 0;
   out_3543458714162138959[54] = 0;
   out_3543458714162138959[55] = 0;
   out_3543458714162138959[56] = 0;
   out_3543458714162138959[57] = 0;
   out_3543458714162138959[58] = 0;
   out_3543458714162138959[59] = 0;
   out_3543458714162138959[60] = 0;
   out_3543458714162138959[61] = 0;
   out_3543458714162138959[62] = 1;
   out_3543458714162138959[63] = 0;
   out_3543458714162138959[64] = 0;
   out_3543458714162138959[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6240008686817713408) {
  H(in_vec, out_6240008686817713408);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3690665086918622964) {
  err_fun(nom_x, delta_x, out_3690665086918622964);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8615868703535681088) {
  inv_err_fun(nom_x, true_x, out_8615868703535681088);
}
void live_H_mod_fun(double *state, double *out_1988291488770769521) {
  H_mod_fun(state, out_1988291488770769521);
}
void live_f_fun(double *state, double dt, double *out_3263988285527381505) {
  f_fun(state,  dt, out_3263988285527381505);
}
void live_F_fun(double *state, double dt, double *out_4332092747232242913) {
  F_fun(state,  dt, out_4332092747232242913);
}
void live_h_4(double *state, double *unused, double *out_6582152946104087701) {
  h_4(state, unused, out_6582152946104087701);
}
void live_H_4(double *state, double *unused, double *out_8426954437225368770) {
  H_4(state, unused, out_8426954437225368770);
}
void live_h_9(double *state, double *unused, double *out_7444569565063482614) {
  h_9(state, unused, out_7444569565063482614);
}
void live_H_9(double *state, double *unused, double *out_7130928084204103504) {
  H_9(state, unused, out_7130928084204103504);
}
void live_h_10(double *state, double *unused, double *out_1939752611965379146) {
  h_10(state, unused, out_1939752611965379146);
}
void live_H_10(double *state, double *unused, double *out_6385265893824183484) {
  H_10(state, unused, out_6385265893824183484);
}
void live_h_12(double *state, double *unused, double *out_7296993372404775801) {
  h_12(state, unused, out_7296993372404775801);
}
void live_H_12(double *state, double *unused, double *out_2352661322801732354) {
  H_12(state, unused, out_2352661322801732354);
}
void live_h_35(double *state, double *unused, double *out_947171662528612088) {
  h_35(state, unused, out_947171662528612088);
}
void live_H_35(double *state, double *unused, double *out_392901709523281355) {
  H_35(state, unused, out_392901709523281355);
}
void live_h_32(double *state, double *unused, double *out_2929900686975731664) {
  h_32(state, unused, out_2929900686975731664);
}
void live_H_32(double *state, double *unused, double *out_8907135071749521650) {
  H_32(state, unused, out_8907135071749521650);
}
void live_h_13(double *state, double *unused, double *out_4581312559012542837) {
  h_13(state, unused, out_4581312559012542837);
}
void live_H_13(double *state, double *unused, double *out_569470278268388809) {
  H_13(state, unused, out_569470278268388809);
}
void live_h_14(double *state, double *unused, double *out_7444569565063482614) {
  h_14(state, unused, out_7444569565063482614);
}
void live_H_14(double *state, double *unused, double *out_7130928084204103504) {
  H_14(state, unused, out_7130928084204103504);
}
void live_h_33(double *state, double *unused, double *out_7317084925230058116) {
  h_33(state, unused, out_7317084925230058116);
}
void live_H_33(double *state, double *unused, double *out_3543458714162138959) {
  H_33(state, unused, out_3543458714162138959);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);

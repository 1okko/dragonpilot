#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5472226391913428582) {
   out_5472226391913428582[0] = 0;
   out_5472226391913428582[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5472226391913428582[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5472226391913428582[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5472226391913428582[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5472226391913428582[5] = -sin(in_vec[1]);
   out_5472226391913428582[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5472226391913428582[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5472226391913428582[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5472226391913428582[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5472226391913428582[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5472226391913428582[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5472226391913428582[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5472226391913428582[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5472226391913428582[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5472226391913428582[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5472226391913428582[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5472226391913428582[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6508029974320597245) {
   out_6508029974320597245[0] = delta_x[0] + nom_x[0];
   out_6508029974320597245[1] = delta_x[1] + nom_x[1];
   out_6508029974320597245[2] = delta_x[2] + nom_x[2];
   out_6508029974320597245[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6508029974320597245[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6508029974320597245[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6508029974320597245[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6508029974320597245[7] = delta_x[6] + nom_x[7];
   out_6508029974320597245[8] = delta_x[7] + nom_x[8];
   out_6508029974320597245[9] = delta_x[8] + nom_x[9];
   out_6508029974320597245[10] = delta_x[9] + nom_x[10];
   out_6508029974320597245[11] = delta_x[10] + nom_x[11];
   out_6508029974320597245[12] = delta_x[11] + nom_x[12];
   out_6508029974320597245[13] = delta_x[12] + nom_x[13];
   out_6508029974320597245[14] = delta_x[13] + nom_x[14];
   out_6508029974320597245[15] = delta_x[14] + nom_x[15];
   out_6508029974320597245[16] = delta_x[15] + nom_x[16];
   out_6508029974320597245[17] = delta_x[16] + nom_x[17];
   out_6508029974320597245[18] = delta_x[17] + nom_x[18];
   out_6508029974320597245[19] = delta_x[18] + nom_x[19];
   out_6508029974320597245[20] = delta_x[19] + nom_x[20];
   out_6508029974320597245[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2019856750264798283) {
   out_2019856750264798283[0] = -nom_x[0] + true_x[0];
   out_2019856750264798283[1] = -nom_x[1] + true_x[1];
   out_2019856750264798283[2] = -nom_x[2] + true_x[2];
   out_2019856750264798283[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2019856750264798283[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2019856750264798283[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2019856750264798283[6] = -nom_x[7] + true_x[7];
   out_2019856750264798283[7] = -nom_x[8] + true_x[8];
   out_2019856750264798283[8] = -nom_x[9] + true_x[9];
   out_2019856750264798283[9] = -nom_x[10] + true_x[10];
   out_2019856750264798283[10] = -nom_x[11] + true_x[11];
   out_2019856750264798283[11] = -nom_x[12] + true_x[12];
   out_2019856750264798283[12] = -nom_x[13] + true_x[13];
   out_2019856750264798283[13] = -nom_x[14] + true_x[14];
   out_2019856750264798283[14] = -nom_x[15] + true_x[15];
   out_2019856750264798283[15] = -nom_x[16] + true_x[16];
   out_2019856750264798283[16] = -nom_x[17] + true_x[17];
   out_2019856750264798283[17] = -nom_x[18] + true_x[18];
   out_2019856750264798283[18] = -nom_x[19] + true_x[19];
   out_2019856750264798283[19] = -nom_x[20] + true_x[20];
   out_2019856750264798283[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8564774469718261605) {
   out_8564774469718261605[0] = 1.0;
   out_8564774469718261605[1] = 0;
   out_8564774469718261605[2] = 0;
   out_8564774469718261605[3] = 0;
   out_8564774469718261605[4] = 0;
   out_8564774469718261605[5] = 0;
   out_8564774469718261605[6] = 0;
   out_8564774469718261605[7] = 0;
   out_8564774469718261605[8] = 0;
   out_8564774469718261605[9] = 0;
   out_8564774469718261605[10] = 0;
   out_8564774469718261605[11] = 0;
   out_8564774469718261605[12] = 0;
   out_8564774469718261605[13] = 0;
   out_8564774469718261605[14] = 0;
   out_8564774469718261605[15] = 0;
   out_8564774469718261605[16] = 0;
   out_8564774469718261605[17] = 0;
   out_8564774469718261605[18] = 0;
   out_8564774469718261605[19] = 0;
   out_8564774469718261605[20] = 0;
   out_8564774469718261605[21] = 0;
   out_8564774469718261605[22] = 1.0;
   out_8564774469718261605[23] = 0;
   out_8564774469718261605[24] = 0;
   out_8564774469718261605[25] = 0;
   out_8564774469718261605[26] = 0;
   out_8564774469718261605[27] = 0;
   out_8564774469718261605[28] = 0;
   out_8564774469718261605[29] = 0;
   out_8564774469718261605[30] = 0;
   out_8564774469718261605[31] = 0;
   out_8564774469718261605[32] = 0;
   out_8564774469718261605[33] = 0;
   out_8564774469718261605[34] = 0;
   out_8564774469718261605[35] = 0;
   out_8564774469718261605[36] = 0;
   out_8564774469718261605[37] = 0;
   out_8564774469718261605[38] = 0;
   out_8564774469718261605[39] = 0;
   out_8564774469718261605[40] = 0;
   out_8564774469718261605[41] = 0;
   out_8564774469718261605[42] = 0;
   out_8564774469718261605[43] = 0;
   out_8564774469718261605[44] = 1.0;
   out_8564774469718261605[45] = 0;
   out_8564774469718261605[46] = 0;
   out_8564774469718261605[47] = 0;
   out_8564774469718261605[48] = 0;
   out_8564774469718261605[49] = 0;
   out_8564774469718261605[50] = 0;
   out_8564774469718261605[51] = 0;
   out_8564774469718261605[52] = 0;
   out_8564774469718261605[53] = 0;
   out_8564774469718261605[54] = 0;
   out_8564774469718261605[55] = 0;
   out_8564774469718261605[56] = 0;
   out_8564774469718261605[57] = 0;
   out_8564774469718261605[58] = 0;
   out_8564774469718261605[59] = 0;
   out_8564774469718261605[60] = 0;
   out_8564774469718261605[61] = 0;
   out_8564774469718261605[62] = 0;
   out_8564774469718261605[63] = 0;
   out_8564774469718261605[64] = 0;
   out_8564774469718261605[65] = 0;
   out_8564774469718261605[66] = -0.5*state[4];
   out_8564774469718261605[67] = -0.5*state[5];
   out_8564774469718261605[68] = -0.5*state[6];
   out_8564774469718261605[69] = 0;
   out_8564774469718261605[70] = 0;
   out_8564774469718261605[71] = 0;
   out_8564774469718261605[72] = 0;
   out_8564774469718261605[73] = 0;
   out_8564774469718261605[74] = 0;
   out_8564774469718261605[75] = 0;
   out_8564774469718261605[76] = 0;
   out_8564774469718261605[77] = 0;
   out_8564774469718261605[78] = 0;
   out_8564774469718261605[79] = 0;
   out_8564774469718261605[80] = 0;
   out_8564774469718261605[81] = 0;
   out_8564774469718261605[82] = 0;
   out_8564774469718261605[83] = 0;
   out_8564774469718261605[84] = 0;
   out_8564774469718261605[85] = 0;
   out_8564774469718261605[86] = 0;
   out_8564774469718261605[87] = 0.5*state[3];
   out_8564774469718261605[88] = 0.5*state[6];
   out_8564774469718261605[89] = -0.5*state[5];
   out_8564774469718261605[90] = 0;
   out_8564774469718261605[91] = 0;
   out_8564774469718261605[92] = 0;
   out_8564774469718261605[93] = 0;
   out_8564774469718261605[94] = 0;
   out_8564774469718261605[95] = 0;
   out_8564774469718261605[96] = 0;
   out_8564774469718261605[97] = 0;
   out_8564774469718261605[98] = 0;
   out_8564774469718261605[99] = 0;
   out_8564774469718261605[100] = 0;
   out_8564774469718261605[101] = 0;
   out_8564774469718261605[102] = 0;
   out_8564774469718261605[103] = 0;
   out_8564774469718261605[104] = 0;
   out_8564774469718261605[105] = 0;
   out_8564774469718261605[106] = 0;
   out_8564774469718261605[107] = 0;
   out_8564774469718261605[108] = -0.5*state[6];
   out_8564774469718261605[109] = 0.5*state[3];
   out_8564774469718261605[110] = 0.5*state[4];
   out_8564774469718261605[111] = 0;
   out_8564774469718261605[112] = 0;
   out_8564774469718261605[113] = 0;
   out_8564774469718261605[114] = 0;
   out_8564774469718261605[115] = 0;
   out_8564774469718261605[116] = 0;
   out_8564774469718261605[117] = 0;
   out_8564774469718261605[118] = 0;
   out_8564774469718261605[119] = 0;
   out_8564774469718261605[120] = 0;
   out_8564774469718261605[121] = 0;
   out_8564774469718261605[122] = 0;
   out_8564774469718261605[123] = 0;
   out_8564774469718261605[124] = 0;
   out_8564774469718261605[125] = 0;
   out_8564774469718261605[126] = 0;
   out_8564774469718261605[127] = 0;
   out_8564774469718261605[128] = 0;
   out_8564774469718261605[129] = 0.5*state[5];
   out_8564774469718261605[130] = -0.5*state[4];
   out_8564774469718261605[131] = 0.5*state[3];
   out_8564774469718261605[132] = 0;
   out_8564774469718261605[133] = 0;
   out_8564774469718261605[134] = 0;
   out_8564774469718261605[135] = 0;
   out_8564774469718261605[136] = 0;
   out_8564774469718261605[137] = 0;
   out_8564774469718261605[138] = 0;
   out_8564774469718261605[139] = 0;
   out_8564774469718261605[140] = 0;
   out_8564774469718261605[141] = 0;
   out_8564774469718261605[142] = 0;
   out_8564774469718261605[143] = 0;
   out_8564774469718261605[144] = 0;
   out_8564774469718261605[145] = 0;
   out_8564774469718261605[146] = 0;
   out_8564774469718261605[147] = 0;
   out_8564774469718261605[148] = 0;
   out_8564774469718261605[149] = 0;
   out_8564774469718261605[150] = 0;
   out_8564774469718261605[151] = 0;
   out_8564774469718261605[152] = 0;
   out_8564774469718261605[153] = 1.0;
   out_8564774469718261605[154] = 0;
   out_8564774469718261605[155] = 0;
   out_8564774469718261605[156] = 0;
   out_8564774469718261605[157] = 0;
   out_8564774469718261605[158] = 0;
   out_8564774469718261605[159] = 0;
   out_8564774469718261605[160] = 0;
   out_8564774469718261605[161] = 0;
   out_8564774469718261605[162] = 0;
   out_8564774469718261605[163] = 0;
   out_8564774469718261605[164] = 0;
   out_8564774469718261605[165] = 0;
   out_8564774469718261605[166] = 0;
   out_8564774469718261605[167] = 0;
   out_8564774469718261605[168] = 0;
   out_8564774469718261605[169] = 0;
   out_8564774469718261605[170] = 0;
   out_8564774469718261605[171] = 0;
   out_8564774469718261605[172] = 0;
   out_8564774469718261605[173] = 0;
   out_8564774469718261605[174] = 0;
   out_8564774469718261605[175] = 1.0;
   out_8564774469718261605[176] = 0;
   out_8564774469718261605[177] = 0;
   out_8564774469718261605[178] = 0;
   out_8564774469718261605[179] = 0;
   out_8564774469718261605[180] = 0;
   out_8564774469718261605[181] = 0;
   out_8564774469718261605[182] = 0;
   out_8564774469718261605[183] = 0;
   out_8564774469718261605[184] = 0;
   out_8564774469718261605[185] = 0;
   out_8564774469718261605[186] = 0;
   out_8564774469718261605[187] = 0;
   out_8564774469718261605[188] = 0;
   out_8564774469718261605[189] = 0;
   out_8564774469718261605[190] = 0;
   out_8564774469718261605[191] = 0;
   out_8564774469718261605[192] = 0;
   out_8564774469718261605[193] = 0;
   out_8564774469718261605[194] = 0;
   out_8564774469718261605[195] = 0;
   out_8564774469718261605[196] = 0;
   out_8564774469718261605[197] = 1.0;
   out_8564774469718261605[198] = 0;
   out_8564774469718261605[199] = 0;
   out_8564774469718261605[200] = 0;
   out_8564774469718261605[201] = 0;
   out_8564774469718261605[202] = 0;
   out_8564774469718261605[203] = 0;
   out_8564774469718261605[204] = 0;
   out_8564774469718261605[205] = 0;
   out_8564774469718261605[206] = 0;
   out_8564774469718261605[207] = 0;
   out_8564774469718261605[208] = 0;
   out_8564774469718261605[209] = 0;
   out_8564774469718261605[210] = 0;
   out_8564774469718261605[211] = 0;
   out_8564774469718261605[212] = 0;
   out_8564774469718261605[213] = 0;
   out_8564774469718261605[214] = 0;
   out_8564774469718261605[215] = 0;
   out_8564774469718261605[216] = 0;
   out_8564774469718261605[217] = 0;
   out_8564774469718261605[218] = 0;
   out_8564774469718261605[219] = 1.0;
   out_8564774469718261605[220] = 0;
   out_8564774469718261605[221] = 0;
   out_8564774469718261605[222] = 0;
   out_8564774469718261605[223] = 0;
   out_8564774469718261605[224] = 0;
   out_8564774469718261605[225] = 0;
   out_8564774469718261605[226] = 0;
   out_8564774469718261605[227] = 0;
   out_8564774469718261605[228] = 0;
   out_8564774469718261605[229] = 0;
   out_8564774469718261605[230] = 0;
   out_8564774469718261605[231] = 0;
   out_8564774469718261605[232] = 0;
   out_8564774469718261605[233] = 0;
   out_8564774469718261605[234] = 0;
   out_8564774469718261605[235] = 0;
   out_8564774469718261605[236] = 0;
   out_8564774469718261605[237] = 0;
   out_8564774469718261605[238] = 0;
   out_8564774469718261605[239] = 0;
   out_8564774469718261605[240] = 0;
   out_8564774469718261605[241] = 1.0;
   out_8564774469718261605[242] = 0;
   out_8564774469718261605[243] = 0;
   out_8564774469718261605[244] = 0;
   out_8564774469718261605[245] = 0;
   out_8564774469718261605[246] = 0;
   out_8564774469718261605[247] = 0;
   out_8564774469718261605[248] = 0;
   out_8564774469718261605[249] = 0;
   out_8564774469718261605[250] = 0;
   out_8564774469718261605[251] = 0;
   out_8564774469718261605[252] = 0;
   out_8564774469718261605[253] = 0;
   out_8564774469718261605[254] = 0;
   out_8564774469718261605[255] = 0;
   out_8564774469718261605[256] = 0;
   out_8564774469718261605[257] = 0;
   out_8564774469718261605[258] = 0;
   out_8564774469718261605[259] = 0;
   out_8564774469718261605[260] = 0;
   out_8564774469718261605[261] = 0;
   out_8564774469718261605[262] = 0;
   out_8564774469718261605[263] = 1.0;
   out_8564774469718261605[264] = 0;
   out_8564774469718261605[265] = 0;
   out_8564774469718261605[266] = 0;
   out_8564774469718261605[267] = 0;
   out_8564774469718261605[268] = 0;
   out_8564774469718261605[269] = 0;
   out_8564774469718261605[270] = 0;
   out_8564774469718261605[271] = 0;
   out_8564774469718261605[272] = 0;
   out_8564774469718261605[273] = 0;
   out_8564774469718261605[274] = 0;
   out_8564774469718261605[275] = 0;
   out_8564774469718261605[276] = 0;
   out_8564774469718261605[277] = 0;
   out_8564774469718261605[278] = 0;
   out_8564774469718261605[279] = 0;
   out_8564774469718261605[280] = 0;
   out_8564774469718261605[281] = 0;
   out_8564774469718261605[282] = 0;
   out_8564774469718261605[283] = 0;
   out_8564774469718261605[284] = 0;
   out_8564774469718261605[285] = 1.0;
   out_8564774469718261605[286] = 0;
   out_8564774469718261605[287] = 0;
   out_8564774469718261605[288] = 0;
   out_8564774469718261605[289] = 0;
   out_8564774469718261605[290] = 0;
   out_8564774469718261605[291] = 0;
   out_8564774469718261605[292] = 0;
   out_8564774469718261605[293] = 0;
   out_8564774469718261605[294] = 0;
   out_8564774469718261605[295] = 0;
   out_8564774469718261605[296] = 0;
   out_8564774469718261605[297] = 0;
   out_8564774469718261605[298] = 0;
   out_8564774469718261605[299] = 0;
   out_8564774469718261605[300] = 0;
   out_8564774469718261605[301] = 0;
   out_8564774469718261605[302] = 0;
   out_8564774469718261605[303] = 0;
   out_8564774469718261605[304] = 0;
   out_8564774469718261605[305] = 0;
   out_8564774469718261605[306] = 0;
   out_8564774469718261605[307] = 1.0;
   out_8564774469718261605[308] = 0;
   out_8564774469718261605[309] = 0;
   out_8564774469718261605[310] = 0;
   out_8564774469718261605[311] = 0;
   out_8564774469718261605[312] = 0;
   out_8564774469718261605[313] = 0;
   out_8564774469718261605[314] = 0;
   out_8564774469718261605[315] = 0;
   out_8564774469718261605[316] = 0;
   out_8564774469718261605[317] = 0;
   out_8564774469718261605[318] = 0;
   out_8564774469718261605[319] = 0;
   out_8564774469718261605[320] = 0;
   out_8564774469718261605[321] = 0;
   out_8564774469718261605[322] = 0;
   out_8564774469718261605[323] = 0;
   out_8564774469718261605[324] = 0;
   out_8564774469718261605[325] = 0;
   out_8564774469718261605[326] = 0;
   out_8564774469718261605[327] = 0;
   out_8564774469718261605[328] = 0;
   out_8564774469718261605[329] = 1.0;
   out_8564774469718261605[330] = 0;
   out_8564774469718261605[331] = 0;
   out_8564774469718261605[332] = 0;
   out_8564774469718261605[333] = 0;
   out_8564774469718261605[334] = 0;
   out_8564774469718261605[335] = 0;
   out_8564774469718261605[336] = 0;
   out_8564774469718261605[337] = 0;
   out_8564774469718261605[338] = 0;
   out_8564774469718261605[339] = 0;
   out_8564774469718261605[340] = 0;
   out_8564774469718261605[341] = 0;
   out_8564774469718261605[342] = 0;
   out_8564774469718261605[343] = 0;
   out_8564774469718261605[344] = 0;
   out_8564774469718261605[345] = 0;
   out_8564774469718261605[346] = 0;
   out_8564774469718261605[347] = 0;
   out_8564774469718261605[348] = 0;
   out_8564774469718261605[349] = 0;
   out_8564774469718261605[350] = 0;
   out_8564774469718261605[351] = 1.0;
   out_8564774469718261605[352] = 0;
   out_8564774469718261605[353] = 0;
   out_8564774469718261605[354] = 0;
   out_8564774469718261605[355] = 0;
   out_8564774469718261605[356] = 0;
   out_8564774469718261605[357] = 0;
   out_8564774469718261605[358] = 0;
   out_8564774469718261605[359] = 0;
   out_8564774469718261605[360] = 0;
   out_8564774469718261605[361] = 0;
   out_8564774469718261605[362] = 0;
   out_8564774469718261605[363] = 0;
   out_8564774469718261605[364] = 0;
   out_8564774469718261605[365] = 0;
   out_8564774469718261605[366] = 0;
   out_8564774469718261605[367] = 0;
   out_8564774469718261605[368] = 0;
   out_8564774469718261605[369] = 0;
   out_8564774469718261605[370] = 0;
   out_8564774469718261605[371] = 0;
   out_8564774469718261605[372] = 0;
   out_8564774469718261605[373] = 1.0;
   out_8564774469718261605[374] = 0;
   out_8564774469718261605[375] = 0;
   out_8564774469718261605[376] = 0;
   out_8564774469718261605[377] = 0;
   out_8564774469718261605[378] = 0;
   out_8564774469718261605[379] = 0;
   out_8564774469718261605[380] = 0;
   out_8564774469718261605[381] = 0;
   out_8564774469718261605[382] = 0;
   out_8564774469718261605[383] = 0;
   out_8564774469718261605[384] = 0;
   out_8564774469718261605[385] = 0;
   out_8564774469718261605[386] = 0;
   out_8564774469718261605[387] = 0;
   out_8564774469718261605[388] = 0;
   out_8564774469718261605[389] = 0;
   out_8564774469718261605[390] = 0;
   out_8564774469718261605[391] = 0;
   out_8564774469718261605[392] = 0;
   out_8564774469718261605[393] = 0;
   out_8564774469718261605[394] = 0;
   out_8564774469718261605[395] = 1.0;
   out_8564774469718261605[396] = 0;
   out_8564774469718261605[397] = 0;
   out_8564774469718261605[398] = 0;
   out_8564774469718261605[399] = 0;
   out_8564774469718261605[400] = 0;
   out_8564774469718261605[401] = 0;
   out_8564774469718261605[402] = 0;
   out_8564774469718261605[403] = 0;
   out_8564774469718261605[404] = 0;
   out_8564774469718261605[405] = 0;
   out_8564774469718261605[406] = 0;
   out_8564774469718261605[407] = 0;
   out_8564774469718261605[408] = 0;
   out_8564774469718261605[409] = 0;
   out_8564774469718261605[410] = 0;
   out_8564774469718261605[411] = 0;
   out_8564774469718261605[412] = 0;
   out_8564774469718261605[413] = 0;
   out_8564774469718261605[414] = 0;
   out_8564774469718261605[415] = 0;
   out_8564774469718261605[416] = 0;
   out_8564774469718261605[417] = 1.0;
   out_8564774469718261605[418] = 0;
   out_8564774469718261605[419] = 0;
   out_8564774469718261605[420] = 0;
   out_8564774469718261605[421] = 0;
   out_8564774469718261605[422] = 0;
   out_8564774469718261605[423] = 0;
   out_8564774469718261605[424] = 0;
   out_8564774469718261605[425] = 0;
   out_8564774469718261605[426] = 0;
   out_8564774469718261605[427] = 0;
   out_8564774469718261605[428] = 0;
   out_8564774469718261605[429] = 0;
   out_8564774469718261605[430] = 0;
   out_8564774469718261605[431] = 0;
   out_8564774469718261605[432] = 0;
   out_8564774469718261605[433] = 0;
   out_8564774469718261605[434] = 0;
   out_8564774469718261605[435] = 0;
   out_8564774469718261605[436] = 0;
   out_8564774469718261605[437] = 0;
   out_8564774469718261605[438] = 0;
   out_8564774469718261605[439] = 1.0;
   out_8564774469718261605[440] = 0;
   out_8564774469718261605[441] = 0;
   out_8564774469718261605[442] = 0;
   out_8564774469718261605[443] = 0;
   out_8564774469718261605[444] = 0;
   out_8564774469718261605[445] = 0;
   out_8564774469718261605[446] = 0;
   out_8564774469718261605[447] = 0;
   out_8564774469718261605[448] = 0;
   out_8564774469718261605[449] = 0;
   out_8564774469718261605[450] = 0;
   out_8564774469718261605[451] = 0;
   out_8564774469718261605[452] = 0;
   out_8564774469718261605[453] = 0;
   out_8564774469718261605[454] = 0;
   out_8564774469718261605[455] = 0;
   out_8564774469718261605[456] = 0;
   out_8564774469718261605[457] = 0;
   out_8564774469718261605[458] = 0;
   out_8564774469718261605[459] = 0;
   out_8564774469718261605[460] = 0;
   out_8564774469718261605[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2167758224172516708) {
   out_2167758224172516708[0] = dt*state[7] + state[0];
   out_2167758224172516708[1] = dt*state[8] + state[1];
   out_2167758224172516708[2] = dt*state[9] + state[2];
   out_2167758224172516708[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2167758224172516708[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2167758224172516708[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2167758224172516708[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2167758224172516708[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2167758224172516708[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2167758224172516708[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2167758224172516708[10] = state[10];
   out_2167758224172516708[11] = state[11];
   out_2167758224172516708[12] = state[12];
   out_2167758224172516708[13] = state[13];
   out_2167758224172516708[14] = state[14];
   out_2167758224172516708[15] = state[15];
   out_2167758224172516708[16] = state[16];
   out_2167758224172516708[17] = state[17];
   out_2167758224172516708[18] = state[18];
   out_2167758224172516708[19] = state[19];
   out_2167758224172516708[20] = state[20];
   out_2167758224172516708[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6604773883138368354) {
   out_6604773883138368354[0] = 1;
   out_6604773883138368354[1] = 0;
   out_6604773883138368354[2] = 0;
   out_6604773883138368354[3] = 0;
   out_6604773883138368354[4] = 0;
   out_6604773883138368354[5] = 0;
   out_6604773883138368354[6] = dt;
   out_6604773883138368354[7] = 0;
   out_6604773883138368354[8] = 0;
   out_6604773883138368354[9] = 0;
   out_6604773883138368354[10] = 0;
   out_6604773883138368354[11] = 0;
   out_6604773883138368354[12] = 0;
   out_6604773883138368354[13] = 0;
   out_6604773883138368354[14] = 0;
   out_6604773883138368354[15] = 0;
   out_6604773883138368354[16] = 0;
   out_6604773883138368354[17] = 0;
   out_6604773883138368354[18] = 0;
   out_6604773883138368354[19] = 0;
   out_6604773883138368354[20] = 0;
   out_6604773883138368354[21] = 0;
   out_6604773883138368354[22] = 1;
   out_6604773883138368354[23] = 0;
   out_6604773883138368354[24] = 0;
   out_6604773883138368354[25] = 0;
   out_6604773883138368354[26] = 0;
   out_6604773883138368354[27] = 0;
   out_6604773883138368354[28] = dt;
   out_6604773883138368354[29] = 0;
   out_6604773883138368354[30] = 0;
   out_6604773883138368354[31] = 0;
   out_6604773883138368354[32] = 0;
   out_6604773883138368354[33] = 0;
   out_6604773883138368354[34] = 0;
   out_6604773883138368354[35] = 0;
   out_6604773883138368354[36] = 0;
   out_6604773883138368354[37] = 0;
   out_6604773883138368354[38] = 0;
   out_6604773883138368354[39] = 0;
   out_6604773883138368354[40] = 0;
   out_6604773883138368354[41] = 0;
   out_6604773883138368354[42] = 0;
   out_6604773883138368354[43] = 0;
   out_6604773883138368354[44] = 1;
   out_6604773883138368354[45] = 0;
   out_6604773883138368354[46] = 0;
   out_6604773883138368354[47] = 0;
   out_6604773883138368354[48] = 0;
   out_6604773883138368354[49] = 0;
   out_6604773883138368354[50] = dt;
   out_6604773883138368354[51] = 0;
   out_6604773883138368354[52] = 0;
   out_6604773883138368354[53] = 0;
   out_6604773883138368354[54] = 0;
   out_6604773883138368354[55] = 0;
   out_6604773883138368354[56] = 0;
   out_6604773883138368354[57] = 0;
   out_6604773883138368354[58] = 0;
   out_6604773883138368354[59] = 0;
   out_6604773883138368354[60] = 0;
   out_6604773883138368354[61] = 0;
   out_6604773883138368354[62] = 0;
   out_6604773883138368354[63] = 0;
   out_6604773883138368354[64] = 0;
   out_6604773883138368354[65] = 0;
   out_6604773883138368354[66] = 1;
   out_6604773883138368354[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6604773883138368354[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6604773883138368354[69] = 0;
   out_6604773883138368354[70] = 0;
   out_6604773883138368354[71] = 0;
   out_6604773883138368354[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6604773883138368354[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6604773883138368354[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6604773883138368354[75] = 0;
   out_6604773883138368354[76] = 0;
   out_6604773883138368354[77] = 0;
   out_6604773883138368354[78] = 0;
   out_6604773883138368354[79] = 0;
   out_6604773883138368354[80] = 0;
   out_6604773883138368354[81] = 0;
   out_6604773883138368354[82] = 0;
   out_6604773883138368354[83] = 0;
   out_6604773883138368354[84] = 0;
   out_6604773883138368354[85] = 0;
   out_6604773883138368354[86] = 0;
   out_6604773883138368354[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6604773883138368354[88] = 1;
   out_6604773883138368354[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6604773883138368354[90] = 0;
   out_6604773883138368354[91] = 0;
   out_6604773883138368354[92] = 0;
   out_6604773883138368354[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6604773883138368354[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6604773883138368354[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6604773883138368354[96] = 0;
   out_6604773883138368354[97] = 0;
   out_6604773883138368354[98] = 0;
   out_6604773883138368354[99] = 0;
   out_6604773883138368354[100] = 0;
   out_6604773883138368354[101] = 0;
   out_6604773883138368354[102] = 0;
   out_6604773883138368354[103] = 0;
   out_6604773883138368354[104] = 0;
   out_6604773883138368354[105] = 0;
   out_6604773883138368354[106] = 0;
   out_6604773883138368354[107] = 0;
   out_6604773883138368354[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6604773883138368354[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6604773883138368354[110] = 1;
   out_6604773883138368354[111] = 0;
   out_6604773883138368354[112] = 0;
   out_6604773883138368354[113] = 0;
   out_6604773883138368354[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6604773883138368354[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6604773883138368354[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6604773883138368354[117] = 0;
   out_6604773883138368354[118] = 0;
   out_6604773883138368354[119] = 0;
   out_6604773883138368354[120] = 0;
   out_6604773883138368354[121] = 0;
   out_6604773883138368354[122] = 0;
   out_6604773883138368354[123] = 0;
   out_6604773883138368354[124] = 0;
   out_6604773883138368354[125] = 0;
   out_6604773883138368354[126] = 0;
   out_6604773883138368354[127] = 0;
   out_6604773883138368354[128] = 0;
   out_6604773883138368354[129] = 0;
   out_6604773883138368354[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6604773883138368354[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6604773883138368354[132] = 1;
   out_6604773883138368354[133] = 0;
   out_6604773883138368354[134] = 0;
   out_6604773883138368354[135] = 0;
   out_6604773883138368354[136] = 0;
   out_6604773883138368354[137] = 0;
   out_6604773883138368354[138] = 0;
   out_6604773883138368354[139] = 0;
   out_6604773883138368354[140] = 0;
   out_6604773883138368354[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6604773883138368354[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6604773883138368354[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6604773883138368354[144] = 0;
   out_6604773883138368354[145] = 0;
   out_6604773883138368354[146] = 0;
   out_6604773883138368354[147] = 0;
   out_6604773883138368354[148] = 0;
   out_6604773883138368354[149] = 0;
   out_6604773883138368354[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6604773883138368354[151] = 0;
   out_6604773883138368354[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6604773883138368354[153] = 0;
   out_6604773883138368354[154] = 1;
   out_6604773883138368354[155] = 0;
   out_6604773883138368354[156] = 0;
   out_6604773883138368354[157] = 0;
   out_6604773883138368354[158] = 0;
   out_6604773883138368354[159] = 0;
   out_6604773883138368354[160] = 0;
   out_6604773883138368354[161] = 0;
   out_6604773883138368354[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6604773883138368354[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6604773883138368354[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6604773883138368354[165] = 0;
   out_6604773883138368354[166] = 0;
   out_6604773883138368354[167] = 0;
   out_6604773883138368354[168] = 0;
   out_6604773883138368354[169] = 0;
   out_6604773883138368354[170] = 0;
   out_6604773883138368354[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6604773883138368354[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6604773883138368354[173] = 0;
   out_6604773883138368354[174] = 0;
   out_6604773883138368354[175] = 0;
   out_6604773883138368354[176] = 1;
   out_6604773883138368354[177] = 0;
   out_6604773883138368354[178] = 0;
   out_6604773883138368354[179] = 0;
   out_6604773883138368354[180] = 0;
   out_6604773883138368354[181] = 0;
   out_6604773883138368354[182] = 0;
   out_6604773883138368354[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6604773883138368354[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6604773883138368354[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6604773883138368354[186] = 0;
   out_6604773883138368354[187] = 0;
   out_6604773883138368354[188] = 0;
   out_6604773883138368354[189] = 0;
   out_6604773883138368354[190] = 0;
   out_6604773883138368354[191] = 0;
   out_6604773883138368354[192] = 0;
   out_6604773883138368354[193] = 0;
   out_6604773883138368354[194] = 0;
   out_6604773883138368354[195] = 0;
   out_6604773883138368354[196] = 0;
   out_6604773883138368354[197] = 0;
   out_6604773883138368354[198] = 1;
   out_6604773883138368354[199] = 0;
   out_6604773883138368354[200] = 0;
   out_6604773883138368354[201] = 0;
   out_6604773883138368354[202] = 0;
   out_6604773883138368354[203] = 0;
   out_6604773883138368354[204] = 0;
   out_6604773883138368354[205] = 0;
   out_6604773883138368354[206] = 0;
   out_6604773883138368354[207] = 0;
   out_6604773883138368354[208] = 0;
   out_6604773883138368354[209] = 0;
   out_6604773883138368354[210] = 0;
   out_6604773883138368354[211] = 0;
   out_6604773883138368354[212] = 0;
   out_6604773883138368354[213] = 0;
   out_6604773883138368354[214] = 0;
   out_6604773883138368354[215] = 0;
   out_6604773883138368354[216] = 0;
   out_6604773883138368354[217] = 0;
   out_6604773883138368354[218] = 0;
   out_6604773883138368354[219] = 0;
   out_6604773883138368354[220] = 1;
   out_6604773883138368354[221] = 0;
   out_6604773883138368354[222] = 0;
   out_6604773883138368354[223] = 0;
   out_6604773883138368354[224] = 0;
   out_6604773883138368354[225] = 0;
   out_6604773883138368354[226] = 0;
   out_6604773883138368354[227] = 0;
   out_6604773883138368354[228] = 0;
   out_6604773883138368354[229] = 0;
   out_6604773883138368354[230] = 0;
   out_6604773883138368354[231] = 0;
   out_6604773883138368354[232] = 0;
   out_6604773883138368354[233] = 0;
   out_6604773883138368354[234] = 0;
   out_6604773883138368354[235] = 0;
   out_6604773883138368354[236] = 0;
   out_6604773883138368354[237] = 0;
   out_6604773883138368354[238] = 0;
   out_6604773883138368354[239] = 0;
   out_6604773883138368354[240] = 0;
   out_6604773883138368354[241] = 0;
   out_6604773883138368354[242] = 1;
   out_6604773883138368354[243] = 0;
   out_6604773883138368354[244] = 0;
   out_6604773883138368354[245] = 0;
   out_6604773883138368354[246] = 0;
   out_6604773883138368354[247] = 0;
   out_6604773883138368354[248] = 0;
   out_6604773883138368354[249] = 0;
   out_6604773883138368354[250] = 0;
   out_6604773883138368354[251] = 0;
   out_6604773883138368354[252] = 0;
   out_6604773883138368354[253] = 0;
   out_6604773883138368354[254] = 0;
   out_6604773883138368354[255] = 0;
   out_6604773883138368354[256] = 0;
   out_6604773883138368354[257] = 0;
   out_6604773883138368354[258] = 0;
   out_6604773883138368354[259] = 0;
   out_6604773883138368354[260] = 0;
   out_6604773883138368354[261] = 0;
   out_6604773883138368354[262] = 0;
   out_6604773883138368354[263] = 0;
   out_6604773883138368354[264] = 1;
   out_6604773883138368354[265] = 0;
   out_6604773883138368354[266] = 0;
   out_6604773883138368354[267] = 0;
   out_6604773883138368354[268] = 0;
   out_6604773883138368354[269] = 0;
   out_6604773883138368354[270] = 0;
   out_6604773883138368354[271] = 0;
   out_6604773883138368354[272] = 0;
   out_6604773883138368354[273] = 0;
   out_6604773883138368354[274] = 0;
   out_6604773883138368354[275] = 0;
   out_6604773883138368354[276] = 0;
   out_6604773883138368354[277] = 0;
   out_6604773883138368354[278] = 0;
   out_6604773883138368354[279] = 0;
   out_6604773883138368354[280] = 0;
   out_6604773883138368354[281] = 0;
   out_6604773883138368354[282] = 0;
   out_6604773883138368354[283] = 0;
   out_6604773883138368354[284] = 0;
   out_6604773883138368354[285] = 0;
   out_6604773883138368354[286] = 1;
   out_6604773883138368354[287] = 0;
   out_6604773883138368354[288] = 0;
   out_6604773883138368354[289] = 0;
   out_6604773883138368354[290] = 0;
   out_6604773883138368354[291] = 0;
   out_6604773883138368354[292] = 0;
   out_6604773883138368354[293] = 0;
   out_6604773883138368354[294] = 0;
   out_6604773883138368354[295] = 0;
   out_6604773883138368354[296] = 0;
   out_6604773883138368354[297] = 0;
   out_6604773883138368354[298] = 0;
   out_6604773883138368354[299] = 0;
   out_6604773883138368354[300] = 0;
   out_6604773883138368354[301] = 0;
   out_6604773883138368354[302] = 0;
   out_6604773883138368354[303] = 0;
   out_6604773883138368354[304] = 0;
   out_6604773883138368354[305] = 0;
   out_6604773883138368354[306] = 0;
   out_6604773883138368354[307] = 0;
   out_6604773883138368354[308] = 1;
   out_6604773883138368354[309] = 0;
   out_6604773883138368354[310] = 0;
   out_6604773883138368354[311] = 0;
   out_6604773883138368354[312] = 0;
   out_6604773883138368354[313] = 0;
   out_6604773883138368354[314] = 0;
   out_6604773883138368354[315] = 0;
   out_6604773883138368354[316] = 0;
   out_6604773883138368354[317] = 0;
   out_6604773883138368354[318] = 0;
   out_6604773883138368354[319] = 0;
   out_6604773883138368354[320] = 0;
   out_6604773883138368354[321] = 0;
   out_6604773883138368354[322] = 0;
   out_6604773883138368354[323] = 0;
   out_6604773883138368354[324] = 0;
   out_6604773883138368354[325] = 0;
   out_6604773883138368354[326] = 0;
   out_6604773883138368354[327] = 0;
   out_6604773883138368354[328] = 0;
   out_6604773883138368354[329] = 0;
   out_6604773883138368354[330] = 1;
   out_6604773883138368354[331] = 0;
   out_6604773883138368354[332] = 0;
   out_6604773883138368354[333] = 0;
   out_6604773883138368354[334] = 0;
   out_6604773883138368354[335] = 0;
   out_6604773883138368354[336] = 0;
   out_6604773883138368354[337] = 0;
   out_6604773883138368354[338] = 0;
   out_6604773883138368354[339] = 0;
   out_6604773883138368354[340] = 0;
   out_6604773883138368354[341] = 0;
   out_6604773883138368354[342] = 0;
   out_6604773883138368354[343] = 0;
   out_6604773883138368354[344] = 0;
   out_6604773883138368354[345] = 0;
   out_6604773883138368354[346] = 0;
   out_6604773883138368354[347] = 0;
   out_6604773883138368354[348] = 0;
   out_6604773883138368354[349] = 0;
   out_6604773883138368354[350] = 0;
   out_6604773883138368354[351] = 0;
   out_6604773883138368354[352] = 1;
   out_6604773883138368354[353] = 0;
   out_6604773883138368354[354] = 0;
   out_6604773883138368354[355] = 0;
   out_6604773883138368354[356] = 0;
   out_6604773883138368354[357] = 0;
   out_6604773883138368354[358] = 0;
   out_6604773883138368354[359] = 0;
   out_6604773883138368354[360] = 0;
   out_6604773883138368354[361] = 0;
   out_6604773883138368354[362] = 0;
   out_6604773883138368354[363] = 0;
   out_6604773883138368354[364] = 0;
   out_6604773883138368354[365] = 0;
   out_6604773883138368354[366] = 0;
   out_6604773883138368354[367] = 0;
   out_6604773883138368354[368] = 0;
   out_6604773883138368354[369] = 0;
   out_6604773883138368354[370] = 0;
   out_6604773883138368354[371] = 0;
   out_6604773883138368354[372] = 0;
   out_6604773883138368354[373] = 0;
   out_6604773883138368354[374] = 1;
   out_6604773883138368354[375] = 0;
   out_6604773883138368354[376] = 0;
   out_6604773883138368354[377] = 0;
   out_6604773883138368354[378] = 0;
   out_6604773883138368354[379] = 0;
   out_6604773883138368354[380] = 0;
   out_6604773883138368354[381] = 0;
   out_6604773883138368354[382] = 0;
   out_6604773883138368354[383] = 0;
   out_6604773883138368354[384] = 0;
   out_6604773883138368354[385] = 0;
   out_6604773883138368354[386] = 0;
   out_6604773883138368354[387] = 0;
   out_6604773883138368354[388] = 0;
   out_6604773883138368354[389] = 0;
   out_6604773883138368354[390] = 0;
   out_6604773883138368354[391] = 0;
   out_6604773883138368354[392] = 0;
   out_6604773883138368354[393] = 0;
   out_6604773883138368354[394] = 0;
   out_6604773883138368354[395] = 0;
   out_6604773883138368354[396] = 1;
   out_6604773883138368354[397] = 0;
   out_6604773883138368354[398] = 0;
   out_6604773883138368354[399] = 0;
   out_6604773883138368354[400] = 0;
   out_6604773883138368354[401] = 0;
   out_6604773883138368354[402] = 0;
   out_6604773883138368354[403] = 0;
   out_6604773883138368354[404] = 0;
   out_6604773883138368354[405] = 0;
   out_6604773883138368354[406] = 0;
   out_6604773883138368354[407] = 0;
   out_6604773883138368354[408] = 0;
   out_6604773883138368354[409] = 0;
   out_6604773883138368354[410] = 0;
   out_6604773883138368354[411] = 0;
   out_6604773883138368354[412] = 0;
   out_6604773883138368354[413] = 0;
   out_6604773883138368354[414] = 0;
   out_6604773883138368354[415] = 0;
   out_6604773883138368354[416] = 0;
   out_6604773883138368354[417] = 0;
   out_6604773883138368354[418] = 1;
   out_6604773883138368354[419] = 0;
   out_6604773883138368354[420] = 0;
   out_6604773883138368354[421] = 0;
   out_6604773883138368354[422] = 0;
   out_6604773883138368354[423] = 0;
   out_6604773883138368354[424] = 0;
   out_6604773883138368354[425] = 0;
   out_6604773883138368354[426] = 0;
   out_6604773883138368354[427] = 0;
   out_6604773883138368354[428] = 0;
   out_6604773883138368354[429] = 0;
   out_6604773883138368354[430] = 0;
   out_6604773883138368354[431] = 0;
   out_6604773883138368354[432] = 0;
   out_6604773883138368354[433] = 0;
   out_6604773883138368354[434] = 0;
   out_6604773883138368354[435] = 0;
   out_6604773883138368354[436] = 0;
   out_6604773883138368354[437] = 0;
   out_6604773883138368354[438] = 0;
   out_6604773883138368354[439] = 0;
   out_6604773883138368354[440] = 1;
}
void h_4(double *state, double *unused, double *out_5070441118667315187) {
   out_5070441118667315187[0] = state[10] + state[13];
   out_5070441118667315187[1] = state[11] + state[14];
   out_5070441118667315187[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7142926226124309892) {
   out_7142926226124309892[0] = 0;
   out_7142926226124309892[1] = 0;
   out_7142926226124309892[2] = 0;
   out_7142926226124309892[3] = 0;
   out_7142926226124309892[4] = 0;
   out_7142926226124309892[5] = 0;
   out_7142926226124309892[6] = 0;
   out_7142926226124309892[7] = 0;
   out_7142926226124309892[8] = 0;
   out_7142926226124309892[9] = 0;
   out_7142926226124309892[10] = 1;
   out_7142926226124309892[11] = 0;
   out_7142926226124309892[12] = 0;
   out_7142926226124309892[13] = 1;
   out_7142926226124309892[14] = 0;
   out_7142926226124309892[15] = 0;
   out_7142926226124309892[16] = 0;
   out_7142926226124309892[17] = 0;
   out_7142926226124309892[18] = 0;
   out_7142926226124309892[19] = 0;
   out_7142926226124309892[20] = 0;
   out_7142926226124309892[21] = 0;
   out_7142926226124309892[22] = 0;
   out_7142926226124309892[23] = 0;
   out_7142926226124309892[24] = 0;
   out_7142926226124309892[25] = 0;
   out_7142926226124309892[26] = 0;
   out_7142926226124309892[27] = 0;
   out_7142926226124309892[28] = 0;
   out_7142926226124309892[29] = 0;
   out_7142926226124309892[30] = 0;
   out_7142926226124309892[31] = 0;
   out_7142926226124309892[32] = 0;
   out_7142926226124309892[33] = 1;
   out_7142926226124309892[34] = 0;
   out_7142926226124309892[35] = 0;
   out_7142926226124309892[36] = 1;
   out_7142926226124309892[37] = 0;
   out_7142926226124309892[38] = 0;
   out_7142926226124309892[39] = 0;
   out_7142926226124309892[40] = 0;
   out_7142926226124309892[41] = 0;
   out_7142926226124309892[42] = 0;
   out_7142926226124309892[43] = 0;
   out_7142926226124309892[44] = 0;
   out_7142926226124309892[45] = 0;
   out_7142926226124309892[46] = 0;
   out_7142926226124309892[47] = 0;
   out_7142926226124309892[48] = 0;
   out_7142926226124309892[49] = 0;
   out_7142926226124309892[50] = 0;
   out_7142926226124309892[51] = 0;
   out_7142926226124309892[52] = 0;
   out_7142926226124309892[53] = 0;
   out_7142926226124309892[54] = 0;
   out_7142926226124309892[55] = 0;
   out_7142926226124309892[56] = 1;
   out_7142926226124309892[57] = 0;
   out_7142926226124309892[58] = 0;
   out_7142926226124309892[59] = 1;
   out_7142926226124309892[60] = 0;
   out_7142926226124309892[61] = 0;
   out_7142926226124309892[62] = 0;
   out_7142926226124309892[63] = 0;
   out_7142926226124309892[64] = 0;
   out_7142926226124309892[65] = 0;
}
void h_9(double *state, double *unused, double *out_1124175015924690318) {
   out_1124175015924690318[0] = state[10];
   out_1124175015924690318[1] = state[11];
   out_1124175015924690318[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7146650111230464241) {
   out_7146650111230464241[0] = 0;
   out_7146650111230464241[1] = 0;
   out_7146650111230464241[2] = 0;
   out_7146650111230464241[3] = 0;
   out_7146650111230464241[4] = 0;
   out_7146650111230464241[5] = 0;
   out_7146650111230464241[6] = 0;
   out_7146650111230464241[7] = 0;
   out_7146650111230464241[8] = 0;
   out_7146650111230464241[9] = 0;
   out_7146650111230464241[10] = 1;
   out_7146650111230464241[11] = 0;
   out_7146650111230464241[12] = 0;
   out_7146650111230464241[13] = 0;
   out_7146650111230464241[14] = 0;
   out_7146650111230464241[15] = 0;
   out_7146650111230464241[16] = 0;
   out_7146650111230464241[17] = 0;
   out_7146650111230464241[18] = 0;
   out_7146650111230464241[19] = 0;
   out_7146650111230464241[20] = 0;
   out_7146650111230464241[21] = 0;
   out_7146650111230464241[22] = 0;
   out_7146650111230464241[23] = 0;
   out_7146650111230464241[24] = 0;
   out_7146650111230464241[25] = 0;
   out_7146650111230464241[26] = 0;
   out_7146650111230464241[27] = 0;
   out_7146650111230464241[28] = 0;
   out_7146650111230464241[29] = 0;
   out_7146650111230464241[30] = 0;
   out_7146650111230464241[31] = 0;
   out_7146650111230464241[32] = 0;
   out_7146650111230464241[33] = 1;
   out_7146650111230464241[34] = 0;
   out_7146650111230464241[35] = 0;
   out_7146650111230464241[36] = 0;
   out_7146650111230464241[37] = 0;
   out_7146650111230464241[38] = 0;
   out_7146650111230464241[39] = 0;
   out_7146650111230464241[40] = 0;
   out_7146650111230464241[41] = 0;
   out_7146650111230464241[42] = 0;
   out_7146650111230464241[43] = 0;
   out_7146650111230464241[44] = 0;
   out_7146650111230464241[45] = 0;
   out_7146650111230464241[46] = 0;
   out_7146650111230464241[47] = 0;
   out_7146650111230464241[48] = 0;
   out_7146650111230464241[49] = 0;
   out_7146650111230464241[50] = 0;
   out_7146650111230464241[51] = 0;
   out_7146650111230464241[52] = 0;
   out_7146650111230464241[53] = 0;
   out_7146650111230464241[54] = 0;
   out_7146650111230464241[55] = 0;
   out_7146650111230464241[56] = 1;
   out_7146650111230464241[57] = 0;
   out_7146650111230464241[58] = 0;
   out_7146650111230464241[59] = 0;
   out_7146650111230464241[60] = 0;
   out_7146650111230464241[61] = 0;
   out_7146650111230464241[62] = 0;
   out_7146650111230464241[63] = 0;
   out_7146650111230464241[64] = 0;
   out_7146650111230464241[65] = 0;
}
void h_10(double *state, double *unused, double *out_2109137017318231990) {
   out_2109137017318231990[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2109137017318231990[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2109137017318231990[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5552727043354966226) {
   out_5552727043354966226[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5552727043354966226[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5552727043354966226[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5552727043354966226[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5552727043354966226[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5552727043354966226[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5552727043354966226[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5552727043354966226[7] = 0;
   out_5552727043354966226[8] = 0;
   out_5552727043354966226[9] = 0;
   out_5552727043354966226[10] = 0;
   out_5552727043354966226[11] = 0;
   out_5552727043354966226[12] = 0;
   out_5552727043354966226[13] = 0;
   out_5552727043354966226[14] = 0;
   out_5552727043354966226[15] = 0;
   out_5552727043354966226[16] = 1;
   out_5552727043354966226[17] = 0;
   out_5552727043354966226[18] = 0;
   out_5552727043354966226[19] = 1;
   out_5552727043354966226[20] = 0;
   out_5552727043354966226[21] = 0;
   out_5552727043354966226[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5552727043354966226[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5552727043354966226[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5552727043354966226[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5552727043354966226[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5552727043354966226[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5552727043354966226[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5552727043354966226[29] = 0;
   out_5552727043354966226[30] = 0;
   out_5552727043354966226[31] = 0;
   out_5552727043354966226[32] = 0;
   out_5552727043354966226[33] = 0;
   out_5552727043354966226[34] = 0;
   out_5552727043354966226[35] = 0;
   out_5552727043354966226[36] = 0;
   out_5552727043354966226[37] = 0;
   out_5552727043354966226[38] = 0;
   out_5552727043354966226[39] = 1;
   out_5552727043354966226[40] = 0;
   out_5552727043354966226[41] = 0;
   out_5552727043354966226[42] = 1;
   out_5552727043354966226[43] = 0;
   out_5552727043354966226[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5552727043354966226[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5552727043354966226[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5552727043354966226[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5552727043354966226[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5552727043354966226[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5552727043354966226[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5552727043354966226[51] = 0;
   out_5552727043354966226[52] = 0;
   out_5552727043354966226[53] = 0;
   out_5552727043354966226[54] = 0;
   out_5552727043354966226[55] = 0;
   out_5552727043354966226[56] = 0;
   out_5552727043354966226[57] = 0;
   out_5552727043354966226[58] = 0;
   out_5552727043354966226[59] = 0;
   out_5552727043354966226[60] = 0;
   out_5552727043354966226[61] = 0;
   out_5552727043354966226[62] = 1;
   out_5552727043354966226[63] = 0;
   out_5552727043354966226[64] = 0;
   out_5552727043354966226[65] = 1;
}
void h_12(double *state, double *unused, double *out_5291604573526602269) {
   out_5291604573526602269[0] = state[0];
   out_5291604573526602269[1] = state[1];
   out_5291604573526602269[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6521827201076716225) {
   out_6521827201076716225[0] = 1;
   out_6521827201076716225[1] = 0;
   out_6521827201076716225[2] = 0;
   out_6521827201076716225[3] = 0;
   out_6521827201076716225[4] = 0;
   out_6521827201076716225[5] = 0;
   out_6521827201076716225[6] = 0;
   out_6521827201076716225[7] = 0;
   out_6521827201076716225[8] = 0;
   out_6521827201076716225[9] = 0;
   out_6521827201076716225[10] = 0;
   out_6521827201076716225[11] = 0;
   out_6521827201076716225[12] = 0;
   out_6521827201076716225[13] = 0;
   out_6521827201076716225[14] = 0;
   out_6521827201076716225[15] = 0;
   out_6521827201076716225[16] = 0;
   out_6521827201076716225[17] = 0;
   out_6521827201076716225[18] = 0;
   out_6521827201076716225[19] = 0;
   out_6521827201076716225[20] = 0;
   out_6521827201076716225[21] = 0;
   out_6521827201076716225[22] = 0;
   out_6521827201076716225[23] = 1;
   out_6521827201076716225[24] = 0;
   out_6521827201076716225[25] = 0;
   out_6521827201076716225[26] = 0;
   out_6521827201076716225[27] = 0;
   out_6521827201076716225[28] = 0;
   out_6521827201076716225[29] = 0;
   out_6521827201076716225[30] = 0;
   out_6521827201076716225[31] = 0;
   out_6521827201076716225[32] = 0;
   out_6521827201076716225[33] = 0;
   out_6521827201076716225[34] = 0;
   out_6521827201076716225[35] = 0;
   out_6521827201076716225[36] = 0;
   out_6521827201076716225[37] = 0;
   out_6521827201076716225[38] = 0;
   out_6521827201076716225[39] = 0;
   out_6521827201076716225[40] = 0;
   out_6521827201076716225[41] = 0;
   out_6521827201076716225[42] = 0;
   out_6521827201076716225[43] = 0;
   out_6521827201076716225[44] = 0;
   out_6521827201076716225[45] = 0;
   out_6521827201076716225[46] = 1;
   out_6521827201076716225[47] = 0;
   out_6521827201076716225[48] = 0;
   out_6521827201076716225[49] = 0;
   out_6521827201076716225[50] = 0;
   out_6521827201076716225[51] = 0;
   out_6521827201076716225[52] = 0;
   out_6521827201076716225[53] = 0;
   out_6521827201076716225[54] = 0;
   out_6521827201076716225[55] = 0;
   out_6521827201076716225[56] = 0;
   out_6521827201076716225[57] = 0;
   out_6521827201076716225[58] = 0;
   out_6521827201076716225[59] = 0;
   out_6521827201076716225[60] = 0;
   out_6521827201076716225[61] = 0;
   out_6521827201076716225[62] = 0;
   out_6521827201076716225[63] = 0;
   out_6521827201076716225[64] = 0;
   out_6521827201076716225[65] = 0;
}
void h_35(double *state, double *unused, double *out_2118741506585347044) {
   out_2118741506585347044[0] = state[7];
   out_2118741506585347044[1] = state[8];
   out_2118741506585347044[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3776264168751702516) {
   out_3776264168751702516[0] = 0;
   out_3776264168751702516[1] = 0;
   out_3776264168751702516[2] = 0;
   out_3776264168751702516[3] = 0;
   out_3776264168751702516[4] = 0;
   out_3776264168751702516[5] = 0;
   out_3776264168751702516[6] = 0;
   out_3776264168751702516[7] = 1;
   out_3776264168751702516[8] = 0;
   out_3776264168751702516[9] = 0;
   out_3776264168751702516[10] = 0;
   out_3776264168751702516[11] = 0;
   out_3776264168751702516[12] = 0;
   out_3776264168751702516[13] = 0;
   out_3776264168751702516[14] = 0;
   out_3776264168751702516[15] = 0;
   out_3776264168751702516[16] = 0;
   out_3776264168751702516[17] = 0;
   out_3776264168751702516[18] = 0;
   out_3776264168751702516[19] = 0;
   out_3776264168751702516[20] = 0;
   out_3776264168751702516[21] = 0;
   out_3776264168751702516[22] = 0;
   out_3776264168751702516[23] = 0;
   out_3776264168751702516[24] = 0;
   out_3776264168751702516[25] = 0;
   out_3776264168751702516[26] = 0;
   out_3776264168751702516[27] = 0;
   out_3776264168751702516[28] = 0;
   out_3776264168751702516[29] = 0;
   out_3776264168751702516[30] = 1;
   out_3776264168751702516[31] = 0;
   out_3776264168751702516[32] = 0;
   out_3776264168751702516[33] = 0;
   out_3776264168751702516[34] = 0;
   out_3776264168751702516[35] = 0;
   out_3776264168751702516[36] = 0;
   out_3776264168751702516[37] = 0;
   out_3776264168751702516[38] = 0;
   out_3776264168751702516[39] = 0;
   out_3776264168751702516[40] = 0;
   out_3776264168751702516[41] = 0;
   out_3776264168751702516[42] = 0;
   out_3776264168751702516[43] = 0;
   out_3776264168751702516[44] = 0;
   out_3776264168751702516[45] = 0;
   out_3776264168751702516[46] = 0;
   out_3776264168751702516[47] = 0;
   out_3776264168751702516[48] = 0;
   out_3776264168751702516[49] = 0;
   out_3776264168751702516[50] = 0;
   out_3776264168751702516[51] = 0;
   out_3776264168751702516[52] = 0;
   out_3776264168751702516[53] = 1;
   out_3776264168751702516[54] = 0;
   out_3776264168751702516[55] = 0;
   out_3776264168751702516[56] = 0;
   out_3776264168751702516[57] = 0;
   out_3776264168751702516[58] = 0;
   out_3776264168751702516[59] = 0;
   out_3776264168751702516[60] = 0;
   out_3776264168751702516[61] = 0;
   out_3776264168751702516[62] = 0;
   out_3776264168751702516[63] = 0;
   out_3776264168751702516[64] = 0;
   out_3776264168751702516[65] = 0;
}
void h_32(double *state, double *unused, double *out_3360608214289959379) {
   out_3360608214289959379[0] = state[3];
   out_3360608214289959379[1] = state[4];
   out_3360608214289959379[2] = state[5];
   out_3360608214289959379[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7755615401263732744) {
   out_7755615401263732744[0] = 0;
   out_7755615401263732744[1] = 0;
   out_7755615401263732744[2] = 0;
   out_7755615401263732744[3] = 1;
   out_7755615401263732744[4] = 0;
   out_7755615401263732744[5] = 0;
   out_7755615401263732744[6] = 0;
   out_7755615401263732744[7] = 0;
   out_7755615401263732744[8] = 0;
   out_7755615401263732744[9] = 0;
   out_7755615401263732744[10] = 0;
   out_7755615401263732744[11] = 0;
   out_7755615401263732744[12] = 0;
   out_7755615401263732744[13] = 0;
   out_7755615401263732744[14] = 0;
   out_7755615401263732744[15] = 0;
   out_7755615401263732744[16] = 0;
   out_7755615401263732744[17] = 0;
   out_7755615401263732744[18] = 0;
   out_7755615401263732744[19] = 0;
   out_7755615401263732744[20] = 0;
   out_7755615401263732744[21] = 0;
   out_7755615401263732744[22] = 0;
   out_7755615401263732744[23] = 0;
   out_7755615401263732744[24] = 0;
   out_7755615401263732744[25] = 0;
   out_7755615401263732744[26] = 1;
   out_7755615401263732744[27] = 0;
   out_7755615401263732744[28] = 0;
   out_7755615401263732744[29] = 0;
   out_7755615401263732744[30] = 0;
   out_7755615401263732744[31] = 0;
   out_7755615401263732744[32] = 0;
   out_7755615401263732744[33] = 0;
   out_7755615401263732744[34] = 0;
   out_7755615401263732744[35] = 0;
   out_7755615401263732744[36] = 0;
   out_7755615401263732744[37] = 0;
   out_7755615401263732744[38] = 0;
   out_7755615401263732744[39] = 0;
   out_7755615401263732744[40] = 0;
   out_7755615401263732744[41] = 0;
   out_7755615401263732744[42] = 0;
   out_7755615401263732744[43] = 0;
   out_7755615401263732744[44] = 0;
   out_7755615401263732744[45] = 0;
   out_7755615401263732744[46] = 0;
   out_7755615401263732744[47] = 0;
   out_7755615401263732744[48] = 0;
   out_7755615401263732744[49] = 1;
   out_7755615401263732744[50] = 0;
   out_7755615401263732744[51] = 0;
   out_7755615401263732744[52] = 0;
   out_7755615401263732744[53] = 0;
   out_7755615401263732744[54] = 0;
   out_7755615401263732744[55] = 0;
   out_7755615401263732744[56] = 0;
   out_7755615401263732744[57] = 0;
   out_7755615401263732744[58] = 0;
   out_7755615401263732744[59] = 0;
   out_7755615401263732744[60] = 0;
   out_7755615401263732744[61] = 0;
   out_7755615401263732744[62] = 0;
   out_7755615401263732744[63] = 0;
   out_7755615401263732744[64] = 0;
   out_7755615401263732744[65] = 0;
   out_7755615401263732744[66] = 0;
   out_7755615401263732744[67] = 0;
   out_7755615401263732744[68] = 0;
   out_7755615401263732744[69] = 0;
   out_7755615401263732744[70] = 0;
   out_7755615401263732744[71] = 0;
   out_7755615401263732744[72] = 1;
   out_7755615401263732744[73] = 0;
   out_7755615401263732744[74] = 0;
   out_7755615401263732744[75] = 0;
   out_7755615401263732744[76] = 0;
   out_7755615401263732744[77] = 0;
   out_7755615401263732744[78] = 0;
   out_7755615401263732744[79] = 0;
   out_7755615401263732744[80] = 0;
   out_7755615401263732744[81] = 0;
   out_7755615401263732744[82] = 0;
   out_7755615401263732744[83] = 0;
   out_7755615401263732744[84] = 0;
   out_7755615401263732744[85] = 0;
   out_7755615401263732744[86] = 0;
   out_7755615401263732744[87] = 0;
}
void h_13(double *state, double *unused, double *out_5506979747554367956) {
   out_5506979747554367956[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5506979747554367956[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5506979747554367956[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8591558027073825108) {
   out_8591558027073825108[0] = 0;
   out_8591558027073825108[1] = 0;
   out_8591558027073825108[2] = 0;
   out_8591558027073825108[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8591558027073825108[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8591558027073825108[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8591558027073825108[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8591558027073825108[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8591558027073825108[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8591558027073825108[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8591558027073825108[10] = 0;
   out_8591558027073825108[11] = 0;
   out_8591558027073825108[12] = 0;
   out_8591558027073825108[13] = 0;
   out_8591558027073825108[14] = 0;
   out_8591558027073825108[15] = 0;
   out_8591558027073825108[16] = 0;
   out_8591558027073825108[17] = 0;
   out_8591558027073825108[18] = 0;
   out_8591558027073825108[19] = 0;
   out_8591558027073825108[20] = 0;
   out_8591558027073825108[21] = 0;
   out_8591558027073825108[22] = 0;
   out_8591558027073825108[23] = 0;
   out_8591558027073825108[24] = 0;
   out_8591558027073825108[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8591558027073825108[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8591558027073825108[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8591558027073825108[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8591558027073825108[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8591558027073825108[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8591558027073825108[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8591558027073825108[32] = 0;
   out_8591558027073825108[33] = 0;
   out_8591558027073825108[34] = 0;
   out_8591558027073825108[35] = 0;
   out_8591558027073825108[36] = 0;
   out_8591558027073825108[37] = 0;
   out_8591558027073825108[38] = 0;
   out_8591558027073825108[39] = 0;
   out_8591558027073825108[40] = 0;
   out_8591558027073825108[41] = 0;
   out_8591558027073825108[42] = 0;
   out_8591558027073825108[43] = 0;
   out_8591558027073825108[44] = 0;
   out_8591558027073825108[45] = 0;
   out_8591558027073825108[46] = 0;
   out_8591558027073825108[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8591558027073825108[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8591558027073825108[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8591558027073825108[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8591558027073825108[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8591558027073825108[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8591558027073825108[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8591558027073825108[54] = 0;
   out_8591558027073825108[55] = 0;
   out_8591558027073825108[56] = 0;
   out_8591558027073825108[57] = 0;
   out_8591558027073825108[58] = 0;
   out_8591558027073825108[59] = 0;
   out_8591558027073825108[60] = 0;
   out_8591558027073825108[61] = 0;
   out_8591558027073825108[62] = 0;
   out_8591558027073825108[63] = 0;
   out_8591558027073825108[64] = 0;
   out_8591558027073825108[65] = 0;
}
void h_14(double *state, double *unused, double *out_1124175015924690318) {
   out_1124175015924690318[0] = state[10];
   out_1124175015924690318[1] = state[11];
   out_1124175015924690318[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7146650111230464241) {
   out_7146650111230464241[0] = 0;
   out_7146650111230464241[1] = 0;
   out_7146650111230464241[2] = 0;
   out_7146650111230464241[3] = 0;
   out_7146650111230464241[4] = 0;
   out_7146650111230464241[5] = 0;
   out_7146650111230464241[6] = 0;
   out_7146650111230464241[7] = 0;
   out_7146650111230464241[8] = 0;
   out_7146650111230464241[9] = 0;
   out_7146650111230464241[10] = 1;
   out_7146650111230464241[11] = 0;
   out_7146650111230464241[12] = 0;
   out_7146650111230464241[13] = 0;
   out_7146650111230464241[14] = 0;
   out_7146650111230464241[15] = 0;
   out_7146650111230464241[16] = 0;
   out_7146650111230464241[17] = 0;
   out_7146650111230464241[18] = 0;
   out_7146650111230464241[19] = 0;
   out_7146650111230464241[20] = 0;
   out_7146650111230464241[21] = 0;
   out_7146650111230464241[22] = 0;
   out_7146650111230464241[23] = 0;
   out_7146650111230464241[24] = 0;
   out_7146650111230464241[25] = 0;
   out_7146650111230464241[26] = 0;
   out_7146650111230464241[27] = 0;
   out_7146650111230464241[28] = 0;
   out_7146650111230464241[29] = 0;
   out_7146650111230464241[30] = 0;
   out_7146650111230464241[31] = 0;
   out_7146650111230464241[32] = 0;
   out_7146650111230464241[33] = 1;
   out_7146650111230464241[34] = 0;
   out_7146650111230464241[35] = 0;
   out_7146650111230464241[36] = 0;
   out_7146650111230464241[37] = 0;
   out_7146650111230464241[38] = 0;
   out_7146650111230464241[39] = 0;
   out_7146650111230464241[40] = 0;
   out_7146650111230464241[41] = 0;
   out_7146650111230464241[42] = 0;
   out_7146650111230464241[43] = 0;
   out_7146650111230464241[44] = 0;
   out_7146650111230464241[45] = 0;
   out_7146650111230464241[46] = 0;
   out_7146650111230464241[47] = 0;
   out_7146650111230464241[48] = 0;
   out_7146650111230464241[49] = 0;
   out_7146650111230464241[50] = 0;
   out_7146650111230464241[51] = 0;
   out_7146650111230464241[52] = 0;
   out_7146650111230464241[53] = 0;
   out_7146650111230464241[54] = 0;
   out_7146650111230464241[55] = 0;
   out_7146650111230464241[56] = 1;
   out_7146650111230464241[57] = 0;
   out_7146650111230464241[58] = 0;
   out_7146650111230464241[59] = 0;
   out_7146650111230464241[60] = 0;
   out_7146650111230464241[61] = 0;
   out_7146650111230464241[62] = 0;
   out_7146650111230464241[63] = 0;
   out_7146650111230464241[64] = 0;
   out_7146650111230464241[65] = 0;
}
void h_33(double *state, double *unused, double *out_5570441104795240755) {
   out_5570441104795240755[0] = state[16];
   out_5570441104795240755[1] = state[17];
   out_5570441104795240755[2] = state[18];
}
void H_33(double *state, double *unused, double *out_625707164112844912) {
   out_625707164112844912[0] = 0;
   out_625707164112844912[1] = 0;
   out_625707164112844912[2] = 0;
   out_625707164112844912[3] = 0;
   out_625707164112844912[4] = 0;
   out_625707164112844912[5] = 0;
   out_625707164112844912[6] = 0;
   out_625707164112844912[7] = 0;
   out_625707164112844912[8] = 0;
   out_625707164112844912[9] = 0;
   out_625707164112844912[10] = 0;
   out_625707164112844912[11] = 0;
   out_625707164112844912[12] = 0;
   out_625707164112844912[13] = 0;
   out_625707164112844912[14] = 0;
   out_625707164112844912[15] = 0;
   out_625707164112844912[16] = 1;
   out_625707164112844912[17] = 0;
   out_625707164112844912[18] = 0;
   out_625707164112844912[19] = 0;
   out_625707164112844912[20] = 0;
   out_625707164112844912[21] = 0;
   out_625707164112844912[22] = 0;
   out_625707164112844912[23] = 0;
   out_625707164112844912[24] = 0;
   out_625707164112844912[25] = 0;
   out_625707164112844912[26] = 0;
   out_625707164112844912[27] = 0;
   out_625707164112844912[28] = 0;
   out_625707164112844912[29] = 0;
   out_625707164112844912[30] = 0;
   out_625707164112844912[31] = 0;
   out_625707164112844912[32] = 0;
   out_625707164112844912[33] = 0;
   out_625707164112844912[34] = 0;
   out_625707164112844912[35] = 0;
   out_625707164112844912[36] = 0;
   out_625707164112844912[37] = 0;
   out_625707164112844912[38] = 0;
   out_625707164112844912[39] = 1;
   out_625707164112844912[40] = 0;
   out_625707164112844912[41] = 0;
   out_625707164112844912[42] = 0;
   out_625707164112844912[43] = 0;
   out_625707164112844912[44] = 0;
   out_625707164112844912[45] = 0;
   out_625707164112844912[46] = 0;
   out_625707164112844912[47] = 0;
   out_625707164112844912[48] = 0;
   out_625707164112844912[49] = 0;
   out_625707164112844912[50] = 0;
   out_625707164112844912[51] = 0;
   out_625707164112844912[52] = 0;
   out_625707164112844912[53] = 0;
   out_625707164112844912[54] = 0;
   out_625707164112844912[55] = 0;
   out_625707164112844912[56] = 0;
   out_625707164112844912[57] = 0;
   out_625707164112844912[58] = 0;
   out_625707164112844912[59] = 0;
   out_625707164112844912[60] = 0;
   out_625707164112844912[61] = 0;
   out_625707164112844912[62] = 1;
   out_625707164112844912[63] = 0;
   out_625707164112844912[64] = 0;
   out_625707164112844912[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5472226391913428582) {
  H(in_vec, out_5472226391913428582);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6508029974320597245) {
  err_fun(nom_x, delta_x, out_6508029974320597245);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2019856750264798283) {
  inv_err_fun(nom_x, true_x, out_2019856750264798283);
}
void live_H_mod_fun(double *state, double *out_8564774469718261605) {
  H_mod_fun(state, out_8564774469718261605);
}
void live_f_fun(double *state, double dt, double *out_2167758224172516708) {
  f_fun(state,  dt, out_2167758224172516708);
}
void live_F_fun(double *state, double dt, double *out_6604773883138368354) {
  F_fun(state,  dt, out_6604773883138368354);
}
void live_h_4(double *state, double *unused, double *out_5070441118667315187) {
  h_4(state, unused, out_5070441118667315187);
}
void live_H_4(double *state, double *unused, double *out_7142926226124309892) {
  H_4(state, unused, out_7142926226124309892);
}
void live_h_9(double *state, double *unused, double *out_1124175015924690318) {
  h_9(state, unused, out_1124175015924690318);
}
void live_H_9(double *state, double *unused, double *out_7146650111230464241) {
  H_9(state, unused, out_7146650111230464241);
}
void live_h_10(double *state, double *unused, double *out_2109137017318231990) {
  h_10(state, unused, out_2109137017318231990);
}
void live_H_10(double *state, double *unused, double *out_5552727043354966226) {
  H_10(state, unused, out_5552727043354966226);
}
void live_h_12(double *state, double *unused, double *out_5291604573526602269) {
  h_12(state, unused, out_5291604573526602269);
}
void live_H_12(double *state, double *unused, double *out_6521827201076716225) {
  H_12(state, unused, out_6521827201076716225);
}
void live_h_35(double *state, double *unused, double *out_2118741506585347044) {
  h_35(state, unused, out_2118741506585347044);
}
void live_H_35(double *state, double *unused, double *out_3776264168751702516) {
  H_35(state, unused, out_3776264168751702516);
}
void live_h_32(double *state, double *unused, double *out_3360608214289959379) {
  h_32(state, unused, out_3360608214289959379);
}
void live_H_32(double *state, double *unused, double *out_7755615401263732744) {
  H_32(state, unused, out_7755615401263732744);
}
void live_h_13(double *state, double *unused, double *out_5506979747554367956) {
  h_13(state, unused, out_5506979747554367956);
}
void live_H_13(double *state, double *unused, double *out_8591558027073825108) {
  H_13(state, unused, out_8591558027073825108);
}
void live_h_14(double *state, double *unused, double *out_1124175015924690318) {
  h_14(state, unused, out_1124175015924690318);
}
void live_H_14(double *state, double *unused, double *out_7146650111230464241) {
  H_14(state, unused, out_7146650111230464241);
}
void live_h_33(double *state, double *unused, double *out_5570441104795240755) {
  h_33(state, unused, out_5570441104795240755);
}
void live_H_33(double *state, double *unused, double *out_625707164112844912) {
  H_33(state, unused, out_625707164112844912);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
